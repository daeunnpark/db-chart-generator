{"map":"{\"version\":3,\"sources\":[\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/SearchBar.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/UpdateChartsDialog.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/App.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/serviceWorker.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/index.js\"],\"names\":[\"Component\",\"require\",\"Highcharts\",\"Chart\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"parseData\",\"counts\",\"countFrequency\",\"data\",\"newColumn\",\"column\",\"newCategories\",\"keys\",\"newBarChartData\",\"values\",\"newPieChartData\",\"parseData_helper\",\"arr\",\"forEach\",\"key\",\"dataObject\",\"name\",\"y\",\"push\",\"i\",\"length\",\"setChartData\",\"setState\",\"barChart\",\"title\",\"text\",\"subtitle\",\"source\",\"xAxis\",\"visible\",\"categories\",\"yAxis\",\"series\",\"pieChart\",\"state\",\"defaultOptions_bar\",\"defaultOptions_pie\",\"prevProps\",\"_this$parseData\",\"react_default\",\"a\",\"createElement\",\"className\",\"highcharts_react_min_default\",\"highcharts\",\"options\",\"chart\",\"type\",\"min\",\"tickInterval\",\"tooltip\",\"headerFormat\",\"pointFormat\",\"footerFormat\",\"shared\",\"useHTML\",\"plotOptions\",\"pointPadding\",\"borderWidth\",\"groupPadding\",\"shadow\",\"showInLegend\",\"colorByPoint\",\"lang\",\"noData\",\"style\",\"fontWeight\",\"fontSize\",\"color\",\"plotBackgroundColor\",\"plotBorderWidth\",\"plotShadow\",\"pie\",\"allowPointSelect\",\"cursor\",\"dataLabels\",\"enabled\",\"format\",\"UpdateChartsDialog\",\"handleChange\",\"event\",\"value\",\"target\",\"handleOpen\",\"open\",\"handleOk\",\"setSelectedCategoryData\",\"handleClose\",\"render\",\"Button\",\"variant\",\"onClick\",\"id\",\"Dialog\",\"disableBackdropClick\",\"disableEscapeKeyDown\",\"onClose\",\"DialogTitle\",\"DialogContent\",\"FormControl\",\"component\",\"FormLabel\",\"RadioGroup\",\"aria-label\",\"onChange\",\"columns\",\"map\",\"FormControlLabel\",\"field\",\"control\",\"Radio\",\"label\",\"DialogActions\",\"Table\",\"search\",\"parseCSV\",\"Papa\",\"parse\",\"files\",\"header\",\"skipEmptyLines\",\"dynamicTyping\",\"complete\",\"updateTable\",\"parseData_table\",\"result\",\"parsedColumns\",\"parsedData\",\"meta\",\"fields\",\"toUpperCase\",\"toLowerCase\",\"cellStyle\",\"console\",\"log\",\"newData\",\"hasOwnProperty\",\"newColumns\",\"_this$parseData_table\",\"addAllDataToDb\",\"temp\",\"assertThisInitialized\",\"addDataToDb\",\"fetch\",\"Request\",\"method\",\"redirect\",\"headers\",\"Headers\",\"Content-Type\",\"credentials\",\"body\",\"JSON\",\"stringify\",\"then\",\"response\",\"ok\",\"window\",\"alert\",\"status\",\"Error\",\"catch\",\"error\",\"message\",\"updateDataInDb\",\"deleteDataFromDb\",\"category\",\"sort\",\"compare\",\"setData\",\"accept\",\"dist_default\",\"showTitle\",\"toolbarButtonAlignment\",\"headerStyle\",\"addRowPosition\",\"isLoading\",\"editable\",\"onRowAdd\",\"Promise\",\"resolve\",\"reject\",\"setTimeout\",\"onRowUpdate\",\"oldData\",\"index\",\"indexOf\",\"onRowDelete\",\"splice\",\"deleteFromDb\",\"components_UpdateChartsDialog\",\"b\",\"padding\",\"App\",\"newState\",\"Fragment\",\"components_Table\",\"components_Chart\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n\\nclass SearchBar extends Component{\\n  constructor(props){\\n    super(props);\\n\\n    // Default values\\n     this.state = {\\n      keyword: ''\\n    };\\n\\n  }\\n\\n  onChange = (event) => {\\n\\n    event.preventDefault();\\n\\n    const target = event.target;\\n\\n    // For checkbox type, value is a boolean\\n    const value = target.value;\\n    const name = target.name;\\n\\n    this.setState({\\n      [name]: value\\n    });\\n\\n\\n  }\\n  onSubmit = (event) => {\\n    event.preventDefault();\\n    console.log(this.state.keyword);\\n\\n  }\\n  render(){\\n    return  <div className = \\\"searchEngine\\\">\\n\\n              <h3>Search</h3>\\n\\n              <form onSubmit={this.onSubmit}>\\n                <div>\\n                    <div className = \\\"container\\\">\\n                      <div id = \\\"div1\\\" className=\\\"form-group\\\">\\n                        <label className = \\\"label\\\">\\n                          Text\\n                        </label><br/>\\n                        <input\\n                          className = \\\"inputClass\\\"\\n                          type=\\\"text\\\"\\n                          name = \\\"keyword\\\"\\n                          value = {this.state.keyword}\\n                          onChange={this.onChange}\\n                          required\\n                          />\\n                      </div>\\n\\n                  </div>\\n\\n                  <button type=\\\"submit\\\" className=\\\"btn btn-primary\\\">SEARCH</button>\\n\\n                </div>\\n              </form>\\n\\n            </div>\\n\\n    }\\n\\n\\n}\\nexport default SearchBar;\\n\",\"import React, { Component } from 'react';\\nimport Highcharts from 'highcharts'\\nimport HighchartsReact from 'highcharts-react-official'\\n\\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\\nrequire('highcharts/modules/no-data-to-display.js')(Highcharts);\\n\\nclass Chart extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      barChart: defaultOptions_bar,\\n      pieChart: defaultOptions_pie\\n    };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps !== this.props) {\\n      const {\\n        newColumn,\\n        newCategories,\\n        newBarChartData,\\n        newPieChartData\\n      } = this.parseData(this.props);\\n      this.setChartData(newColumn, newCategories, newBarChartData, newPieChartData);\\n    }\\n  }\\n\\n  parseData = (props) => {\\n    var counts = this.countFrequency(props.data);\\n    return {\\n      newColumn: props.column,\\n      newCategories: Object.keys(counts),\\n      newBarChartData: Object.values(counts),\\n      newPieChartData: this.parseData_helper(counts)\\n    };\\n  }\\n\\n  parseData_helper = (counts) => {\\n    var arr = [];\\n    Object.keys(counts).forEach(function(key) {\\n      let dataObject = {};\\n      dataObject = {\\n        name: key,\\n        y: counts[key]\\n      }\\n      arr.push(dataObject);\\n    });\\n    return arr;\\n  }\\n\\n  countFrequency = (arr) => {\\n    var counts = {};\\n    for (var i = 0; i < arr.length; i++) {\\n      var data = arr[i];\\n      counts[data] = counts[data] ? counts[data] + 1 : 1;\\n    }\\n    return counts;\\n  }\\n\\n\\n  setChartData = (newColumn, newCategories, newBarChartData, newPieChartData) => {\\n    this.setState({\\n      barChart: {\\n        title: {\\n          text: newColumn\\n        },\\n        subtitle: {\\n          text: source\\n        },\\n        xAxis: {\\n          visible:true,\\n          categories: newCategories\\n        },\\n        yAxis: {\\n          visible:true,\\n        },\\n        series: [{\\n          name : newColumn,\\n          data: newBarChartData\\n        }]\\n      },\\n      pieChart: {\\n        title: {\\n          text: newColumn\\n        },\\n        subtitle: {\\n          text: source\\n        },\\n        series: [{\\n          name: newColumn,\\n          data: newPieChartData\\n        }]\\n      }\\n    });\\n  }\\n\\n\\n  render(){\\n    return(\\n      <div>\\n        <h3>Charts</h3>\\n        <div className = 'chartContainer'>\\n        <HighchartsReact\\n          highcharts={Highcharts}\\n          options = {this.state.barChart}/>\\n        </div>\\n        <div className = 'chartContainer'>\\n        <HighchartsReact\\n          highcharts={Highcharts}\\n          options = {this.state.pieChart}/>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst source = 'Source: kaggle';\\nconst defaultOptions_bar = {\\n  chart: {\\n    type: 'column'\\n  },\\n  title: {\\n    text: 'Bar Chart'\\n  },\\n  subtitle: {\\n    text: ''\\n  },\\n  xAxis: {\\n    visible:false,\\n    categories: []\\n  },\\n  yAxis: {\\n    visible:false,\\n    min: 0,\\n    tickInterval: 1,\\n    title: {\\n      text: 'count(person)'\\n    }\\n  },\\n  tooltip: {\\n    headerFormat: '<span style=\\\"font-size:10px\\\">{point.key}</span><table>',\\n    pointFormat: '<tr><td style=\\\"color:{series.color};padding:0\\\">{series.name}: </td>' +\\n      '<td style=\\\"padding:0\\\"><b>{point.y}</b></td></tr>',\\n    footerFormat: '</table>',\\n    shared: true,\\n    useHTML: true\\n  },\\n  plotOptions: {\\n    column: {\\n      pointPadding: 0,\\n      borderWidth: 1,\\n      groupPadding: 0.2,\\n      shadow: false\\n    }\\n  },\\n  series: [{\\n    showInLegend: false,\\n    colorByPoint: true,\\n    data: []\\n  }],\\n  lang: {\\n        noData: \\\"No Data to Display\\\"\\n    },\\n  noData: {\\n      style: {\\n          fontWeight: 'bold',\\n          fontSize: '15px',\\n          color: '#303030'\\n      }\\n  }\\n}\\n\\nconst defaultOptions_pie = {\\n  chart: {\\n    plotBackgroundColor: null,\\n    plotBorderWidth: null,\\n    plotShadow: false,\\n    type: 'pie'\\n  },\\n  title: {\\n    text: 'Pie Chart'\\n  },\\n  subtitle: {\\n    text: ''\\n  },\\n  tooltip: {\\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\\n  },\\n  plotOptions: {\\n    pie: {\\n      allowPointSelect: true,\\n      cursor: 'pointer',\\n      dataLabels: {\\n        enabled: true,\\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\\n      }\\n    }\\n  },\\n  series: [{\\n    colorByPoint: true,\\n    data: []\\n  }],\\n  lang: {\\n        noData: \\\"No Data to Display\\\"\\n    },\\n  noData: {\\n      style: {\\n          fontWeight: 'bold',\\n          fontSize: '15px',\\n          color: '#303030'\\n      }\\n  }\\n}\\n\\n\\n\\n\\nexport default Chart;\\n\",\"import React, { Component } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\n\\n\\nclass UpdateChartsDialog extends Component{\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      open: false,\\n      value: \\\"\\\"\\n    };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps !== this.props) {\\n      this.setState({\\n        columns: this.props.columns\\n      })\\n    }\\n  }\\n\\n  handleChange = (event) => {\\n    this.setState({\\n      value: event.target.value\\n    });\\n  }\\n\\n  handleOpen = () => {\\n    this.setState({\\n      open: true\\n    });\\n  }\\n\\n  handleOk = () => {\\n    this.setState({\\n      open: false\\n    });\\n    this.props.setSelectedCategoryData(this.state.value);\\n  }\\n\\n  handleClose = () => {\\n    this.setState({\\n      open: false\\n    });\\n  }\\n\\n\\n  render = () => {\\n      return (\\n          <div>\\n            <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={this.handleOpen} id =\\\"updateChartsBtn\\\"> Update Charts</Button>\\n            <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\\n              <DialogTitle>Choose a category to generate charts.</DialogTitle>\\n              <DialogContent>\\n                <form>\\n                <FormControl component=\\\"fieldset\\\">\\n                  <FormLabel component=\\\"legend\\\">Category</FormLabel>\\n                  <RadioGroup\\n                    aria-label=\\\"Category\\\"\\n                    name=\\\"category\\\"\\n                    value={this.state.value}\\n                    onChange={this.handleChange}>\\n                    { this.props.columns.map((column) =>(\\n                        <FormControlLabel key = {column.field} value={column.field} control={<Radio />} label={column.title} /> ))\\n                    }\\n                  </RadioGroup>\\n                </FormControl>\\n                </form>\\n              </DialogContent>\\n              <DialogActions>\\n                <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                  Cancel\\n                </Button>\\n                <Button onClick={this.handleOk} color=\\\"primary\\\">\\n                  Ok\\n                </Button>\\n              </DialogActions>\\n            </Dialog>\\n          </div>\\n        );\\n      }\\n}\\n\\n\\nexport default UpdateChartsDialog;\\n\",\"import React, { Component } from 'react';\\n\\nimport Papa from 'papaparse';\\n\\nimport MaterialTable from 'material-table';\\nimport { default as Dialog } from './UpdateChartsDialog';\\nimport \\\"../App.css\\\"\\n\\n\\nclass Table extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [],\\n      data: [],\\n      isLoading: false,\\n    };\\n  }\\n\\n  search = () => {\\n\\n  }\\n\\n  parseCSV = (event) => {\\n    Papa.parse(event.target.files[0], {\\n      header: true,\\n      skipEmptyLines: true,\\n      dynamicTyping: true,\\n      complete: this.updateTable\\n    });\\n  }\\n\\n  parseData_table = (result) => {\\n\\n    var parsedColumns = [];\\n    var parsedData = [];\\n\\n    result.meta.fields.forEach(function(field) {\\n      parsedColumns.push({\\n        title: field.toUpperCase(),\\n        field: field.toLowerCase(),\\n        cellStyle: style\\n      });\\n    });\\n    console.log(parsedColumns[0]);\\n    (parsedColumns[0])['editable']='onAdd';\\n\\n\\n    result.data.forEach(function(data) {\\n      let newData = {};\\n      for (var key in data) {\\n        if (data.hasOwnProperty(key)) {\\n          newData[key.toLowerCase()] = data[key]\\n        }\\n      }\\n      parsedData.push(newData);\\n    });\\n\\n    return {\\n        newColumns : parsedColumns,\\n        newData: parsedData\\n    };\\n\\n  }\\n\\n  updateTable = (result) => {\\n    const{ newColumns, newData } = this.parseData_table(result);\\n    this.setState({\\n      columns: newColumns,\\n      data: newData\\n    });\\n    this.addAllDataToDb();\\n  }\\n/*\\n  handleErrors = (response) => {\\n    var success = true;\\n    console.log(response.status);\\n    console.log(response.ok);\\n    if(response.status ==400){\\n      window.alert(\\\"PassengerID should be unique.\\\");\\n      success= false;\\n    }\\n    return sucess;\\n}\\n*/\\n  addAllDataToDb = () => {\\n    var temp = this;\\n    this.state.data.map(function(data) {\\n      if(temp.addDataToDb(data)===0){\\n        console.log(\\\"reading stopped\\\");\\n        return;\\n      }\\n    });\\n  }\\n\\n  addDataToDb = (data) => {\\n    var success = 1;\\n    fetch(new Request('/db/addData', {\\n        method: 'POST',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(function(response) {\\n        if(!response.ok){ //response.status ==400\\n        window.alert('Something went wrong in the database: ' + response.status);\\n          throw new Error('Server response wasn\\\\'t OK');\\n          return 0;\\n        }\\n      }).then(function(response) {\\n        return 1;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n        success = 0;\\n        throw new Error('Server response wasn\\\\'t OK');\\n      });\\n\\n  }\\n\\n\\n  updateDataInDb = (data) => {\\n    fetch(new Request('/db/updateData', {\\n        method: 'POST',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(response => console.log)\\n      .catch(error => console.error)\\n  }\\n\\n  deleteDataFromDb = (data) => {\\n    fetch(new Request('/db/deleteData', {\\n        method: 'POST',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(response => console.log)\\n      .catch(error => console.error)\\n  }\\n\\n\\n  setSelectedCategoryData = (category) => {\\n    var newData = [];\\n    this.state.data.forEach(function(data) {\\n      newData.push(\\n        data[category]\\n      );\\n    });\\n    newData.sort(this.compare);\\n    this.props.setData({\\n      column: category.toUpperCase(),\\n      data: newData\\n    });\\n  }\\n\\n  compare(a, b) {\\n    if (typeof(a) == \\\"number\\\") {\\n      return a - b;\\n    } else {\\n      if (a > b) {\\n        return 1;\\n      }\\n      if (b > a) {\\n        return -1;\\n      }\\n      return 0;\\n    }\\n  }\\n\\n    render = () => {\\n        return (\\n          <div>\\n            <h2>DB chart generator</h2>\\n              <div id = \\\"fileUploaderContainer\\\">\\n                <input\\n                  accept=\\\".csv\\\"\\n                  type=\\\"file\\\"\\n                  onChange = {this.parseCSV}\\n                />\\n              </div>\\n            <h3>Database Table</h3>\\n            <MaterialTable\\n              options = {{\\n                  showTitle: false,\\n                  toolbarButtonAlignment: \\\"left\\\",\\n                  headerStyle: style,\\n                  addRowPosition:'first'\\n              }}\\n              isLoading = {this.state.isLoading}\\n              columns = {this.state.columns}\\n              data=  {this.state.data}\\n              search = {true}\\n              editable = {{\\n               onRowAdd: newData =>\\n                 new Promise((resolve, reject) => {\\n                   setTimeout(() => {\\n                     {\\n                       const data = this.state.data;\\n                       data.push(newData);\\n                        console.log(this.addDataToDb(newData));\\n                       if(this.addDataToDb(newData)===1){\\n                            console.log(\\\"sucessss\\\");\\n                      this.setState({ data }, () => resolve());\\n                      }\\n                     }\\n                     resolve()\\n                   }, 1000)\\n                 }),\\n               onRowUpdate: (newData, oldData) =>\\n                 new Promise((resolve, reject) => {\\n                   setTimeout(() => {\\n                     {\\n                       const data = this.state.data;\\n                       const index = data.indexOf(oldData);\\n                       data[index] = newData;\\n                       this.updateDataInDb(newData);\\n                       this.setState({ data }, () => resolve());\\n                     }\\n                     resolve()\\n                   }, 1000)\\n                 }),\\n               onRowDelete: oldData =>\\n                 new Promise((resolve, reject) => {\\n                   setTimeout(() => {\\n                     {\\n                       let data = this.state.data;\\n                       const index = data.indexOf(oldData);\\n                       data.splice(index, 1);\\n                       this.deleteFromDb(oldData);\\n                       this.setState({ data }, () => resolve());\\n                     }\\n                     resolve()\\n                   }, 1000)\\n                 }),\\n               }}\\n             />\\n          <Dialog columns = {this.state.columns} setSelectedCategoryData = {this.setSelectedCategoryData}/>\\n        </div>\\n        );\\n      }\\n}\\n\\nconst style = { padding:'0px' }\\n\\nexport default Table;\\n\",\"import React, { Component } from 'react';\\nimport 'whatwg-fetch';\\nimport './App.css';\\nimport SearchBar from \\\"./components/SearchBar\\\"\\nimport Chart from \\\"./components/Chart\\\"\\nimport Table from \\\"./components/Table\\\"\\n\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      column: [],\\n      data: [],\\n    };\\n  }\\n\\n  setData = (newState) => {\\n    this.setState(newState);\\n  }\\n\\n  render = () => {\\n    return (\\n      <React.Fragment>\\n        <div className=\\\"App\\\">\\n          <Table setData = {this.setData}/>\\n          <Chart column = {this.state.column} data = {this.state.data}/>\\n        </div>\\n      </React.Fragment>\\n    )\\n  }\\n}\\n\\nexport default App;\\n\\n\\n/**/\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{183:function(e,t,a){},235:function(e,t,a){e.exports=a(320)},240:function(e,t,a){},320:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),r=a(13),i=a.n(r),l=(a(240),a(50)),s=a(55),c=a(51),u=a(54),d=(a(241),a(183),a(221)),p=a(45),h=(n.Component,a(62)),m=a.n(h),f=a(178),b=a.n(f);a(242)(m.a),a(243)(m.a);var g=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).parseData=function(e){var t=a.countFrequency(e.data);return{newColumn:e.column,newCategories:Object.keys(t),newBarChartData:Object.values(t),newPieChartData:a.parseData_helper(t)}},a.parseData_helper=function(e){var t=[];return Object.keys(e).forEach(function(a){var n;n={name:a,y:e[a]},t.push(n)}),t},a.countFrequency=function(e){for(var t={},a=0;a<e.length;a++){var n=e[a];t[n]=t[n]?t[n]+1:1}return t},a.setChartData=function(e,t,n,o){a.setState({barChart:{title:{text:e},subtitle:{text:w},xAxis:{visible:!0,categories:t},yAxis:{visible:!0},series:[{name:e,data:n}]},pieChart:{title:{text:e},subtitle:{text:w},series:[{name:e,data:o}]}})},a.state={barChart:C,pieChart:D},a}return Object(u.a)(t,e),Object(p.a)(t,[{key:\"componentDidUpdate\",value:function(e){if(e!==this.props){var t=this.parseData(this.props),a=t.newColumn,n=t.newCategories,o=t.newBarChartData,r=t.newPieChartData;this.setChartData(a,n,o,r)}}},{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h3\",null,\"Charts\"),o.a.createElement(\"div\",{className:\"chartContainer\"},o.a.createElement(b.a,{highcharts:m.a,options:this.state.barChart})),o.a.createElement(\"div\",{className:\"chartContainer\"},o.a.createElement(b.a,{highcharts:m.a,options:this.state.pieChart})))}}]),t}(n.Component),w=\"Source: kaggle\",C={chart:{type:\"column\"},title:{text:\"Bar Chart\"},subtitle:{text:\"\"},xAxis:{visible:!1,categories:[]},yAxis:{visible:!1,min:0,tickInterval:1,title:{text:\"count(person)\"}},tooltip:{headerFormat:'<span style=\"font-size:10px\">{point.key}</span><table>',pointFormat:'<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td><td style=\"padding:0\"><b>{point.y}</b></td></tr>',footerFormat:\"</table>\",shared:!0,useHTML:!0},plotOptions:{column:{pointPadding:0,borderWidth:1,groupPadding:.2,shadow:!1}},series:[{showInLegend:!1,colorByPoint:!0,data:[]}],lang:{noData:\"No Data to Display\"},noData:{style:{fontWeight:\"bold\",fontSize:\"15px\",color:\"#303030\"}}},D={chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1,type:\"pie\"},title:{text:\"Pie Chart\"},subtitle:{text:\"\"},tooltip:{pointFormat:\"{series.name}: <b>{point.percentage:.1f}%</b>\"},plotOptions:{pie:{allowPointSelect:!0,cursor:\"pointer\",dataLabels:{enabled:!0,format:\"<b>{point.name}</b>: {point.percentage:.1f} %\"}}},series:[{colorByPoint:!0,data:[]}],lang:{noData:\"No Data to Display\"},noData:{style:{fontWeight:\"bold\",fontSize:\"15px\",color:\"#303030\"}}},y=g,v=a(65),E=a(222),O=a.n(E),S=a(223),j=a.n(S),k=a(190),x=a(192),T=a(194),P=a(195),B=a(196),A=a(219),F=a(200),L=a(170),N=a(167),R=a(197),U=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).handleChange=function(e){a.setState({value:e.target.value})},a.handleOpen=function(){a.setState({open:!0})},a.handleOk=function(){a.setState({open:!1}),a.props.setSelectedCategoryData(a.state.value)},a.handleClose=function(){a.setState({open:!1})},a.render=function(){return o.a.createElement(\"div\",null,o.a.createElement(k.a,{variant:\"contained\",color:\"primary\",onClick:a.handleOpen,id:\"updateChartsBtn\"},\" Update Charts\"),o.a.createElement(x.a,{disableBackdropClick:!0,disableEscapeKeyDown:!0,open:a.state.open,onClose:a.handleClose},o.a.createElement(B.a,null,\"Choose a category to generate charts.\"),o.a.createElement(P.a,null,o.a.createElement(\"form\",null,o.a.createElement(N.a,{component:\"fieldset\"},o.a.createElement(L.a,{component:\"legend\"},\"Category\"),o.a.createElement(F.a,{\"aria-label\":\"Category\",name:\"category\",value:a.state.value,onChange:a.handleChange},a.props.columns.map(function(e){return o.a.createElement(R.a,{key:e.field,value:e.field,control:o.a.createElement(A.a,null),label:e.title})}))))),o.a.createElement(T.a,null,o.a.createElement(k.a,{onClick:a.handleClose,color:\"primary\"},\"Cancel\"),o.a.createElement(k.a,{onClick:a.handleOk,color:\"primary\"},\"Ok\"))))},a.state={open:!1,value:\"\"},a}return Object(u.a)(t,e),Object(p.a)(t,[{key:\"componentDidUpdate\",value:function(e){e!==this.props&&this.setState({columns:this.props.columns})}}]),t}(n.Component),W=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).search=function(){},a.parseCSV=function(e){O.a.parse(e.target.files[0],{header:!0,skipEmptyLines:!0,dynamicTyping:!0,complete:a.updateTable})},a.parseData_table=function(e){var t=[],a=[];return e.meta.fields.forEach(function(e){t.push({title:e.toUpperCase(),field:e.toLowerCase(),cellStyle:q})}),console.log(t[0]),t[0].editable=\"onAdd\",e.data.forEach(function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n.toLowerCase()]=e[n]);a.push(t)}),{newColumns:t,newData:a}},a.updateTable=function(e){var t=a.parseData_table(e),n=t.newColumns,o=t.newData;a.setState({columns:n,data:o}),a.addAllDataToDb()},a.addAllDataToDb=function(){var e=Object(v.a)(a);a.state.data.map(function(t){0!==e.addDataToDb(t)||console.log(\"reading stopped\")})},a.addDataToDb=function(e){fetch(new Request(\"/db/addData\",{method:\"POST\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){if(!e.ok)throw window.alert(\"Something went wrong in the database: \"+e.status),new Error(\"Server response wasn't OK\")}).then(function(e){return 1}).catch(function(e){throw window.alert(\"There has been a problem with your fetch operation: \"+e.message),0,new Error(\"Server response wasn't OK\")})},a.updateDataInDb=function(e){fetch(new Request(\"/db/updateData\",{method:\"POST\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){return console.log}).catch(function(e){return console.error})},a.deleteDataFromDb=function(e){fetch(new Request(\"/db/deleteData\",{method:\"POST\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){return console.log}).catch(function(e){return console.error})},a.setSelectedCategoryData=function(e){var t=[];a.state.data.forEach(function(a){t.push(a[e])}),t.sort(a.compare),a.props.setData({column:e.toUpperCase(),data:t})},a.render=function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h2\",null,\"DB chart generator\"),o.a.createElement(\"div\",{id:\"fileUploaderContainer\"},o.a.createElement(\"input\",{accept:\".csv\",type:\"file\",onChange:a.parseCSV})),o.a.createElement(\"h3\",null,\"Database Table\"),o.a.createElement(j.a,{options:{showTitle:!1,toolbarButtonAlignment:\"left\",headerStyle:q,addRowPosition:\"first\"},isLoading:a.state.isLoading,columns:a.state.columns,data:a.state.data,search:!0,editable:{onRowAdd:function(e){return new Promise(function(t,n){setTimeout(function(){var n=a.state.data;n.push(e),console.log(a.addDataToDb(e)),1===a.addDataToDb(e)&&(console.log(\"sucessss\"),a.setState({data:n},function(){return t()})),t()},1e3)})},onRowUpdate:function(e,t){return new Promise(function(n,o){setTimeout(function(){var o=a.state.data,r=o.indexOf(t);o[r]=e,a.updateDataInDb(e),a.setState({data:o},function(){return n()}),n()},1e3)})},onRowDelete:function(e){return new Promise(function(t,n){setTimeout(function(){var n=a.state.data,o=n.indexOf(e);n.splice(o,1),a.deleteFromDb(e),a.setState({data:n},function(){return t()}),t()},1e3)})}}}),o.a.createElement(U,{columns:a.state.columns,setSelectedCategoryData:a.setSelectedCategoryData}))},a.state={columns:[],data:[],isLoading:!1},a}return Object(u.a)(t,e),Object(p.a)(t,[{key:\"compare\",value:function(e,t){return\"number\"==typeof e?e-t:e>t?1:t>e?-1:0}}]),t}(n.Component),q={padding:\"0px\"},I=W,J=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).setData=function(e){a.setState(e)},a.render=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(I,{setData:a.setData}),o.a.createElement(y,{column:a.state.column,data:a.state.data})))},a.state={column:[],data:[]},a}return Object(u.a)(t,e),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(J,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[235,1,2]]]);","extractedComments":[]}