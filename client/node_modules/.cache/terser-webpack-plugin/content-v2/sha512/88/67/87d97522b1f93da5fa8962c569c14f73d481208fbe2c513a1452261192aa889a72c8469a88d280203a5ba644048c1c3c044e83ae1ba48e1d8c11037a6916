{"map":"{\"version\":3,\"sources\":[\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/constants/chartOptions.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/SearchBar.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Modal.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/constants/styles.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/constants/messages.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/App.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/serviceWorker.js\",\"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/index.js\"],\"names\":[\"require\",\"Highcharts\",\"source\",\"defaultOptions_bar\",\"chart\",\"type\",\"title\",\"text\",\"subtitle\",\"xAxis\",\"visible\",\"categories\",\"yAxis\",\"min\",\"tickInterval\",\"tooltip\",\"headerFormat\",\"pointFormat\",\"footerFormat\",\"shared\",\"useHTML\",\"plotOptions\",\"column\",\"pointPadding\",\"borderWidth\",\"groupPadding\",\"shadow\",\"series\",\"showInLegend\",\"colorByPoint\",\"data\",\"lang\",\"noData\",\"style\",\"fontWeight\",\"fontSize\",\"color\",\"defaultOptions_pie\",\"plotBackgroundColor\",\"plotBorderWidth\",\"plotShadow\",\"pie\",\"allowPointSelect\",\"cursor\",\"dataLabels\",\"enabled\",\"format\",\"Chart\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"parseData\",\"counts\",\"countFrequency\",\"newColumn\",\"newCategories\",\"keys\",\"newBarChartData\",\"values\",\"newPieChartData\",\"parseData_helper\",\"arr\",\"forEach\",\"key\",\"dataObject\",\"name\",\"y\",\"push\",\"i\",\"length\",\"setChartData\",\"setState\",\"barChart\",\"pieChart\",\"state\",\"prevProps\",\"_this$parseData\",\"react_default\",\"a\",\"createElement\",\"className\",\"highcharts_react_min_default\",\"highcharts\",\"options\",\"Component\",\"SearchBar\",\"handleChange\",\"event\",\"value\",\"target\",\"search\",\"fetch\",\"concat\",\"credentials\",\"method\",\"then\",\"response\",\"ok\",\"catch\",\"error\",\"window\",\"alert\",\"message\",\"render\",\"display\",\"TextField\",\"id\",\"label\",\"onChange\",\"margin\",\"alignSelf\",\"Button\",\"variant\",\"onClick\",\"Modal\",\"handleOpen\",\"open\",\"handleOk\",\"setSelectedCategoryData\",\"handleClose\",\"Dialog\",\"disableBackdropClick\",\"disableEscapeKeyDown\",\"onClose\",\"DialogTitle\",\"DialogContent\",\"FormControl\",\"component\",\"FormLabel\",\"RadioGroup\",\"aria-label\",\"columns\",\"map\",\"FormControlLabel\",\"field\",\"control\",\"Radio\",\"DialogActions\",\"ICONS\",\"CheckCircleIcon\",\"ErrorIcon\",\"icons\",\"styles\",\"icon_styles\",\"marginRight\",\"snackBarContent_styles\",\"backgroundColor\",\"alignItems\",\"snackBarContent_styles_span\",\"Alert\",\"Snackbar\",\"anchorOrigin\",\"vertical\",\"horizontal\",\"autoHideDuration\",\"messageWrapper\",\"success\",\"flag\",\"newMessage\",\"newFlag\",\"Icon\",\"snackbarContentStyle\",\"SnackbarContent\",\"action\",\"IconButton\",\"Close_default\",\"Table\",\"parseCsv\",\"Papa\",\"parse\",\"files\",\"header\",\"skipEmptyLines\",\"dynamicTyping\",\"complete\",\"updateTable\",\"parseData_table\",\"result\",\"parsedColumns\",\"parsedData\",\"meta\",\"fields\",\"toUpperCase\",\"toLowerCase\",\"cellStyle\",\"newData\",\"hasOwnProperty\",\"newColumns\",\"_this$parseData_table\",\"addAllDataToDb\",\"Request\",\"redirect\",\"headers\",\"Headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"addDataToDb\",\"updateDataInDb\",\"deleteDataFromDb\",\"category\",\"sort\",\"compare\",\"setAlert\",\"bool\",\"accept\",\"htmlFor\",\"dist_default\",\"showTitle\",\"toolbarButtonAlignment\",\"headerStyle\",\"addRowPosition\",\"isLoading\",\"editable\",\"onRowAdd\",\"Promise\",\"resolve\",\"reject\",\"setTimeout\",\"onRowUpdate\",\"oldData\",\"index\",\"indexOf\",\"onRowDelete\",\"splice\",\"localization\",\"actions\",\"emptyDataSourceMessage\",\"components\",\"Toolbar\",\"dist\",\"components_SearchBar\",\"components_Modal\",\"components_Alert\",\"b\",\"padding\",\"App\",\"newState\",\"Fragment\",\"components_Table\",\"components_Chart\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport Highcharts from 'highcharts'\\nimport HighchartsReact from 'highcharts-react-official'\\nimport * as defaultOptions from '../constants/chartOptions';\\n// To Constant file?\\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\\nrequire('highcharts/modules/no-data-to-display.js')(Highcharts);\\n\\n/*const HISTO = defaultOptions.HISTO;\\nconst NODATA = defaultOptions.NODATA;*/\\n\\n\\nconst source = defaultOptions.SOURCE;\\nconst defaultOptions_bar = defaultOptions.BAR;\\nconst defaultOptions_pie = defaultOptions.PIE;\\n\\n/*\\nRepresents chart section containig a bar chart and a pie chart.\\n*/\\nclass Chart extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      barChart: defaultOptions_bar,\\n      pieChart: defaultOptions_pie\\n    };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps !== this.props) {\\n      const {\\n        newColumn,\\n        newCategories,\\n        newBarChartData,\\n        newPieChartData\\n      } = this.parseData(this.props);\\n      this.setChartData(newColumn, newCategories, newBarChartData, newPieChartData);\\n    }\\n  }\\n\\n  parseData = (props) => {\\n    var counts = this.countFrequency(props.data);\\n    return {\\n      newColumn: props.column,\\n      newCategories: Object.keys(counts),\\n      newBarChartData: Object.values(counts),\\n      newPieChartData: this.parseData_helper(counts)\\n    };\\n  }\\n\\n  parseData_helper = (counts) => {\\n    var arr = [];\\n    Object.keys(counts).forEach(function(key) {\\n      let dataObject = {};\\n      dataObject = {\\n        name: key,\\n        y: counts[key]\\n      }\\n      arr.push(dataObject);\\n    });\\n    return arr;\\n  }\\n\\n  countFrequency = (arr) => {\\n    var counts = {};\\n    for (var i = 0; i < arr.length; i++) {\\n      var data = arr[i];\\n      counts[data] = counts[data] ? counts[data] + 1 : 1;\\n    }\\n    return counts;\\n  }\\n\\n  setChartData = (newColumn, newCategories, newBarChartData, newPieChartData) => {\\n    this.setState({\\n      barChart: {\\n        title: {\\n          text: newColumn\\n        },\\n        subtitle: {\\n          text: source\\n        },\\n        xAxis: {\\n          visible:true,\\n          categories: newCategories\\n        },\\n        yAxis: {\\n          visible:true,\\n        },\\n        series: [{\\n          name : newColumn,\\n          data: newBarChartData\\n        }]\\n      },\\n      pieChart: {\\n        title: {\\n          text: newColumn\\n        },\\n        subtitle: {\\n          text: source\\n        },\\n        series: [{\\n          name: newColumn,\\n          data: newPieChartData\\n        }]\\n      }\\n    });\\n  }\\n\\n  render(){\\n    return(\\n      <div className= 'Section'>\\n        <h2>Charts</h2>\\n          <div className = 'chartContainer'>\\n            <HighchartsReact\\n              highcharts={Highcharts}\\n              options = {this.state.barChart}/>\\n            </div>\\n          <div className = 'chartContainer'>\\n            <HighchartsReact\\n              highcharts={Highcharts}\\n              options = {this.state.pieChart}/>\\n            </div>\\n      </div>\\n    );\\n  }\\n\\n}\\n\\n\\nexport default Chart;\\n\",\"// Constant variables for default chart options - Chart.js\\n\\nexport const SOURCE= 'Source: kaggle';\\n\\nexport const BAR = {\\n  chart: {\\n    type: 'column'\\n  },\\n  title: {\\n    text: 'Bar Chart'\\n  },\\n  subtitle: {\\n    text: ''\\n  },\\n  xAxis: {\\n    visible:false,\\n    categories: []\\n  },\\n  yAxis: {\\n    visible:false,\\n    min: 0,\\n    tickInterval: 1,\\n    title: {\\n      text: 'count(person)'\\n    }\\n  },\\n  tooltip: {\\n    headerFormat: '<span style=\\\"font-size:10px\\\">{point.key}</span><table>',\\n    pointFormat: '<tr><td style=\\\"color:{series.color};padding:0\\\">{series.name}: </td>' +\\n      '<td style=\\\"padding:0\\\"><b>{point.y}</b></td></tr>',\\n    footerFormat: '</table>',\\n    shared: true,\\n    useHTML: true\\n  },\\n  plotOptions: {\\n    column: {\\n      pointPadding: 0,\\n      borderWidth: 1,\\n      groupPadding: 0.2,\\n      shadow: false\\n    }\\n  },\\n  series: [{\\n    showInLegend: false,\\n    colorByPoint: true,\\n    data: []\\n  }],\\n  lang: {\\n        noData: \\\"No Data to Display\\\"\\n    },\\n  noData: {\\n      style: {\\n          fontWeight: 'bold',\\n          fontSize: '15px',\\n          color: '#303030'\\n      }\\n  }\\n};\\n\\n\\nexport const PIE = {\\n  chart: {\\n    plotBackgroundColor: null,\\n    plotBorderWidth: null,\\n    plotShadow: false,\\n    type: 'pie'\\n  },\\n  title: {\\n    text: 'Pie Chart'\\n  },\\n  subtitle: {\\n    text: ''\\n  },\\n  tooltip: {\\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\\n  },\\n  plotOptions: {\\n    pie: {\\n      allowPointSelect: true,\\n      cursor: 'pointer',\\n      dataLabels: {\\n        enabled: true,\\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\\n      }\\n    }\\n  },\\n  series: [{\\n    colorByPoint: true,\\n    data: []\\n  }],\\n  lang: {\\n        noData: \\\"No Data to Display\\\"\\n    },\\n  noData: {\\n      style: {\\n          fontWeight: 'bold',\\n          fontSize: '15px',\\n          color: '#303030'\\n      }\\n  }\\n};\\n\\n/*\\nexport const HISTO require('highcharts/modules/histogram-bellcurve');\\nexport const NODATA require('highcharts/modules/no-data-to-display.js');\\n*/\\n\",\"import React, { Component } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport TextField from '@material-ui/core/TextField';\\n\\n/*\\nRepresent search bar in the database.\\n*/\\nclass SearchBar extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value : ''\\n    };\\n  }\\n\\n  handleChange = (event) => {\\n    this.setState({\\n      value: event.target.value\\n    });\\n  }\\n\\n  search = (event) => {\\n      fetch(`/db/search/?keyword=${this.state.value}`, {\\n        credentials: 'include',\\n        method: 'GET'\\n      })\\n      .then(function(response) {\\n        if(!response.ok){\\n          return false;\\n        }\\n          return true;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n      });\\n  }\\n\\n  render = () => {\\n      return (\\n        <div style={{ display: 'inline-flex' }}>\\n          <div>\\n            <TextField\\n              id=\\\"standard-name\\\"\\n              label=\\\"keyword\\\"\\n              onChange = {this.handleChange}\\n              margin=\\\"normal\\\"\\n            />\\n          </div>\\n          <div style={{ alignSelf: 'center' }}>\\n            <Button variant=\\\"outlined\\\" onClick = {this.search}>\\n              Search\\n            </Button>\\n          </div>\\n        </div>\\n      );\\n  }\\n\\n}\\n\\n\\nexport default SearchBar;\\n\",\"import React, { Component } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Radio from '@material-ui/core/Radio';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport \\\"../App.css\\\"\\n\\n/*\\nRepresents the dialog followed by pressing Update Charts button.\\n*/\\nclass Modal extends Component{\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      open: false,\\n      value: \\\"\\\"\\n    };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps !== this.props) {\\n      this.setState({\\n        columns: this.props.columns\\n      })\\n    }\\n  }\\n\\n  handleChange = (event) => {\\n    this.setState({\\n      value: event.target.value\\n    });\\n  }\\n\\n  handleOpen = () => {\\n    this.setState({\\n      open: true\\n    });\\n  }\\n\\n  handleOk = () => {\\n    this.setState({\\n      open: false\\n    });\\n    this.props.setSelectedCategoryData(this.state.value);\\n  }\\n\\n  handleClose = () => {\\n    this.setState({\\n      open: false\\n    });\\n  }\\n\\n  render = () => {\\n      return (\\n          <div>\\n            <Button id ='updateChartsBtn' variant=\\\"contained\\\" color=\\\"secondary\\\" onClick={this.handleOpen} className = 'Btn' > Update Charts</Button>\\n            <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\\n              <DialogTitle>Choose a category to generate charts.</DialogTitle>\\n              <DialogContent>\\n                <form>\\n                <FormControl component=\\\"fieldset\\\">\\n                  <FormLabel component=\\\"legend\\\">Category</FormLabel>\\n                  <RadioGroup\\n                    aria-label=\\\"Category\\\"\\n                    name=\\\"category\\\"\\n                    value={this.state.value}\\n                    onChange={this.handleChange}>\\n                    { this.props.columns.map((column) =>(\\n                        <FormControlLabel key = {column.field} value={column.field} control={<Radio />} label={column.title} /> ))\\n                    }\\n                  </RadioGroup>\\n                </FormControl>\\n                </form>\\n              </DialogContent>\\n              <DialogActions>\\n                <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                  Cancel\\n                </Button>\\n                <Button onClick={this.handleOk} color=\\\"primary\\\">\\n                  Ok\\n                </Button>\\n              </DialogActions>\\n            </Dialog>\\n          </div>\\n        );\\n      }\\n\\n}\\n\\n\\nexport default Modal;\\n\",\"// Constant variables for alert styling - Alert.js\\n\\nimport ErrorIcon from '@material-ui/icons/Error';\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\n\\nexport const ICONS = [\\n  CheckCircleIcon, ErrorIcon\\n];\\n\\nexport const ICON_STYLES = {\\n  marginRight: 10\\n};\\n\\nexport const SNACKBARCONTENT_STYlES = [\\n  {backgroundColor: 'blue', display: 'flex', alignItems: 'center'}, {backgroundColor: 'red' , display: 'flex', alignItems: 'center'}\\n];\\n\\nexport const SNACKBARCONTENT_STYlES_SPAN = {\\n  display: 'flex',\\n  alignItems: 'center'\\n};\\n\",\"import React, { Component } from 'react';\\n\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\nimport * as messages from '../constants/messages';\\nimport * as styles from '../constants/styles';\\n\\n/*\\nimport ErrorIcon from '@material-ui/icons/Error';\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\n*/\\n\\nconst message_SUCCESS = messages.SUCCESS;\\nconst message_ERROR = messages.ERROR;\\n\\nconst icons = styles.ICONS;\\nconst icon_styles = styles.ICON_STYLES;\\nconst snackBarContent_styles = styles.SNACKBARCONTENT_STYlES;\\nconst snackBarContent_styles_span = styles.SNACKBARCONTENT_STYlES_SPAN;\\n\\n/*\\nRepresents database update alert.\\n*/\\nclass Alert extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      open: false,\\n      vertical: 'top',\\n      horizontal: 'center',\\n      message: '',\\n      success: false,\\n      flag: 0\\n    };\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps !== this.props) {\\n      const newMessage = this.props.success ? message_SUCCESS : message_ERROR;\\n      const newFlag = this.props.success ? 0 : 1;\\n      this.setState({\\n        message: newMessage,\\n        open: true,\\n        flag: newFlag\\n      });\\n    }\\n  }\\n\\n  messageWrapper(){\\n      const Icon = icons[this.state.flag];\\n      const snackbarContentStyle = snackBarContent_styles[this.state.flag];\\n      return(\\n          <SnackbarContent\\n            style = {snackbarContentStyle}\\n            message={\\n              <span id=\\\"client-snackbar\\\" style = {snackBarContent_styles_span}>\\n                <Icon style = {icon_styles}/>\\n                {this.state.message}\\n              </span>\\n            }\\n            action={[\\n              <IconButton key=\\\"close\\\" aria-label=\\\"close\\\" color=\\\"inherit\\\" onClick={this.handleClose}>\\n              <CloseIcon/>\\n              </IconButton>\\n            ]}\\n          />\\n      );\\n  }\\n\\n  handleClose = () => {\\n    this.setState({\\n      open: false\\n    });\\n  }\\n\\n  render = () => {\\n      return (\\n        <div>\\n          <Snackbar\\n            anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\\n            open={this.state.open}\\n            autoHideDuration={3000}\\n            onClose={this.handleClose}\\n          >\\n           {this.messageWrapper()}\\n          </Snackbar>\\n        </div>\\n      );\\n  }\\n\\n}\\n\\n\\nexport default Alert;\\n\",\"// Constant variables for alert messages - Alert.js\\n\\nexport const SUCCESS = 'Database has been successfully updated.';\\nexport const ERROR = 'Error in the database. Please try again.';\\n\\n/*\\nexport const SUCCESS_DB_ADD = 'Data is successfully added to the database.'\\nexport const SUCCESS_DB_UPDATE = 'Data is successfully updated in the database.'\\nexport const SUCCESS_DB_DELETE = 'Data is successfully deleted from the database.'\\n\\nexport const ERROR_DB_ADD = 'Error in the database - ID should be unique.'\\nexport const ERROR_DB_UPDATE_DELETE = 'Error in the database. Please try again.'\\n*/\\n\",\"import React, { Component } from 'react';\\nimport MaterialTable, { MTableToolbar } from 'material-table';\\nimport Button from '@material-ui/core/Button';\\nimport SearchBar from './SearchBar';\\nimport Papa from 'papaparse';\\nimport { default as Modal } from './Modal';\\nimport { default as Alert } from './Alert';\\n\\n/*\\nRepresents database table.\\n*/\\nclass Table extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [],\\n      data: [],\\n      isLoading: false,\\n      success:false,\\n    };\\n  }\\n\\n  parseCsv = (event) => {\\n    Papa.parse(event.target.files[0], {\\n      header: true,\\n      skipEmptyLines: true,\\n      dynamicTyping: true,\\n      complete: this.updateTable\\n    });\\n  }\\n\\n  parseData_table = (result) => {\\n\\n    var parsedColumns = [];\\n    var parsedData = [];\\n\\n    result.meta.fields.forEach(function(field) {\\n      parsedColumns.push({\\n        title: field.toUpperCase(),\\n        field: field.toLowerCase(),\\n        cellStyle: style,\\n      });\\n    });\\n    (parsedColumns[0])['editable']='onAdd';\\n\\n    result.data.forEach(function(data) {\\n      let newData = {};\\n      for (var key in data) {\\n        if (data.hasOwnProperty(key)) {\\n          newData[key.toLowerCase()] = data[key]\\n        }\\n      }\\n      parsedData.push(newData);\\n    });\\n\\n    return {\\n        newColumns : parsedColumns,\\n        newData: parsedData\\n    };\\n  }\\n\\n  updateTable = (result) => {\\n    const{ newColumns, newData } = this.parseData_table(result);\\n    this.setState({\\n      columns: newColumns,\\n      data: newData,\\n    });\\n    this.addAllDataToDb();\\n  }\\n\\n  addAllDataToDb = () => {\\n    fetch(new Request('/db/addAllData', {\\n        method: 'POST',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(this.state.data)\\n      })\\n      .then(function(response) {\\n        if(!response.ok){\\n          return false;\\n        }\\n          return true;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n      });\\n/*\\n    var temp = this;\\n\\n    this.state.data.forEach(function(data) {\\n      temp.addDataToDb(data);\\n    });*/\\n\\n  }\\n\\n  addDataToDb = (data) => {\\n    return fetch(new Request('/db/addData', {\\n        method: 'POST',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(function(response) {\\n        if(!response.ok){\\n          return false;\\n        }\\n          return true;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n      });\\n  }\\n\\n  updateDataInDb = (data) => {\\n    return fetch(new Request('/db/updateData', {\\n        method: 'PUT',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(function(response) {\\n        if(!response.ok){\\n          return false;\\n        }\\n          return true;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n      });\\n  }\\n\\n  deleteDataFromDb = (data) => {\\n    return fetch(new Request('/db/deleteData', {\\n        method: 'DELETE',\\n        redirect: 'follow',\\n        headers: new Headers({\\n          'Content-Type': 'application/json'\\n        })\\n      }), {\\n        credentials: 'include',\\n        body: JSON.stringify(data)\\n      })\\n      .then(function(response) {\\n        if(!response.ok){\\n          return false;\\n        }\\n          return true;\\n      })\\n      .catch(function(error) {\\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\\n      });\\n  }\\n\\n  setSelectedCategoryData = (category) => {\\n    var newData = [];\\n    this.state.data.forEach(function(data) {\\n      newData.push(\\n        data[category]\\n      );\\n    });\\n    newData.sort(this.compare);\\n    this.props.setChartData({\\n      column: category.toUpperCase(),\\n      data: newData\\n    });\\n  }\\n\\n  compare(a, b) {\\n    if (typeof(a) == \\\"number\\\") {\\n      return a - b;\\n    } else {\\n      if (a > b) {\\n        return 1;\\n      }\\n      if (b > a) {\\n        return -1;\\n      }\\n      return 0;\\n    }\\n  }\\n\\n  setAlert = (bool) => {\\n    this.setState({\\n      success: bool\\n    });\\n  }\\n\\n  render = () => {\\n      return (\\n        <div>\\n          <h1>DB chart generator</h1>\\n          <div className = 'Section'>\\n            <input\\n              id=\\\"contained-button-file\\\"\\n              type=\\\"file\\\"\\n              accept=\\\".csv\\\"\\n              onChange = {this.parseCsv}\\n            />\\n            <label htmlFor=\\\"contained-button-file\\\">\\n              <Button id = 'uploadBtn' variant=\\\"contained\\\" color=\\\"primary\\\" component=\\\"span\\\">\\n                Upload CSV File\\n              </Button>\\n            </label>\\n\\n            <h2>Database Table</h2>\\n            <MaterialTable\\n              options = {{\\n                  showTitle: false,\\n                  search : false,\\n                  toolbarButtonAlignment: 'left',\\n                  headerStyle: style,\\n                  addRowPosition:'first'\\n              }}\\n              isLoading = {this.state.isLoading}\\n              columns = {this.state.columns}\\n              data= {this.state.data}\\n              editable = {{\\n                onRowAdd: newData =>\\n                 new Promise((resolve, reject) => {\\n                     setTimeout(() => {\\n                            this.addDataToDb(newData).then(success => {\\n                               if(success){\\n                                 const data = this.state.data;\\n                                 data.push(newData);\\n                                 this.setState({ data }, () => resolve());\\n                                 this.setAlert(true);\\n                                } else{\\n                                  reject();\\n                                  this.setAlert(false);\\n                                }\\n                            });\\n                     }, 1000);\\n                 }),\\n               onRowUpdate: (newData, oldData) =>\\n                 new Promise((resolve, reject) => {\\n                   setTimeout(() => {\\n                       this.updateDataInDb(newData).then(success => {\\n                          if(success){\\n                            const data = this.state.data;\\n                            const index = data.indexOf(oldData);\\n                            data[index] = newData;\\n                            this.setState({ data }, () => resolve());\\n                            this.setAlert(true);\\n                           } else{\\n                             reject();\\n                             this.setAlert(false);\\n                           }\\n                       });\\n                   }, 1000)\\n                 }),\\n               onRowDelete: oldData =>\\n                 new Promise((resolve, reject) => {\\n                   setTimeout(() => {\\n                       this.deleteDataFromDb(oldData).then(success => {\\n                          if(success){\\n                            let data = this.state.data;\\n                            const index = data.indexOf(oldData);\\n                            data.splice(index, 1);\\n                            this.setState({ data }, () => resolve());\\n                            this.setAlert(true);\\n                           } else{\\n                             reject();\\n                             this.setAlert(false);\\n                           }\\n                       });\\n                   }, 1000)\\n                 }),\\n               }}\\n               localization={{\\n                    header: {\\n                        actions: ''\\n                    },\\n                    body: {\\n                        emptyDataSourceMessage: 'No Data to Display',\\n                    }\\n                }}\\n                components={{\\n                        Toolbar: props => (\\n                                    <div>\\n                                      <MTableToolbar {...props} />\\n                                        <SearchBar/>\\n                                    </div>\\n                                  )\\n                }}\\n             />\\n            <Modal columns = {this.state.columns} setSelectedCategoryData = {this.setSelectedCategoryData}/>\\n          </div>\\n          <Alert success= {this.state.success}/>\\n        </div>\\n      );\\n    }\\n}\\n\\nconst style = { padding:'0 8px'}\\n\\n\\nexport default Table;\\n\",\"import React, { Component } from 'react';\\nimport 'whatwg-fetch';\\nimport './App.css';\\nimport Chart from \\\"./components/Chart\\\"\\nimport Table from \\\"./components/Table\\\"\\n\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      column: [],\\n      data: [],\\n    };\\n  }\\n\\n  setChartData = (newState) => {\\n    this.setState(newState);\\n  }\\n\\n  render = () => {\\n    return (\\n      <React.Fragment>\\n        <div className=\\\"App\\\">\\n          <Table setChartData = {this.setChartData}/>\\n          <Chart column = {this.state.column} data = {this.state.data}/>\\n        </div>\\n      </React.Fragment>\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{190:function(e,t,a){},245:function(e,t,a){e.exports=a(330)},250:function(e,t,a){},330:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),r=a(13),l=a.n(r),i=(a(250),a(44)),s=a(48),c=a(45),u=a(47),d=(a(251),a(190),a(49)),h=a(61),p=a.n(h),m=a(184),f=a.n(m);a(252)(p.a),a(253)(p.a);var b=\"Source: kaggle\",g={chart:{type:\"column\"},title:{text:\"Bar Chart\"},subtitle:{text:\"\"},xAxis:{visible:!1,categories:[]},yAxis:{visible:!1,min:0,tickInterval:1,title:{text:\"count(person)\"}},tooltip:{headerFormat:'<span style=\"font-size:10px\">{point.key}</span><table>',pointFormat:'<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td><td style=\"padding:0\"><b>{point.y}</b></td></tr>',footerFormat:\"</table>\",shared:!0,useHTML:!0},plotOptions:{column:{pointPadding:0,borderWidth:1,groupPadding:.2,shadow:!1}},series:[{showInLegend:!1,colorByPoint:!0,data:[]}],lang:{noData:\"No Data to Display\"},noData:{style:{fontWeight:\"bold\",fontSize:\"15px\",color:\"#303030\"}}},y={chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1,type:\"pie\"},title:{text:\"Pie Chart\"},subtitle:{text:\"\"},tooltip:{pointFormat:\"{series.name}: <b>{point.percentage:.1f}%</b>\"},plotOptions:{pie:{allowPointSelect:!0,cursor:\"pointer\",dataLabels:{enabled:!0,format:\"<b>{point.name}</b>: {point.percentage:.1f} %\"}}},series:[{colorByPoint:!0,data:[]}],lang:{noData:\"No Data to Display\"},noData:{style:{fontWeight:\"bold\",fontSize:\"15px\",color:\"#303030\"}}},C=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).parseData=function(e){var t=a.countFrequency(e.data);return{newColumn:e.column,newCategories:Object.keys(t),newBarChartData:Object.values(t),newPieChartData:a.parseData_helper(t)}},a.parseData_helper=function(e){var t=[];return Object.keys(e).forEach(function(a){var n;n={name:a,y:e[a]},t.push(n)}),t},a.countFrequency=function(e){for(var t={},a=0;a<e.length;a++){var n=e[a];t[n]=t[n]?t[n]+1:1}return t},a.setChartData=function(e,t,n,o){a.setState({barChart:{title:{text:e},subtitle:{text:b},xAxis:{visible:!0,categories:t},yAxis:{visible:!0},series:[{name:e,data:n}]},pieChart:{title:{text:e},subtitle:{text:b},series:[{name:e,data:o}]}})},a.state={barChart:g,pieChart:y},a}return Object(u.a)(t,e),Object(d.a)(t,[{key:\"componentDidUpdate\",value:function(e){if(e!==this.props){var t=this.parseData(this.props),a=t.newColumn,n=t.newCategories,o=t.newBarChartData,r=t.newPieChartData;this.setChartData(a,n,o,r)}}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"Section\"},o.a.createElement(\"h2\",null,\"Charts\"),o.a.createElement(\"div\",{className:\"chartContainer\"},o.a.createElement(f.a,{highcharts:p.a,options:this.state.barChart})),o.a.createElement(\"div\",{className:\"chartContainer\"},o.a.createElement(f.a,{highcharts:p.a,options:this.state.pieChart})))}}]),t}(n.Component),v=a(185),w=a.n(v),D=a(197),E=a(211),O=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).handleChange=function(e){a.setState({value:e.target.value})},a.search=function(e){fetch(\"/db/search/?keyword=\".concat(a.state.value),{credentials:\"include\",method:\"GET\"}).then(function(e){return!!e.ok}).catch(function(e){window.alert(\"There has been a problem with your fetch operation: \"+e.message)})},a.render=function(){return o.a.createElement(\"div\",{style:{display:\"inline-flex\"}},o.a.createElement(\"div\",null,o.a.createElement(E.a,{id:\"standard-name\",label:\"keyword\",onChange:a.handleChange,margin:\"normal\"})),o.a.createElement(\"div\",{style:{alignSelf:\"center\"}},o.a.createElement(D.a,{variant:\"outlined\",onClick:a.search},\"Search\")))},a.state={value:\"\"},a}return Object(u.a)(t,e),t}(n.Component),k=a(238),S=a.n(k),j=a(199),T=a(201),x=a(202),A=a(203),P=a(227),B=a(207),N=a(176),F=a(173),L=a(204),R=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).handleChange=function(e){a.setState({value:e.target.value})},a.handleOpen=function(){a.setState({open:!0})},a.handleOk=function(){a.setState({open:!1}),a.props.setSelectedCategoryData(a.state.value)},a.handleClose=function(){a.setState({open:!1})},a.render=function(){return o.a.createElement(\"div\",null,o.a.createElement(D.a,{id:\"updateChartsBtn\",variant:\"contained\",color:\"secondary\",onClick:a.handleOpen,className:\"Btn\"},\" Update Charts\"),o.a.createElement(j.a,{disableBackdropClick:!0,disableEscapeKeyDown:!0,open:a.state.open,onClose:a.handleClose},o.a.createElement(A.a,null,\"Choose a category to generate charts.\"),o.a.createElement(x.a,null,o.a.createElement(\"form\",null,o.a.createElement(F.a,{component:\"fieldset\"},o.a.createElement(N.a,{component:\"legend\"},\"Category\"),o.a.createElement(B.a,{\"aria-label\":\"Category\",name:\"category\",value:a.state.value,onChange:a.handleChange},a.props.columns.map(function(e){return o.a.createElement(L.a,{key:e.field,value:e.field,control:o.a.createElement(P.a,null),label:e.title})}))))),o.a.createElement(T.a,null,o.a.createElement(D.a,{onClick:a.handleClose,color:\"primary\"},\"Cancel\"),o.a.createElement(D.a,{onClick:a.handleOk,color:\"primary\"},\"Ok\"))))},a.state={open:!1,value:\"\"},a}return Object(u.a)(t,e),Object(d.a)(t,[{key:\"componentDidUpdate\",value:function(e){e!==this.props&&this.setState({columns:this.props.columns})}}]),t}(n.Component),U=a(170),I=a(241),W=a.n(I),z=a(208),q=a(181),H=a(240),J=a.n(H),_=a(239),M=[a.n(_).a,J.a],G=M,K={marginRight:10},V=[{backgroundColor:\"blue\",display:\"flex\",alignItems:\"center\"},{backgroundColor:\"red\",display:\"flex\",alignItems:\"center\"}],$={display:\"flex\",alignItems:\"center\"},Q=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).handleClose=function(){a.setState({open:!1})},a.render=function(){return o.a.createElement(\"div\",null,o.a.createElement(z.a,{anchorOrigin:{vertical:a.state.vertical,horizontal:a.state.horizontal},open:a.state.open,autoHideDuration:3e3,onClose:a.handleClose},a.messageWrapper()))},a.state={open:!1,vertical:\"top\",horizontal:\"center\",message:\"\",success:!1,flag:0},a}return Object(u.a)(t,e),Object(d.a)(t,[{key:\"componentDidUpdate\",value:function(e){if(e!==this.props){var t=this.props.success?\"Database has been successfully updated.\":\"Error in the database. Please try again.\",a=this.props.success?0:1;this.setState({message:t,open:!0,flag:a})}}},{key:\"messageWrapper\",value:function(){var e=G[this.state.flag],t=V[this.state.flag];return o.a.createElement(q.a,{style:t,message:o.a.createElement(\"span\",{id:\"client-snackbar\",style:$},o.a.createElement(e,{style:K}),this.state.message),action:[o.a.createElement(U.a,{key:\"close\",\"aria-label\":\"close\",color:\"inherit\",onClick:this.handleClose},o.a.createElement(W.a,null))]})}}]),t}(n.Component),X=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).parseCsv=function(e){S.a.parse(e.target.files[0],{header:!0,skipEmptyLines:!0,dynamicTyping:!0,complete:a.updateTable})},a.parseData_table=function(e){var t=[],a=[];return e.meta.fields.forEach(function(e){t.push({title:e.toUpperCase(),field:e.toLowerCase(),cellStyle:Y})}),t[0].editable=\"onAdd\",e.data.forEach(function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n.toLowerCase()]=e[n]);a.push(t)}),{newColumns:t,newData:a}},a.updateTable=function(e){var t=a.parseData_table(e),n=t.newColumns,o=t.newData;a.setState({columns:n,data:o}),a.addAllDataToDb()},a.addAllDataToDb=function(){fetch(new Request(\"/db/addAllData\",{method:\"POST\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(a.state.data)}).then(function(e){return!!e.ok}).catch(function(e){window.alert(\"There has been a problem with your fetch operation: \"+e.message)})},a.addDataToDb=function(e){return fetch(new Request(\"/db/addData\",{method:\"POST\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){return!!e.ok}).catch(function(e){window.alert(\"There has been a problem with your fetch operation: \"+e.message)})},a.updateDataInDb=function(e){return fetch(new Request(\"/db/updateData\",{method:\"PUT\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){return!!e.ok}).catch(function(e){window.alert(\"There has been a problem with your fetch operation: \"+e.message)})},a.deleteDataFromDb=function(e){return fetch(new Request(\"/db/deleteData\",{method:\"DELETE\",redirect:\"follow\",headers:new Headers({\"Content-Type\":\"application/json\"})}),{credentials:\"include\",body:JSON.stringify(e)}).then(function(e){return!!e.ok}).catch(function(e){window.alert(\"There has been a problem with your fetch operation: \"+e.message)})},a.setSelectedCategoryData=function(e){var t=[];a.state.data.forEach(function(a){t.push(a[e])}),t.sort(a.compare),a.props.setChartData({column:e.toUpperCase(),data:t})},a.setAlert=function(e){a.setState({success:e})},a.render=function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"DB chart generator\"),o.a.createElement(\"div\",{className:\"Section\"},o.a.createElement(\"input\",{id:\"contained-button-file\",type:\"file\",accept:\".csv\",onChange:a.parseCsv}),o.a.createElement(\"label\",{htmlFor:\"contained-button-file\"},o.a.createElement(D.a,{id:\"uploadBtn\",variant:\"contained\",color:\"primary\",component:\"span\"},\"Upload CSV File\")),o.a.createElement(\"h2\",null,\"Database Table\"),o.a.createElement(w.a,{options:{showTitle:!1,search:!1,toolbarButtonAlignment:\"left\",headerStyle:Y,addRowPosition:\"first\"},isLoading:a.state.isLoading,columns:a.state.columns,data:a.state.data,editable:{onRowAdd:function(e){return new Promise(function(t,n){setTimeout(function(){a.addDataToDb(e).then(function(o){if(o){var r=a.state.data;r.push(e),a.setState({data:r},function(){return t()}),a.setAlert(!0)}else n(),a.setAlert(!1)})},1e3)})},onRowUpdate:function(e,t){return new Promise(function(n,o){setTimeout(function(){a.updateDataInDb(e).then(function(r){if(r){var l=a.state.data,i=l.indexOf(t);l[i]=e,a.setState({data:l},function(){return n()}),a.setAlert(!0)}else o(),a.setAlert(!1)})},1e3)})},onRowDelete:function(e){return new Promise(function(t,n){setTimeout(function(){a.deleteDataFromDb(e).then(function(o){if(o){var r=a.state.data,l=r.indexOf(e);r.splice(l,1),a.setState({data:r},function(){return t()}),a.setAlert(!0)}else n(),a.setAlert(!1)})},1e3)})}},localization:{header:{actions:\"\"},body:{emptyDataSourceMessage:\"No Data to Display\"}},components:{Toolbar:function(e){return o.a.createElement(\"div\",null,o.a.createElement(v.MTableToolbar,e),o.a.createElement(O,null))}}}),o.a.createElement(R,{columns:a.state.columns,setSelectedCategoryData:a.setSelectedCategoryData})),o.a.createElement(Q,{success:a.state.success}))},a.state={columns:[],data:[],isLoading:!1,success:!1},a}return Object(u.a)(t,e),Object(d.a)(t,[{key:\"compare\",value:function(e,t){return\"number\"==typeof e?e-t:e>t?1:t>e?-1:0}}]),t}(n.Component),Y={padding:\"0 8px\"},Z=X,ee=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).setChartData=function(e){a.setState(e)},a.render=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(Z,{setChartData:a.setChartData}),o.a.createElement(C,{column:a.state.column,data:a.state.data})))},a.state={column:[],data:[]},a}return Object(u.a)(t,e),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(o.a.createElement(ee,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[245,1,2]]]);","extractedComments":[]}