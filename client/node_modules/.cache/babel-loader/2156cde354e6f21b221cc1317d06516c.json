{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable, { MTableHeader } from 'material-table';\nimport MTableBodyRow from 'material-table';\nimport EditRow from 'material-table';\nimport Groupbar from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\";\nimport Papa from 'papaparse'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.search = () => {};\n\n    this.saveToDb = () => {\n      //this.setState({isLoading : true})\n      console.log(this.state.isLoading);\n      fetch(new Request('/demo/addAllData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(this.state.data)\n      }).then(response => console.log).catch(error => console.error);\n      console.log(this.state.isLoading); //this.setState({isLoading:false})\n    };\n\n    this.addToDb = data => {\n      fetch(new Request('/demo/addOrUpdateData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.deleteFromDb = data => {\n      //event.preventDefault();\n      console.log(\"called\");\n      fetch(new Request('/demo/deleteData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.setData = () => {\n      console.log(\"SETDATA From TABLE\");\n      var NewColumns = [];\n      var NewData = [];\n      var NewData_t = [];\n      this.state.columns.forEach(function (column) {\n        NewColumns.push(column.title);\n      });\n      NewData = this.state.data;\n      console.log(\"HHHHHHHH\" + NewData);\n      this.state.data.forEach(function (data) {\n        NewData_t.push(data[\"fare\"]);\n      });\n      console.log(NewData_t);\n      NewData_t.sort(this.compareNumbers); //NewData_t.sort();\n\n      console.log(NewData_t);\n      this.props.setData({\n        columns: NewColumns,\n        data: NewData_t\n      });\n    };\n\n    this.uploadCsvFile = event => {\n      event.preventDefault();\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: this.updateTable\n      });\n    };\n\n    this.updateTable = result => {\n      var NewColumns = [];\n      var NewData = [];\n      result.meta.fields.forEach(function (field) {\n        NewColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase(),\n          searchable: true\n        });\n      });\n      result.data.forEach(function (data) {\n        let newObject = {};\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            newObject[key.toLowerCase()] = data[key];\n          }\n        }\n\n        NewData.push(newObject);\n      });\n      this.setState({\n        columns: NewColumns,\n        data: NewData\n      });\n      this.saveToDb();\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Ezops - DB chart generator\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"raised-button-file\",\n        id: \"FileUploadBtn\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: this.uploadCsvFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Database Table\"), React.createElement(MaterialTable, {\n        options: {\n          grouping: true,\n          showTitle: false,\n          toolbarButtonAlignment: \"left\",\n          headerStyle: {\n            color: 'green'\n          }\n        },\n        isLoading: this.state.isLoading,\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                data.push(newData);\n                console.log(newData);\n                this.addToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.addToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.deleteFromDb(oldData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        components: {\n          GroupRow: props => React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }, \"rowwww\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.setData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"UpdateChart\"));\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'id'\n      }, {\n        title: 'COL2',\n        field: 'col2'\n      }, {\n        title: 'COL3',\n        field: 'col3'\n      }, {\n        title: 'COL4',\n        field: 'col4'\n      }],\n      data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }],\n      isLoading: false\n    };\n  }\n\n  compareNumbers(a, b) {\n    return a - b;\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","MTableHeader","MTableBodyRow","EditRow","Groupbar","Button","Input","Papa","Table","constructor","props","search","saveToDb","console","log","state","isLoading","fetch","Request","method","redirect","headers","Headers","credentials","body","JSON","stringify","data","then","response","catch","error","addToDb","deleteFromDb","setData","NewColumns","NewData","NewData_t","columns","forEach","column","push","title","sort","compareNumbers","uploadCsvFile","event","preventDefault","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","result","meta","fields","field","toUpperCase","toLowerCase","searchable","newObject","key","hasOwnProperty","setState","render","grouping","showTitle","toolbarButtonAlignment","headerStyle","color","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","GroupRow","id","col2","col3","col4","a","b"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable, {MTableHeader}from 'material-table';\nimport MTableBodyRow from 'material-table';\n\nimport EditRow from 'material-table';\nimport Groupbar from 'material-table';\n\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\"\n\nimport Papa from 'papaparse';\n\n// default param in const?\nclass Table extends Component {\nconstructor(props) {\n  super(props);\n  // Default\n  this.state = {\n    columns: [{\n        title: 'ID',\n        field: 'id'\n\n\n      },\n      {\n        title: 'COL2',\n        field: 'col2'\n\n      },\n      {\n        title: 'COL3',\n        field: 'col3'\n      },\n      {\n        title: 'COL4',\n        field: 'col4'\n      },\n    ],\n\n    data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      },\n      {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      },\n    ],\n    isLoading: false\n\n  };\n}\n\nsearch = () =>{\n\n\n}\n\n\nsaveToDb = () => {\n\n//this.setState({isLoading : true})\nconsole.log(this.state.isLoading);\n\nfetch(new Request('/demo/addAllData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(this.state.data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\nconsole.log(this.state.isLoading);\n//this.setState({isLoading:false})\n\n}\n\n\naddToDb = (data) => {\n\n\nfetch(new Request('/demo/addOrUpdateData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\ndeleteFromDb = (data) => {\n  //event.preventDefault();\n\nconsole.log(\"called\");\n\nfetch(new Request('/demo/deleteData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\n// Table To Parent APP\nsetData = () => {\n  console.log(\"SETDATA From TABLE\");\n\n  var NewColumns = [];\n  var NewData = [];\n  var NewData_t = [];\n\n  this.state.columns.forEach(function(column) {\n    NewColumns.push(\n      column.title\n    );\n  });\n\n  NewData = this.state.data;\n\n  console.log(\"HHHHHHHH\" + NewData);\n\n  this.state.data.forEach(function(data) {\n\n    NewData_t.push(\n      data[\"fare\"]\n    );\n  });\n\nconsole.log(NewData_t);\n  NewData_t.sort(this.compareNumbers);\n//NewData_t.sort();\n\n  console.log(NewData_t);\n\n  this.props.setData({\n    columns: NewColumns,\n    data: NewData_t\n  });\n\n}\n\ncompareNumbers(a, b) {\n  return a - b;\n}\n\n\nuploadCsvFile = (event) => {\n  event.preventDefault();\n\n  Papa.parse(event.target.files[0], {\n    header: true,\n    skipEmptyLines: true,\n    dynamicTyping: true,\n    complete: this.updateTable\n  });\n}\n\n\nupdateTable = (result) => {\n\n  var NewColumns = [];\n  var NewData = [];\n\n  result.meta.fields.forEach(function(field) {\n    NewColumns.push({\n      title: field.toUpperCase(),\n      field: field.toLowerCase(),\n      searchable: true\n    });\n  });\n\n  result.data.forEach(function(data) {\n    let newObject = {};\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        newObject[key.toLowerCase()] = data[key]\n      }\n    }\n    NewData.push(newObject);\n  });\n\n  this.setState({\n    columns: NewColumns,\n    data: NewData\n  });\n\n  this.saveToDb();\n\n}\n    render = () => {\n        return (\n          <div>\n          <h2>Ezops - DB chart generator</h2>\n          <div>\n            <Input\n                id=\"raised-button-file\"\n                    id  = \"FileUploadBtn\"\n                    type=\"file\"\n                    accept=\".csv\"\n                  onChange = {this.uploadCsvFile}\n            />\n          </div>\n\n            <h3>Database Table</h3>\n            <MaterialTable\n               options={{\ngrouping:true,\n                  showTitle: false,\n                  toolbarButtonAlignment: \"left\",\nheaderStyle: {color: 'green'}\n                }}\n\n              isLoading={this.state.isLoading}\n               columns={this.state.columns}\n               data={this.state.data}\n\n               editable={{\n                 onRowAdd: newData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         data.push(newData);\n                         console.log(newData);\n                         this.addToDb(newData);\n\n                         this.setState({ data }, () => resolve());\n\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowUpdate: (newData, oldData) =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data[index] = newData;\n                         this.addToDb(newData);\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowDelete: oldData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         let data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data.splice(index, 1);\n                         this.deleteFromDb(oldData);\n\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n               }}\n               components={{\n                 GroupRow: props => (\n                     <div>rowwww</div>\n\n                 )\n\n\n   }}\n\n             />\n           <button onClick = {this.setData}>UpdateChart</button>\n        </div>\n        );\n        }\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}