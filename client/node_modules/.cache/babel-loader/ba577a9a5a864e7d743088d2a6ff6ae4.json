{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\n\nclass Dialog2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const name = event.target.value;\n      this.setState({\n        [name]: event.target.checked\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Update Charts\"), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Choose categories to generate charts.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.columns.map(column => React.createElement(FormControlLabel, {\n        key: column.title,\n        control: React.createElement(Checkbox, {\n          checked: false,\n          onChange: this.handleChange,\n          value: column.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }),\n        label: column.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Ok\"))));\n    };\n\n    this.state = {\n      open: false,\n      columns: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\"); //this.setState({columns:this.props.columns});\n    //console.log(this.state.columns);\n\n    if (prevProps !== this.props) {\n      this.props.columns.map(column => //column.value = column.title;\n      column.ischecked = false);\n      console.log(this.props);\n    } //this.setState();\n\n  }\n\n}\n\nexport default Dialog2;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js"],"names":["React","Component","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","Select","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","Dialog2","constructor","props","handleChange","event","target","name","value","setState","checked","handleClickOpen","open","handleClose","render","state","columns","map","column","title","componentDidUpdate","prevProps","console","log","ischecked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA;;;;;;;;;;;;;;AAaA,MAAMC,OAAN,SAAsBjB,SAAtB,CAA+B;AAC7BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,YA5BmB,GA4BHC,KAAD,IAAW;AACxB,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACC,MAAN,CAAaE,KAA1B;AACA,WAAKC,QAAL,CAAc;AAAG,SAACF,IAAD,GAAQF,KAAK,CAACC,MAAN,CAAaI;AAAxB,OAAd;AACF,KAhCmB;;AAAA,SAkCnBC,eAlCmB,GAkCD,MAAK;AACrB,WAAKF,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KApCkB;;AAAA,SAsCnBC,WAtCmB,GAsCJ,MAAK;AAClB,WAAKJ,QAAL,CAAc;AAAGG,QAAAA,IAAI,EAAE;AAAT,OAAd;AACD,KAxCkB;;AAAA,SA0CnBE,MA1CmB,GA0CV,MAAM;AACX,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA6C,QAAA,OAAO,EAAE,KAAKH,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,oBAAoB,MAA5B;AAA6B,QAAA,oBAAoB,MAAjD;AAAkD,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWH,IAAnE;AAAyE,QAAA,OAAO,EAAE,KAAKC,WAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKV,KAAL,CAAWa,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IACvB,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAIA,MAAM,CAACC,KADhB;AACuB,QAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAnB;AAA0B,UAAA,QAAQ,EAAE,KAAKf,YAAzC;AAAuD,UAAA,KAAK,EAAEc,MAAM,CAACC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADhC;AAEE,QAAA,KAAK,EAAED,MAAM,CAACC,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF,CAFI,CADA,CADF,CAFF,EAoBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKN,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CApBF,CAFF,CADE;AAkCH,KA7EkB;;AAEjB,SAAKE,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,KADK;AAEXI,MAAAA,OAAO,EAAC;AAFG,KAAb;AAKD;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAD4B,CAE5B;AAGA;;AAEA,QAAIF,SAAS,KAAK,KAAKlB,KAAvB,EAA8B;AAG5B,WAAKA,KAAL,CAAWa,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IACrB;AACAA,MAAAA,MAAM,CAACM,SAAP,GAAmB,KAFrB;AAIAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AACD,KAf2B,CAiB9B;;AAED;;AA5B8B;;AAkF/B,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\nclass Dialog2 extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      columns:[]\n\n    };\n  }\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\");\n    //this.setState({columns:this.props.columns});\n\n\n    //console.log(this.state.columns);\n\n    if (prevProps !== this.props) {\n\n\n      this.props.columns.map((column) =>(\n        //column.value = column.title;\n        column.ischecked = false\n        ));\n      console.log(this.props);\n    }\n\n  //this.setState();\n\n}\n  handleChange = (event) => {\n    const target = event.target;\n    const name = event.target.value;\n    this.setState({  [name]: event.target.checked });\n }\n\n  handleClickOpen = () =>{\n    this.setState({ open: true });\n  }\n\n  handleClose =  () =>{\n    this.setState({  open: false });\n  }\n\n  render = () => {\n      return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\"  onClick={this.handleClickOpen}>Update Charts</Button>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n        <DialogTitle>Choose categories to generate charts.</DialogTitle>\n        <DialogContent>\n          <form>\n          <FormControl component=\"fieldset\">\n\n      <FormGroup>\n\n      { this.props.columns.map((column) =>(\n        <FormControlLabel\n          key = {column.title} control={<Checkbox checked={false} onChange={this.handleChange} value={column.title} />}\n          label={column.title}\n        /> ))\n      }\n\n      </FormGroup>\n    </FormControl>\n\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n}\n\n\nexport default Dialog2;\n"]},"metadata":{},"sourceType":"module"}