{"ast":null,"code":"import _slicedToArray from \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/SearchBar.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function ComposedTextField() {\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        labelWidth = _React$useState2[0],\n        setLabelWidth = _React$useState2[1];\n\n  const _React$useState3 = React.useState('Composed TextField'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        name = _React$useState4[0],\n        setName = _React$useState4[1];\n\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-helper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-helper\",\n    value: name,\n    onChange: handleChange,\n    \"aria-describedby\": \"component-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"component-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Some important helper text\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-disabled\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Disabled\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-error\",\n    value: name,\n    onChange: handleChange,\n    \"aria-describedby\": \"component-error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Error\")), React.createElement(FormControl, {\n    className: classes.formControl,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: labelRef,\n    htmlFor: \"component-outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Name\"), React.createElement(OutlinedInput, {\n    id: \"component-outlined\",\n    value: name,\n    onChange: handleChange,\n    labelWidth: labelWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    className: classes.formControl,\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Name\"), React.createElement(FilledInput, {\n    id: \"component-filled\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/SearchBar.js"],"names":["React","makeStyles","FilledInput","FormControl","FormHelperText","Input","InputLabel","OutlinedInput","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","ComposedTextField","useState","labelWidth","setLabelWidth","name","setName","labelRef","useRef","classes","useEffect","current","offsetWidth","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState('Composed TextField');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n        <Input\n          id=\"component-helper\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-helper-text\"\n        />\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n        <Input\n          id=\"component-error\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-error-text\"\n        />\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"outlined\">\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id=\"component-outlined\"\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"filled\">\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}