{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.setData = newState => {\n      this.props.setData({\n        columns: [this.state.columns[1].title, this.state.columns[2].title, this.state.columns[3].title],\n        data: [this.state.data[0], this.state.data[1]]\n      });\n      this.setState(newState);\n    };\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                /* const data = this.state.data;\n                data.push(newData);\n                this.setState({ data }, () => resolve()); */\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                /* const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.setState({ data }, () => resolve()); */\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                /* let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.setState({ data }, () => resolve()); */\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'ID'\n      }, {\n        title: 'COL2',\n        field: 'col2'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        ID: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        ID: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }]\n    };\n  } // Convert\n\n\n  componentDidMount() {\n    console.log(\"DID MOUNTTT\");\n    this.setData(this.state);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Table","constructor","props","setData","newState","columns","state","title","data","setState","render","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","field","type","ID","col2","col3","col4","componentDidMount","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\n// default param in const?\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      // Default\n      this.state = {\n        columns : [\n          { title: 'ID', field: 'ID' },\n          { title: 'COL2', field: 'col2'},\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n\n        data: [\n          { ID: \"A\", col2: 80, col3: 30, col4: 40 },\n          { ID: \"B\", col2: 30, col3: 20, col4: 10 },\n        ]\n      };\n    }\n\n    // Convert\n    setData = (newState) => {\n      this.props.setData({\n        columns: [\n              this.state.columns[1].title,\n              this.state.columns[2].title,\n              this.state.columns[3].title\n            ],\n        data: [\n          this.state.data[0],\n          this.state.data[1]\n        ]\n\n        });\n\n      this.setState(newState);\n\n    }\n\n    componentDidMount(){\n      console.log(\"DID MOUNTTT\");\n      this.setData(this.state);\n    }\n\n  render = () => {\n  return (\n    <MaterialTable\n      columns={this.state.columns}\n      data={this.state.data}\n    editable={{\n\n        onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    {\n                        /* const data = this.state.data;\n                        data.push(newData);\n                        this.setState({ data }, () => resolve()); */\n                    }\n                    resolve();\n                }, 1000);\n            }),\n        onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    {\n                        /* const data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        data[index] = newData;\n                        this.setState({ data }, () => resolve()); */\n                    }\n                    resolve();\n                }, 1000);\n            }),\n        onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    {\n                        /* let data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        data.splice(index, 1);\n                        this.setState({ data }, () => resolve()); */\n                    }\n                    resolve();\n                }, 1000);\n            })\n    }}\n/>\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}