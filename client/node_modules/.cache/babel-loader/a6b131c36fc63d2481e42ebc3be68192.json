{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/UpdateChartsDialog.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nclass UpdateChartsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        open: false\n      });\n      this.props.setSelectedCategoryData(this.state.value);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleOpen,\n        id: \"updateChartsBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Update Charts\"), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Choose a category to generate charts.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Category\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"Category\",\n        name: \"category\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.columns.map(column => React.createElement(FormControlLabel, {\n        key: column.field,\n        value: column.field,\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        label: column.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Ok\"))));\n    };\n\n    this.state = {\n      open: false,\n      value: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        columns: this.props.columns\n      });\n    }\n  }\n\n}\n\nexport default UpdateChartsDialog;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/UpdateChartsDialog.js"],"names":["React","Component","Button","Dialog","DialogActions","DialogContent","DialogTitle","Radio","RadioGroup","FormLabel","FormControl","FormControlLabel","UpdateChartsDialog","constructor","props","handleChange","event","setState","value","target","handleOpen","open","handleOk","setSelectedCategoryData","state","handleClose","render","columns","map","column","field","title","componentDidUpdate","prevProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nclass UpdateChartsDialog extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      value: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        columns: this.props.columns\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      open: false\n    });\n    this.props.setSelectedCategoryData(this.state.value);\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n\n  render = () => {\n      return (\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleOpen} id =\"updateChartsBtn\"> Update Charts</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n              <DialogTitle>Choose a category to generate charts.</DialogTitle>\n              <DialogContent>\n                <form>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Category</FormLabel>\n                  <RadioGroup\n                    aria-label=\"Category\"\n                    name=\"category\"\n                    value={this.state.value}\n                    onChange={this.handleChange}>\n                    { this.props.columns.map((column) =>(\n                        <FormControlLabel key = {column.field} value={column.field} control={<Radio />} label={column.title} /> ))\n                    }\n                  </RadioGroup>\n                </FormControl>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleOk} color=\"primary\">\n                  Ok\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n      }\n}\n\n\nexport default UpdateChartsDialog;\n"]},"metadata":{},"sourceType":"module"}