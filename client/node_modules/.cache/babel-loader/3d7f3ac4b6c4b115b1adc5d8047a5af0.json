{"ast":null,"code":"/*\n  Highcharts JS v7.1.2 (2019-06-03)\n\n (c) 2010-2019 Highsoft AS\n Author: Sebastian Domas\n\n License: www.highcharts.com/license\n*/\n(function (a) {\n  \"object\" === typeof module && module.exports ? (a[\"default\"] = a, module.exports = a) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/histogram-bellcurve\", [\"highcharts\"], function (c) {\n    a(c);\n    a.Highcharts = c;\n    return a;\n  }) : a(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (a) {\n  function c(b, a, g, m) {\n    b.hasOwnProperty(a) || (b[a] = m.apply(null, g));\n  }\n\n  a = a ? a._modules : {};\n  c(a, \"mixins/derived-series.js\", [a[\"parts/Globals.js\"]], function (b) {\n    var a = b.Series,\n        g = b.addEvent;\n    return {\n      hasDerivedData: !0,\n      init: function () {\n        a.prototype.init.apply(this, arguments);\n        this.initialised = !1;\n        this.baseSeries = null;\n        this.eventRemovers = [];\n        this.addEvents();\n      },\n      setDerivedData: b.noop,\n      setBaseSeries: function () {\n        var a = this.chart,\n            h = this.options.baseSeries;\n        this.baseSeries = b.defined(h) && (a.series[h] || a.get(h)) || null;\n      },\n      addEvents: function () {\n        var a = this,\n            b;\n        b = g(this.chart, \"afterLinkSeries\", function () {\n          a.setBaseSeries();\n          a.baseSeries && !a.initialised && (a.setDerivedData(), a.addBaseSeriesEvents(), a.initialised = !0);\n        });\n        this.eventRemovers.push(b);\n      },\n      addBaseSeriesEvents: function () {\n        var a = this,\n            b,\n            e;\n        b = g(a.baseSeries, \"updatedData\", function () {\n          a.setDerivedData();\n        });\n        e = g(a.baseSeries, \"destroy\", function () {\n          a.baseSeries = null;\n          a.initialised = !1;\n        });\n        a.eventRemovers.push(b, e);\n      },\n      destroy: function () {\n        this.eventRemovers.forEach(function (a) {\n          a();\n        });\n        a.prototype.destroy.apply(this, arguments);\n      }\n    };\n  });\n  c(a, \"modules/histogram.src.js\", [a[\"parts/Globals.js\"], a[\"mixins/derived-series.js\"]], function (a, c) {\n    function b(a) {\n      return function (f) {\n        for (var b = 1; a[b] <= f;) b++;\n\n        return a[--b];\n      };\n    }\n\n    var m = a.objectEach,\n        h = a.seriesType,\n        e = a.correctFloat,\n        n = a.isNumber,\n        p = a.arrayMax,\n        r = a.arrayMin;\n    a = a.merge;\n    var d = {\n      \"square-root\": function (a) {\n        return Math.ceil(Math.sqrt(a.options.data.length));\n      },\n      sturges: function (a) {\n        return Math.ceil(Math.log(a.options.data.length) * Math.LOG2E);\n      },\n      rice: function (a) {\n        return Math.ceil(2 * Math.pow(a.options.data.length, 1 / 3));\n      }\n    };\n    h(\"histogram\", \"column\", {\n      binsNumber: \"square-root\",\n      binWidth: void 0,\n      pointPadding: 0,\n      groupPadding: 0,\n      grouping: !1,\n      pointPlacement: \"between\",\n      tooltip: {\n        headerFormat: \"\",\n        pointFormat: '\\x3cspan style\\x3d\"font-size: 10px\"\\x3e{point.x} - {point.x2}\\x3c/span\\x3e\\x3cbr/\\x3e\\x3cspan style\\x3d\"color:{point.color}\"\\x3e\\u25cf\\x3c/span\\x3e {series.name} \\x3cb\\x3e{point.y}\\x3c/b\\x3e\\x3cbr/\\x3e'\n      }\n    }, a(c, {\n      setDerivedData: function () {\n        var a = this.derivedData(this.baseSeries.yData, this.binsNumber(), this.options.binWidth);\n        this.setData(a, !1);\n      },\n      derivedData: function (a, k, d) {\n        var f = p(a),\n            l = e(r(a)),\n            c = [],\n            g = {},\n            h = [],\n            q;\n        d = this.binWidth = this.options.pointRange = e(n(d) ? d || 1 : (f - l) / k);\n\n        for (k = l; k < f && (this.userOptions.binWidth || e(f - k) >= d || 0 >= e(l + c.length * d - k)); k = e(k + d)) c.push(k), g[k] = 0;\n\n        0 !== g[l] && (c.push(e(l)), g[e(l)] = 0);\n        q = b(c.map(function (a) {\n          return parseFloat(a);\n        }));\n        a.forEach(function (a) {\n          a = e(q(a));\n          g[a]++;\n        });\n        m(g, function (a, b) {\n          h.push({\n            x: Number(b),\n            y: a,\n            x2: e(Number(b) + d)\n          });\n        });\n        h.sort(function (a, b) {\n          return a.x - b.x;\n        });\n        return h;\n      },\n      binsNumber: function () {\n        var a = this.options.binsNumber,\n            b = d[a] || \"function\" === typeof a && a;\n        return Math.ceil(b && b(this.baseSeries) || (n(a) ? a : d[\"square-root\"](this.baseSeries)));\n      }\n    }));\n  });\n  c(a, \"modules/bellcurve.src.js\", [a[\"parts/Globals.js\"], a[\"mixins/derived-series.js\"]], function (a, c) {\n    function b(a) {\n      var b = a.length;\n      a = a.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      return 0 < b && a / b;\n    }\n\n    function m(a, d) {\n      var f = a.length;\n      d = p(d) ? d : b(a);\n      a = a.reduce(function (a, b) {\n        b -= d;\n        return a + b * b;\n      }, 0);\n      return 1 < f && Math.sqrt(a / (f - 1));\n    }\n\n    function h(a, b, f) {\n      a -= b;\n      return Math.exp(-(a * a) / (2 * f * f)) / (f * Math.sqrt(2 * Math.PI));\n    }\n\n    var e = a.seriesType,\n        n = a.correctFloat,\n        p = a.isNumber;\n    a = a.merge;\n    e(\"bellcurve\", \"areaspline\", {\n      intervals: 3,\n      pointsInInterval: 3,\n      marker: {\n        enabled: !1\n      }\n    }, a(c, {\n      setMean: function () {\n        this.mean = n(b(this.baseSeries.yData));\n      },\n      setStandardDeviation: function () {\n        this.standardDeviation = n(m(this.baseSeries.yData, this.mean));\n      },\n      setDerivedData: function () {\n        1 < this.baseSeries.yData.length && (this.setMean(), this.setStandardDeviation(), this.setData(this.derivedData(this.mean, this.standardDeviation), !1));\n      },\n      derivedData: function (a, b) {\n        var f = this.options.intervals,\n            c = this.options.pointsInInterval,\n            d = a - f * b,\n            f = f * c * 2 + 1,\n            c = b / c,\n            e = [],\n            g;\n\n        for (g = 0; g < f; g++) e.push([d, h(d, a, b)]), d += c;\n\n        return e;\n      }\n    }));\n  });\n  c(a, \"masters/modules/histogram-bellcurve.src.js\", [], function () {});\n});","map":null,"metadata":{},"sourceType":"script"}