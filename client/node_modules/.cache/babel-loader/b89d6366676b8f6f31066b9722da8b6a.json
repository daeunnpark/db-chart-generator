{"ast":null,"code":"import _objectSpread from \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Surname',\n        field: 'surname'\n      }, {\n        title: 'Birth Year',\n        field: 'birthYear',\n        type: 'numeric'\n      }, {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: {\n          34: 'İstanbul',\n          63: 'Şanlıurfa'\n        }\n      }],\n      data: [{\n        name: 'Mehmet',\n        surname: 'Baran',\n        birthYear: 1987,\n        birthCity: 63\n      }, {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34\n      }]\n    };\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        title: \"Editable Example\",\n        columns: state.columns,\n        data: state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState(_objectSpread({}, state, {\n                data\n              }));\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data[data.indexOf(oldData)] = newData;\n              setState(_objectSpread({}, state, {\n                data\n              }));\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.splice(data.indexOf(oldData), 1);\n              setState(_objectSpread({}, state, {\n                data\n              }));\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    };\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","MaterialTable","Table","Component","state","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","render","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\n\n\nclass Table extends Component {\n  state = {\n    columns : [\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34,\n      },\n    ]\n\n  };\n\n  render = () => {\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState({ ...state, data });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data[data.indexOf(oldData)] = newData;\n              setState({ ...state, data });\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.splice(data.indexOf(oldData), 1);\n              setState({ ...state, data });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}