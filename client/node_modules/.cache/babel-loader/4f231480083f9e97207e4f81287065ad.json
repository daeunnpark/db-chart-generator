{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/App.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport './App.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Table from \"./components/Table\";\nimport Button from '@material-ui/core/Button';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official'; // default param in const?\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: {\n        chart: {\n          type: 'column'\n        },\n        title: {\n          text: 'Monthly Average Rainfall'\n        },\n        subtitle: {\n          text: 'Source: WorldClimate.com'\n        },\n        xAxis: {\n          categories: ['Jan', 'Feb', 'Mar'],\n          crosshair: true\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: 'Rainfall (mm)'\n          }\n        },\n        tooltip: {\n          headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n          pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n          footerFormat: '</table>',\n          shared: true,\n          useHTML: true\n        },\n        plotOptions: {\n          column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n          }\n        },\n        series: [{\n          name: 'Tokyo',\n          data: [49.9, 71.5, 106.4]\n        }, {\n          name: 'New York',\n          data: [83.6, 78.8, 98.5]\n        }, {\n          name: 'London',\n          data: [48.9, 38.8, 39.3]\n        }, {\n          name: 'Berlin',\n          data: [42.4, 33.2, 34.5]\n        }]\n      },\n      options2: {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false,\n          type: 'pie'\n        },\n        title: {\n          text: 'Browser market shares in January, 2018'\n        },\n        tooltip: {\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            }\n          }\n        },\n        series: [{\n          name: 'Brands',\n          colorByPoint: true,\n          data: [{\n            name: 'Chrome',\n            y: 65,\n            sliced: true,\n            selected: true\n          }, {\n            name: 'Internet Explorer',\n            y: 11.84\n          }, {\n            name: 'Firefox',\n            y: 10.85\n          }, {\n            name: 'Edge',\n            y: 4.67\n          }, {\n            name: 'Safari',\n            y: 4.18\n          }, {\n            name: 'Sogou Explorer',\n            y: 1.64\n          }, {\n            name: 'Opera',\n            y: 1.6\n          }, {\n            name: 'QQ',\n            y: 1.2\n          }, {\n            name: 'Other',\n            y: 2.61\n          }]\n        }]\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        request: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setData();\n      /*\n      var request = this.state.request.trim();\n      if (!request) {\n        return;\n      }\n      fetch(`/echo?request=${request}`)\n          .then(response => {\n            return response.text();\n          })\n          .then(body => {\n            alert(body);\n          });\n          */\n    };\n\n    this.handleSubmit2 = event => {\n      event.preventDefault();\n      let file = event.target.files[0];\n      console.log(file);\n      /*\n       if (file) {\n           let data = new FormData();\n           data.append('file', file);\n           // axios.post('/files', data)...\n         }\n         */\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Upload File\", React.createElement(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        style: {\n          display: \"none\"\n        },\n        onChange: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }));\n    };\n  }\n\n  setData() {\n    this.setState({\n      options: {\n        xAxis: {\n          categories: ['Sept', 'Octo', 'Dec']\n        }\n      }\n    });\n  }\n\n}\n\nexport default App;\n/**/","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/App.js"],"names":["React","Component","SearchBar","Table","Button","Highcharts","HighchartsReact","App","state","options","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","name","data","options2","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","y","sliced","selected","handleChange","event","setState","request","target","value","handleSubmit","preventDefault","setData","handleSubmit2","file","files","console","log","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport './App.css';\nimport SearchBar from \"./components/SearchBar\"\nimport Table from \"./components/Table\"\nimport Button from '@material-ui/core/Button';\n\n\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\n\n\n\n// default param in const?\nclass App extends Component {\n  state = {\n    options :\n    {\n        chart: {\n            type: 'column'\n        },\n        title: {\n            text: 'Monthly Average Rainfall'\n        },\n        subtitle: {\n            text: 'Source: WorldClimate.com'\n        },\n        xAxis: {\n            categories: [\n                'Jan',\n                'Feb',\n                'Mar',\n\n            ],\n            crosshair: true\n        },\n        yAxis: {\n            min: 0,\n            title: {\n                text: 'Rainfall (mm)'\n            }\n        },\n        tooltip: {\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n            footerFormat: '</table>',\n            shared: true,\n            useHTML: true\n        },\n        plotOptions: {\n            column: {\n                pointPadding: 0.2,\n                borderWidth: 0\n            }\n        },\n        series: [{\n            name: 'Tokyo',\n            data: [49.9, 71.5, 106.4]\n\n        }, {\n            name: 'New York',\n            data: [83.6, 78.8, 98.5]\n\n        }, {\n            name: 'London',\n            data: [48.9, 38.8, 39.3]\n\n        }, {\n            name: 'Berlin',\n            data: [42.4, 33.2, 34.5]\n\n        }]\n    },\n\n\n    options2 :\n    {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n        },\n        title: {\n            text: 'Browser market shares in January, 2018'\n        },\n        tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n                }\n            }\n        },\n        series: [{\n            name: 'Brands',\n            colorByPoint: true,\n            data: [{\n                name: 'Chrome',\n                y: 65,\n                sliced: true,\n                selected: true\n            }, {\n                name: 'Internet Explorer',\n                y: 11.84\n            }, {\n                name: 'Firefox',\n                y: 10.85\n            }, {\n                name: 'Edge',\n                y: 4.67\n            }, {\n                name: 'Safari',\n                y: 4.18\n            }, {\n                name: 'Sogou Explorer',\n                y: 1.64\n            }, {\n                name: 'Opera',\n                y: 1.6\n            }, {\n                name: 'QQ',\n                y: 1.2\n            }, {\n                name: 'Other',\n                y: 2.61\n            }]\n        }]\n    }\n  };\n\n  setData(){\n    this.setState({\n      options :\n      {\n          xAxis: {\n              categories: [\n                  'Sept',\n                  'Octo',\n                  'Dec'\n              ]\n          }\n        }\n    });\n  }\n\n\n\n\n  handleChange = (event) => {\n    this.setState( {request: event.target.value} )\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setData();\n    /*\n    var request = this.state.request.trim();\n    if (!request) {\n      return;\n    }\n    fetch(`/echo?request=${request}`)\n        .then(response => {\n          return response.text();\n        })\n        .then(body => {\n          alert(body);\n        });\n        */\n  }\n\n\n  handleSubmit2 = (event) => {\n    event.preventDefault();\n\n    let file = event.target.files[0];\n    console.log(file);\n\n      /*\n       if (file) {\n           let data = new FormData();\n           data.append('file', file);\n           // axios.post('/files', data)...\n         }\n         */\n  }\n\n\n\n\n\n  render = () => {\n    return (\n      <div className=\"App\">\n\n        <div>\n          <SearchBar/>\n\n        </div>\n\n        <Button\n      variant=\"contained\"\n      component=\"label\"\n    >\n      Upload File\n      <input\n        type=\"file\"\n        accept=\".csv\"\n        style={{ display: \"none\" }}\n        onChange = {this.handleSubmit}\n      />\n    </Button>\n    <Table/>\n    <Chart/>\n\n\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n/**/\n"]},"metadata":{},"sourceType":"module"}