{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official'; // Load Highcharts modules\n\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\n\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [1, 2],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    tickInterval: 1,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0,\n      borderWidth: 1,\n      groupPadding: 0.2,\n      shadow: false\n      /*\n          column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n          }\n      */\n\n    }\n  },\n  series: [{\n    name: 'Data',\n    data: [42, 55]\n  }]\n};\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: '0',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: '1',\n      y: 11.84\n    }]\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculate = arr => {\n      var counts = {};\n      var pie_data = [];\n      var bar_cate = [];\n      var bar_data = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        var num = arr[i];\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n\n      console.log(counts);\n      Object.keys(counts).forEach(function (key) {\n        let newObject = {};\n        newObject = {\n          name: key,\n          y: counts[key]\n        };\n        pie_data.push(newObject);\n      });\n      console.log(pie_data);\n      bar_cate = Object.keys(counts);\n      let newObject2 = {};\n      newObject2 = {\n        data: Object.values(counts)\n      };\n      bar_data = Object.values(counts);\n      console.log(bar_data); //return counts;\n\n      return {\n        bar_cate: bar_cate,\n        bar_data: bar_data,\n        pie_data: pie_data\n      };\n    };\n\n    this.chartDataParser_bar = dataList => {\n      var chartData = [];\n      dataList.forEach(function (data) {\n        var temp = Object.values(data);\n        let newObject = {};\n        newObject = {\n          name: temp[0],\n          data: temp.slice(1, -1).map(Number)\n        };\n        chartData.push(newObject);\n      });\n      return chartData;\n    };\n\n    this.chartDataParser_pie = (categories, dataList) => {\n      var chartData = [];\n      categories.forEach(function (category) {\n        let newObject = {};\n        var sum = 0;\n        dataList.forEach(function (data) {\n          sum += Number(data[category.toLowerCase()]);\n        });\n        newObject = {\n          name: category,\n          y: sum\n        };\n        chartData.push(newObject);\n      });\n      return chartData;\n    };\n\n    this.setChartData = (newCategories, newChartData_bar, newChartData_pie) => {\n      this.setState({\n        barChart_options: {\n          xAxis: {\n            categories: newCategories\n          },\n          series: newChartData_bar\n        },\n        pieChart_options: {\n          series: {\n            data: newChartData_pie\n          }\n        }\n      });\n    };\n\n    this.state = {\n      barChart_options: bar_options,\n      pieChart_options: pie_options\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps !== this.props) {\n      const _this$calculate = this.calculate(this.props.data),\n            bar_cate = _this$calculate.bar_cate,\n            bar_data = _this$calculate.bar_data,\n            pie_data = _this$calculate.pie_data;\n\n      console.log(bar_cate);\n      console.log(bar_cate.length);\n      console.log(bar_data);\n      console.log(pie_data);\n      this.setState({\n        barChart_options: {\n          xAxis: {\n            categories: bar_cate\n          },\n          series: [{\n            name: 'Data',\n            data: bar_data\n          }]\n        },\n        pieChart_options: {\n          series: [{\n            data: pie_data\n          }]\n        }\n      });\n      /*\n            var newCategories = this.props.columns.slice(1);\n             var newChartData_bar = this.chartDataParser_bar(this.props.data);\n            var newChartData_pie = this.chartDataParser_pie(newCategories, this.props.data);\n             this.(newCategories, newChartData_bar, newChartData_pie);\n      */\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Charts\"), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.barChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.pieChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js"],"names":["React","Component","Highcharts","HighchartsReact","require","bar_options","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tickInterval","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","groupPadding","shadow","series","name","data","pie_options","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","y","sliced","selected","Chart","constructor","props","calculate","arr","counts","pie_data","bar_cate","bar_data","i","length","num","console","log","Object","keys","forEach","key","newObject","push","newObject2","values","chartDataParser_bar","dataList","chartData","temp","slice","map","Number","chartDataParser_pie","category","sum","toLowerCase","setChartData","newCategories","newChartData_bar","newChartData_pie","setState","barChart_options","pieChart_options","state","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n// Load Highcharts modules\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\n\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [\n      1,\n      2,\n    ],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    tickInterval: 1,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n      '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0,\n      borderWidth: 1,\n      groupPadding: 0.2,\n      shadow: false\n    }\n    /*\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0\n        }\n    */\n  },\n  series: [{\n    name: 'Data',\n    data: [42, 55]\n\n  }]\n}\n\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: '0',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: '1',\n      y: 11.84\n    }]\n  }]\n}\n\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart_options: bar_options,\n      pieChart_options: pie_options\n    };\n  }\n\n  calculate = (arr) => {\n\n    var counts = {};\n    var pie_data = [];\n\n    var bar_cate = [];\n    var bar_data = [];\n\n\n    for (var i = 0; i < arr.length; i++) {\n      var num = arr[i];\n      counts[num] = counts[num] ? counts[num] + 1 : 1;\n    }\n\n    console.log(counts);\n\n\n    Object.keys(counts).forEach(function(key) {\n      let newObject = {};\n      newObject = {\n        name: key,\n        y: counts[key]\n      }\n      pie_data.push(newObject);\n    });\n    console.log(pie_data);\n\n\n    bar_cate = Object.keys(counts);\n\n    let newObject2 = {};\n    newObject2 = {\n      data: Object.values(counts)\n    }\n    bar_data = Object.values(counts);\n    console.log(bar_data);\n\n    //return counts;\n    return {\n      bar_cate: bar_cate,\n      bar_data: bar_data,\n      pie_data: pie_data\n    };\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (prevProps !== this.props) {\n      const {\n        bar_cate,\n        bar_data,\n        pie_data\n      } = this.calculate(this.props.data);\n\n      console.log(bar_cate);\n      console.log(bar_cate.length);\n      console.log(bar_data);\n      console.log(pie_data);\n\n      this.setState({\n        barChart_options: {\n          xAxis: {\n            categories: bar_cate\n          },\n          series: [{\n            name: 'Data',\n            data: bar_data\n\n          }]\n        },\n\n        pieChart_options: {\n          series: [{\n            data: pie_data\n          }]\n        }\n      });\n\n      /*\n            var newCategories = this.props.columns.slice(1);\n\n            var newChartData_bar = this.chartDataParser_bar(this.props.data);\n            var newChartData_pie = this.chartDataParser_pie(newCategories, this.props.data);\n\n            this.(newCategories, newChartData_bar, newChartData_pie);\n      */\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n\n  }\n\n\n\n  chartDataParser_bar = (dataList) => {\n\n    var chartData = [];\n\n    dataList.forEach(function(data) {\n      var temp = Object.values(data);\n      let newObject = {};\n      newObject = {\n        name: temp[0],\n        data: temp.slice(1, -1).map(Number)\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  chartDataParser_pie = (categories, dataList) => {\n\n    var chartData = [];\n\n    categories.forEach(function(category) {\n      let newObject = {};\n      var sum = 0;\n\n      dataList.forEach(function(data) {\n        sum += Number(data[category.toLowerCase()]);\n      });\n\n      newObject = {\n        name: category,\n        y: sum\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  setChartData = (newCategories, newChartData_bar, newChartData_pie) => {\n\n    this.setState({\n      barChart_options: {\n        xAxis: {\n          categories: newCategories\n        },\n        series: newChartData_bar\n      },\n\n      pieChart_options: {\n        series: {\n          data: newChartData_pie\n        }\n      }\n    });\n\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Charts</h3>\n\n\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.barChart_options}\n      />\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.pieChart_options}\n      />\n\n      </div>\n\n    );\n\n}\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}