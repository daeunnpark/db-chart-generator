{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: ['Jan', 'Feb', 'Mar'],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0\n    }\n  },\n  series: [{\n    name: 'Tokyo',\n    data: [49.9, 71.5, 106.4]\n  }, {\n    name: 'New York',\n    data: [83.6, 78.8, 98.5]\n  }, {\n    name: 'London',\n    data: [48.9, 38.8, 39.3]\n  }, {\n    name: 'Berlin',\n    data: [42.4, 33.2, 34.5]\n  }]\n};\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: 'Chrome',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: 'Internet Explorer',\n      y: 11.84\n    }, {\n      name: 'Firefox',\n      y: 10.85\n    }, {\n      name: 'Edge',\n      y: 4.67\n    }, {\n      name: 'Safari',\n      y: 4.18\n    }, {\n      name: 'Sogou Explorer',\n      y: 1.64\n    }, {\n      name: 'Opera',\n      y: 1.6\n    }, {\n      name: 'QQ',\n      y: 1.2\n    }, {\n      name: 'Other',\n      y: 2.61\n    }]\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setData = (NewCategories, NewData) => {\n      //console.log(\"SET DATAAAAA\");\n      //console.log(this.props);\n      console.log(NewCategories);\n      console.log(NewData);\n      this.setState({\n        barChart_options: {\n          xAxis: {\n            categories: NewCategories\n          },\n          series: NewData\n        }\n      });\n    };\n\n    this.state = {\n      barChart_options: bar_options,\n      pieChart_options: pie_options\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"Compo did update\");\n\n    if (prevProps !== this.props) {\n      console.log(\"props diff\");\n      console.log(prevProps);\n      console.log(this.props);\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n\n    var NewCategories = [];\n    var NewData = [];\n    NewCategories = this.props.columns;\n    this.props.data.forEach(function (data) {\n      var temp = Object.values(data);\n      console.log(temp);\n      let newObject = {};\n      newObject = {\n        name: temp[0],\n        data: temp.slice(1, -1)\n      };\n      NewData.push(newObject);\n    });\n    console.log(\"hhhhhh\");\n    this.setData(NewCategories, NewData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.barChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.pieChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;\n/*\n  <button onClick = {this.setData}>HHH</button>\n\n      series: [{\n          name: 'Tokyo',\n          data: [49.9, 71.5, 106.4]\n\n      }, {\n          name: 'New York',\n          data: [83.6, 78.8, 98.5]\n\n      }, {\n          name: 'London',\n          data: [48.9, 38.8, 39.3]\n\n      }, {\n          name: 'Berlin',\n          data: [42.4, 33.2, 34.5]\n\n      }]*/","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js"],"names":["React","Component","Highcharts","HighchartsReact","bar_options","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","name","data","pie_options","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","y","sliced","selected","Chart","constructor","props","setData","NewCategories","NewData","console","log","setState","barChart_options","state","pieChart_options","componentDidUpdate","prevProps","prevState","snapshot","columns","forEach","temp","Object","values","newObject","slice","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nconst bar_options = {\n    chart: {\n        type: 'column'\n    },\n    title: {\n        text: 'Monthly Average Rainfall'\n    },\n    subtitle: {\n        text: 'Source: WorldClimate.com'\n    },\n    xAxis: {\n        categories: [\n            'Jan',\n            'Feb',\n            'Mar',\n\n        ],\n        crosshair: true\n    },\n    yAxis: {\n        min: 0,\n        title: {\n            text: 'Rainfall (mm)'\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n    series: [{\n        name: 'Tokyo',\n        data: [49.9, 71.5, 106.4]\n\n    }, {\n        name: 'New York',\n        data: [83.6, 78.8, 98.5]\n\n    }, {\n        name: 'London',\n        data: [48.9, 38.8, 39.3]\n\n    }, {\n        name: 'Berlin',\n        data: [42.4, 33.2, 34.5]\n\n    }]\n}\n\nconst pie_options =\n{\n    chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Browser market shares in January, 2018'\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            }\n        }\n    },\n    series: [{\n        name: 'Brands',\n        colorByPoint: true,\n        data: [{\n            name: 'Chrome',\n            y: 65,\n            sliced: true,\n            selected: true\n        }, {\n            name: 'Internet Explorer',\n            y: 11.84\n        }, {\n            name: 'Firefox',\n            y: 10.85\n        }, {\n            name: 'Edge',\n            y: 4.67\n        }, {\n            name: 'Safari',\n            y: 4.18\n        }, {\n            name: 'Sogou Explorer',\n            y: 1.64\n        }, {\n            name: 'Opera',\n            y: 1.6\n        }, {\n            name: 'QQ',\n            y: 1.2\n        }, {\n            name: 'Other',\n            y: 2.61\n        }]\n    }]\n}\n\n\nclass Chart extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart_options : bar_options,\n      pieChart_options : pie_options\n    };\n  }\n\ncomponentDidUpdate(prevProps, prevState, snapshot){\n  console.log(\"Compo did update\");\n\n  if(prevProps !==this.props){\n    console.log(\"props diff\");\n    console.log(prevProps);\n    console.log(this.props);\n  }\n\n  if(prevState !== this.state){\n    console.log(\"State diff\");\n    console.log(prevState);\n    console.log(this.state);\n}\n\n  var NewCategories = [];\n  var NewData = [];\n\n  NewCategories = this.props.columns;\n\n  this.props.data.forEach(function(data) {\n    var temp = Object.values(data);\n    console.log(temp);\n\n    let newObject = {};\n\n    newObject = {\n      name : temp[0],\n      data : temp.slice(1,-1)\n    }\n\n    NewData.push(newObject);\n\n  });\n  console.log(\"hhhhhh\");\n  this.setData(NewCategories, NewData);\n\n}\n\n\n  setData = (NewCategories, NewData) => {\n    //console.log(\"SET DATAAAAA\");\n    //console.log(this.props);\n    console.log(NewCategories);\n    console.log(NewData);\n    this.setState( {\n      barChart_options :\n      {\n          xAxis: {\n              categories: NewCategories\n          },\n          series: NewData\n        }\n    });\n\n  }\n\n\n  render(){\n    return(\n      <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.barChart_options}\n      />\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.pieChart_options}\n      />\n\n      </div>\n\n    );\n\n}\n}\nexport default Chart;\n\n\n\n/*\n  <button onClick = {this.setData}>HHH</button>\n\n      series: [{\n          name: 'Tokyo',\n          data: [49.9, 71.5, 106.4]\n\n      }, {\n          name: 'New York',\n          data: [83.6, 78.8, 98.5]\n\n      }, {\n          name: 'London',\n          data: [48.9, 38.8, 39.3]\n\n      }, {\n          name: 'Berlin',\n          data: [42.4, 33.2, 34.5]\n\n      }]*/\n"]},"metadata":{},"sourceType":"module"}