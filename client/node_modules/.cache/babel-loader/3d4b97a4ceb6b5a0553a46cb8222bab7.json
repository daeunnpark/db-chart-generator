{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\n\nclass Dialog2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = index => {\n      //const target = event.target;\n      //const name = event.target.value;\n      const columns = this.state.columns;\n      columns.forEach(function (column) {\n        column.isChecked = false;\n      });\n      const temp = this.state.columns;\n      temp[index].isChecked = !temp[index].isChecked;\n      this.setState({\n        columns: temp\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      const temp = this.state.columns;\n      temp.map(column => column.isChecked = false);\n      this.setState({\n        columns: temp,\n        open: false\n      });\n    };\n\n    this.handleOk = () => {\n      var temp = this.state.columns.filter(column => column.isChecked)[0];\n      this.props.setCheckbox(temp);\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Update Charts\"), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Choose categories to generate charts.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.columns.map((column, index) => React.createElement(FormControlLabel, {\n        key: column.title,\n        control: React.createElement(Checkbox, {\n          checked: column.isChecked,\n          onChange: this.handleChange.bind(this, index),\n          value: column.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        label: column.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Ok\"))));\n    };\n\n    this.state = {\n      open: false,\n      columns: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\");\n\n    if (prevProps !== this.props) {\n      this.props.columns.map(column => column.isChecked = false);\n      this.setState({\n        columns: this.props.columns\n      });\n    }\n  }\n\n}\n\nexport default Dialog2;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js"],"names":["React","Component","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","Select","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","Dialog2","constructor","props","handleChange","index","columns","state","forEach","column","isChecked","temp","setState","handleClickOpen","open","handleClose","map","handleOk","filter","setCheckbox","render","title","bind","componentDidUpdate","prevProps","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\nclass Dialog2 extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      columns:[]\n\n    };\n  }\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\");\n    if (prevProps !== this.props) {\n\n      this.props.columns.map((column) =>(\n        column.isChecked = false\n        ));\n\n      this.setState({columns:this.props.columns})\n    }\n\n\n}\n  handleChange = (index) => {\n    //const target = event.target;\n    //const name = event.target.value;\n    const columns = this.state.columns;\n    columns.forEach(function(column) {\n        column.isChecked = false;\n    });\n\n\n    const temp = this.state.columns\n    temp[index].isChecked = !temp[index].isChecked;\n\n\n    this.setState({ columns: temp});\n\n }\n\n  handleClickOpen = () =>{\n    this.setState({ open: true });\n\n  }\n\n  handleClose =  () =>{\n    const temp = this.state.columns;\n      temp.map((column) =>(\n      column.isChecked = false ))\n\n    this.setState({ columns : temp, open: false });\n  }\n\n  handleOk =  () =>{\n    var temp = this.state.columns.filter(column => column.isChecked)[0];\n    this.props.setCheckbox(temp);\n    this.setState({  open: false });\n  }\n\n\n\n  render = () => {\n      return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\"  onClick={this.handleClickOpen}>Update Charts</Button>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n        <DialogTitle>Choose categories to generate charts.</DialogTitle>\n        <DialogContent>\n          <form>\n          <FormControl component=\"fieldset\">\n\n      <FormGroup>\n\n      { this.props.columns.map((column, index) =>(\n        <FormControlLabel\n          key = {column.title} control={<Checkbox checked={column.isChecked} onChange={this.handleChange.bind(this, index)} value={column.title} />}\n          label={column.title}\n        /> ))\n      }\n\n      </FormGroup>\n    </FormControl>\n\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOk} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n}\n\n\nexport default Dialog2;\n"]},"metadata":{},"sourceType":"module"}