{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nconst S = messages.S;\nconst E = messages.E;\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon\n};\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = newState => () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render_Icon = () => {\n      console.log(\"ICON RENDERNGG\");\n      const SelectedIcon = variantIcon[\"error\"];\n      return React.createElement(SelectedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick({\n          vertical: 'top',\n          horizontal: 'center'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Top-Center\"), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: this.state.vertical,\n          horizontal: this.state.horizontal\n        },\n        key: \"\".concat(this.state.vertical, \",\").concat(this.state.horizontal),\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        message: React.createElement(\"span\", {\n          id: \"client-snackbar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, this.render_Icon(), this.state.message),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props.flag);\n      var msg = S;\n\n      if (this.props.flag == 1) {\n        msg = E;\n        console.log(msg);\n        console.log();\n      }\n\n      this.setState({\n        message: msg,\n        open: true\n      });\n      /*this.setState({message:E, open: true});*/\n    }\n  }\n\n}\n\nexport default Alert;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js"],"names":["React","Component","Button","Snackbar","CloseIcon","IconButton","messages","ErrorIcon","CheckCircleIcon","S","E","variantIcon","success","error","Alert","constructor","props","handleClick","newState","setState","open","handleClose","render_Icon","console","log","SelectedIcon","render","vertical","horizontal","state","message","componentDidUpdate","prevProps","flag","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nconst S = messages.S;\nconst E = messages.E;\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n};\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: ''\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props.flag);\n      var msg =S;\n        if(this.props.flag ==1){\n\n        msg = E;\n        console.log(msg);\n        console.log();\n      }\nthis.setState({ message: msg, open: true});\n      /*this.setState({message:E, open: true});*/\n\n    }\n\n  }\n\n\n  handleClick = newState => () => {\n    this.setState({ open: true });\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n\nrender_Icon = () => {\nconsole.log(\"ICON RENDERNGG\");\nconst SelectedIcon = variantIcon[\"error\"];\n  return (\n\n      <SelectedIcon />\n    \n  );\n}\n\n    render = () => {\n      return (\n    <div>\n      <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\n      <Snackbar\n        anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\n        key={`${this.state.vertical},${this.state.horizontal}`}\n        open={this.state.open}\n        autoHideDuration={3000}\n        onClose={this.handleClose}\n        message={\n                <span id=\"client-snackbar\">\n                  {this.render_Icon()}\n                  {this.state.message}\n                </span>\n              }\n\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}