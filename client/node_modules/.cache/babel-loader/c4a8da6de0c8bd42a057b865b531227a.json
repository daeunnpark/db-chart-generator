{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official'; // Load Highcharts modules\n\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\n\nconst bar_options_test2 = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [0, 1],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0,\n      borderWidth: 1,\n      groupPadding: 0.2,\n      shadow: false\n      /*\n          column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n          }\n      */\n\n    }\n  },\n  series: [{\n    name: 'Data',\n    data: [42, 55]\n  }]\n};\nconst bar_options_test = {\n  title: {\n    text: 'Highcharts Histogram'\n  },\n  xAxis: [{\n    title: {\n      text: ''\n    }\n  }, {\n    title: {\n      text: 'Histogramxxxxx'\n    } //tickInterval: 1,\n    //alignTicks: false,\n\n  }],\n  yAxis: [{\n    title: {\n      text: ''\n    }\n  }, {\n    title: {\n      text: 'Histogramyyy'\n    },\n    tickInterval: 1\n  }],\n  series: [{\n    name: 'Histogramssss',\n    type: 'histogram',\n    xAxis: 1,\n    yAxis: 1,\n    baseSeries: 's1',\n    zIndex: -1 //binsNumber: \"rice\",\n\n  }, {\n    showInLegend: false,\n    name: 'Data',\n    visible: false,\n    data: [0, 1, 1, 1, 11, 2, 23, 4, 1, 12],\n    id: 's1'\n  }]\n};\nconst bar_options_test_histo_sample = {\n  title: {\n    text: 'Highcharts Histogram'\n  },\n  xAxis: [{\n    title: {\n      text: 'Data'\n    },\n    tickInterval: 1,\n    alignTicks: false\n  }, {\n    title: {\n      text: 'Histogram'\n    },\n    alignTicks: false,\n    opposite: true\n  }],\n  yAxis: [{\n    title: {\n      text: 'Data'\n    }\n  }, {\n    title: {\n      text: 'Histogram'\n    },\n    opposite: true\n  }],\n  series: [{\n    name: 'Histogram',\n    type: 'histogram',\n    xAxis: 1,\n    yAxis: 1,\n    baseSeries: 's1',\n    zIndex: -1\n  }, {\n    name: 'Data',\n    visible: false,\n    data: [0, 0, 0, 1, 1, 1],\n    id: 's1'\n  }]\n};\nconst pie_options_test = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: '0',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: '1',\n      y: 11.84\n    }]\n  }]\n};\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: ['Jan', 'Feb', 'Mar'],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0\n    }\n  },\n  series: [{\n    name: 'Tokyo',\n    data: [49.9, 71.5, 106.4]\n  }, {\n    name: 'New York',\n    data: [83.6, 78.8, 98.5]\n  }, {\n    name: 'London',\n    data: [48.9, 38.8, 39.3]\n  }, {\n    name: 'Berlin',\n    data: [42.4, 33.2, 34.5]\n  }]\n};\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: 'Chrome',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: 'Internet Explorer',\n      y: 11.84\n    }, {\n      name: 'Firefox',\n      y: 10.85\n    }, {\n      name: 'Edge',\n      y: 4.67\n    }, {\n      name: 'Safari',\n      y: 4.18\n    }, {\n      name: 'Sogou Explorer',\n      y: 1.64\n    }, {\n      name: 'Opera',\n      y: 1.6\n    }, {\n      name: 'QQ',\n      y: 1.2\n    }, {\n      name: 'Other',\n      y: 2.61\n    }]\n  }]\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculate = arr => {\n      var counts = {};\n      var barChart = [];\n      var bar_cate = [];\n      var bar_data = [];\n      var barChart = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        var num = arr[i];\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n\n      Object.keys(counts).forEach(function (key) {\n        let newObject = {};\n        newObject = {\n          name: key,\n          y: counts[key]\n        };\n        pieChart.push(newObject);\n      });\n      bar_cate.push(Object.keys(counts));\n      bar_data.push(Object.values(counts)); //return counts;\n\n      return {\n        bar_cate: bar_cate,\n        bar_data: bar_data,\n        pie_data: pieChart\n      };\n    };\n\n    this.chartDataParser_bar = dataList => {\n      var chartData = [];\n      dataList.forEach(function (data) {\n        var temp = Object.values(data);\n        let newObject = {};\n        newObject = {\n          name: temp[0],\n          data: temp.slice(1, -1).map(Number)\n        };\n        chartData.push(newObject);\n      });\n      return chartData;\n    };\n\n    this.chartDataParser_pie = (categories, dataList) => {\n      var chartData = [];\n      categories.forEach(function (category) {\n        let newObject = {};\n        var sum = 0;\n        dataList.forEach(function (data) {\n          sum += Number(data[category.toLowerCase()]);\n        });\n        newObject = {\n          name: category,\n          y: sum\n        };\n        chartData.push(newObject);\n      });\n      return chartData;\n    };\n\n    this.setChartData = (newCategories, newChartData_bar, newChartData_pie) => {\n      this.setState({\n        barChart_options: {\n          xAxis: {\n            categories: newCategories\n          },\n          series: newChartData_bar\n        },\n        pieChart_options: {\n          series: {\n            data: newChartData_pie\n          }\n        }\n      });\n    };\n\n    this.state = {\n      barChart_options: bar_options_test2,\n      pieChart_options: pie_options_test\n    };\n  }\n\n  componentDidMount() {\n    var arr = [\"a\", \"b\", \"C\"]; //this.calculate(arr);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps !== this.props) {\n      var bar_cate,\n          bar_data,\n          pie_data = this.calculate(this.props.data);\n      console.log(t);\n      this.setState({\n        pieChart_options: {\n          series: {\n            data: t\n          }\n        }\n      });\n      /*\n            var newCategories = this.props.columns.slice(1);\n      \n            var newChartData_bar = this.chartDataParser_bar(this.props.data);\n            var newChartData_pie = this.chartDataParser_pie(newCategories, this.props.data);\n      \n            this.setChartData(newCategories, newChartData_bar, newChartData_pie);\n      */\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Charts\"), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.barChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.pieChart_options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Chart.js"],"names":["React","Component","Highcharts","HighchartsReact","require","bar_options_test2","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","groupPadding","shadow","series","name","data","bar_options_test","tickInterval","baseSeries","zIndex","showInLegend","visible","id","bar_options_test_histo_sample","alignTicks","opposite","pie_options_test","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","y","sliced","selected","bar_options","pie_options","Chart","constructor","props","calculate","arr","counts","barChart","bar_cate","bar_data","i","length","num","Object","keys","forEach","key","newObject","pieChart","push","values","pie_data","chartDataParser_bar","dataList","chartData","temp","slice","map","Number","chartDataParser_pie","category","sum","toLowerCase","setChartData","newCategories","newChartData_bar","newChartData_pie","setState","barChart_options","pieChart_options","state","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","console","log","t","render"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n// Load Highcharts modules\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\n\nconst bar_options_test2 = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [\n      0,\n      1\n    ],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n      '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n        pointPadding: 0,\n        borderWidth: 1,\n        groupPadding: 0.2,\n        shadow: false\n    }\n/*\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0\n    }\n*/\n  },\n  series: [{\n    name: 'Data',\n    data: [42,55]\n\n  }]\n}\n\n\nconst bar_options_test = {\n    title: {\n        text: 'Highcharts Histogram'\n    },\n    xAxis: [{\n    title: { text: '' },\n\n    }, {\n        title: { text: 'Histogramxxxxx' },\n        //tickInterval: 1,\n\n        //alignTicks: false,\n\n    }],\n\n    yAxis: [{\n        title: { text: '' },\n    }, {\n        title: { text: 'Histogramyyy' },\n        tickInterval:1,\n\n    }],\n\n    series: [{\n        name: 'Histogramssss',\n        type: 'histogram',\n        xAxis: 1,\n        yAxis: 1,\n        baseSeries: 's1',\n        zIndex: -1,\n\n        //binsNumber: \"rice\",\n    }, {\n        showInLegend: false,\n        name: 'Data',\n        visible:false,\n        data: [0,1,1,1,11,2,23,4,1,12] ,\n        id: 's1',\n\n    }]\n}\n\n\n\n\n\nconst bar_options_test_histo_sample = {\n    title: {\n        text: 'Highcharts Histogram'\n    },\n    xAxis: [{\n        title: { text: 'Data' },\n        tickInterval:1,\n        alignTicks: false\n    }, {\n        title: { text: 'Histogram' },\n        alignTicks: false,\n        opposite: true\n    }],\n\n    yAxis: [{\n        title: { text: 'Data' }\n    }, {\n        title: { text: 'Histogram' },\n        opposite: true\n    }],\n\n    series: [{\n        name: 'Histogram',\n        type: 'histogram',\n        xAxis: 1,\n        yAxis: 1,\n        baseSeries: 's1',\n        zIndex: -1\n    }, {\n        name: 'Data',\n        visible:false,\n        data: [0,0,0,1,1,1],\n        id: 's1',\n\n    }]\n}\n\nconst pie_options_test = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: '0',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: '1',\n      y: 11.84\n    }]\n  }]\n}\n\n\n\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [\n      'Jan',\n      'Feb',\n      'Mar',\n\n    ],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n      '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0\n    }\n  },\n  series: [{\n    name: 'Tokyo',\n    data: [49.9, 71.5, 106.4]\n\n  }, {\n    name: 'New York',\n    data: [83.6, 78.8, 98.5]\n\n  }, {\n    name: 'London',\n    data: [48.9, 38.8, 39.3]\n\n  }, {\n    name: 'Berlin',\n    data: [42.4, 33.2, 34.5]\n\n  }]\n}\n\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: 'Chrome',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: 'Internet Explorer',\n      y: 11.84\n    }, {\n      name: 'Firefox',\n      y: 10.85\n    }, {\n      name: 'Edge',\n      y: 4.67\n    }, {\n      name: 'Safari',\n      y: 4.18\n    }, {\n      name: 'Sogou Explorer',\n      y: 1.64\n    }, {\n      name: 'Opera',\n      y: 1.6\n    }, {\n      name: 'QQ',\n      y: 1.2\n    }, {\n      name: 'Other',\n      y: 2.61\n    }]\n  }]\n}\n\n\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart_options: bar_options_test2,\n      pieChart_options: pie_options_test\n    };\n  }\n\n  calculate = (arr) => {\n\n  var counts = {};\n  var barChart = [];\n\n  var bar_cate=[];\n  var bar_data = [];\n  var barChart = [];\n\n\n  for (var i = 0; i < arr.length; i++) {\n    var num = arr[i];\n    counts[num] = counts[num] ? counts[num] + 1 : 1;\n  }\n\n  Object.keys(counts).forEach(function(key) {\n    let newObject = {};\n    newObject = {\n      name: key,\n      y: counts[key]\n    }\n    pieChart.push(newObject);\n  });\n\n\n  bar_cate.push(Object.keys(counts));\n  bar_data.push(Object.values(counts));\n\n\n  //return counts;\n  return {bar_cate:bar_cate, bar_data:bar_data,pie_data:pieChart};\n\n}\n\n  componentDidMount(){\n    var arr = [\"a\",\"b\", \"C\"];\n    //this.calculate(arr);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (prevProps !== this.props) {\n      var bar_cate, bar_data,pie_data  = this.calculate(this.props.data);\n      console.log(t);\n\n\n      this.setState({\n\n        pieChart_options: {\n          series: {\n            data: t\n          }\n        }\n      });\n\n/*\n      var newCategories = this.props.columns.slice(1);\n\n      var newChartData_bar = this.chartDataParser_bar(this.props.data);\n      var newChartData_pie = this.chartDataParser_pie(newCategories, this.props.data);\n\n      this.setChartData(newCategories, newChartData_bar, newChartData_pie);\n*/\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n\n  }\n\n\n\n  chartDataParser_bar = (dataList) => {\n\n    var chartData = [];\n\n    dataList.forEach(function(data) {\n      var temp = Object.values(data);\n      let newObject = {};\n      newObject = {\n        name: temp[0],\n        data: temp.slice(1, -1).map(Number)\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  chartDataParser_pie = (categories, dataList) => {\n\n    var chartData = [];\n\n    categories.forEach(function(category) {\n      let newObject = {};\n      var sum = 0;\n\n      dataList.forEach(function(data) {\n        sum += Number(data[category.toLowerCase()]);\n      });\n\n      newObject = {\n        name: category,\n        y: sum\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  setChartData = (newCategories, newChartData_bar, newChartData_pie) => {\n\n    this.setState({\n      barChart_options: {\n        xAxis: {\n          categories: newCategories\n        },\n        series: newChartData_bar\n      },\n\n      pieChart_options: {\n        series: {\n          data: newChartData_pie\n        }\n      }\n    });\n\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Charts</h3>\n\n\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.barChart_options}\n      />\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.pieChart_options}\n      />\n\n      </div>\n\n    );\n\n}\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}