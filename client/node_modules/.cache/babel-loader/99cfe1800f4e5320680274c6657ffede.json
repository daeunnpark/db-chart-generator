{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/client/src/components/feedback/Alert.js\";\nimport React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport * as messages from '../../constants/messages';\nimport * as styles from '../../constants/styles';\n/*\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n*/\n\nconst message_SUCCESS = messages.SUCCESS;\nconst message_ERROR = messages.ERROR;\nconst icons = styles.ICONS;\nconst icon_styles = styles.ICON_STYLES;\nconst snackBarContent_styles = styles.SNACKBARCONTENT_STYlES;\nconst snackBarContent_styles_span = styles.SNACKBARCONTENT_STYlES_SPAN;\n/*\nRepresents database update alert.\n*/\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: this.state.vertical,\n          horizontal: this.state.horizontal\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.messageWrapper()));\n    };\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: '',\n      success: null,\n      flag: 0\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (null !== this.props.success && prevProps !== this.props) {\n      const newMessage = this.props.success ? message_SUCCESS : message_ERROR;\n      const newFlag = this.props.success ? 0 : 1;\n      this.setState({\n        message: newMessage,\n        open: true,\n        flag: newFlag\n      });\n    }\n  }\n\n  messageWrapper() {\n    const Icon = icons[this.state.flag];\n    const snackbarContentStyle = snackBarContent_styles[this.state.flag];\n    return React.createElement(SnackbarContent, {\n      style: snackbarContentStyle,\n      message: React.createElement(\"span\", {\n        id: \"client-snackbar\",\n        style: snackBarContent_styles_span,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        style: icon_styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.state.message),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Alert;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/client/src/components/feedback/Alert.js"],"names":["React","Component","IconButton","CloseIcon","Snackbar","SnackbarContent","messages","styles","message_SUCCESS","SUCCESS","message_ERROR","ERROR","icons","ICONS","icon_styles","ICON_STYLES","snackBarContent_styles","SNACKBARCONTENT_STYlES","snackBarContent_styles_span","SNACKBARCONTENT_STYlES_SPAN","Alert","constructor","props","handleClose","setState","open","render","vertical","state","horizontal","messageWrapper","message","success","flag","componentDidUpdate","prevProps","prevState","newMessage","newFlag","Icon","snackbarContentStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport * as messages from '../../constants/messages';\nimport * as styles from '../../constants/styles';\n\n/*\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n*/\n\nconst message_SUCCESS = messages.SUCCESS;\nconst message_ERROR = messages.ERROR;\n\nconst icons = styles.ICONS;\nconst icon_styles = styles.ICON_STYLES;\nconst snackBarContent_styles = styles.SNACKBARCONTENT_STYlES;\nconst snackBarContent_styles_span = styles.SNACKBARCONTENT_STYlES_SPAN;\n\n/*\nRepresents database update alert.\n*/\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: '',\n      success: null,\n      flag: 0\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (null !== this.props.success && prevProps !== this.props) {\n      const newMessage = this.props.success ? message_SUCCESS : message_ERROR;\n      const newFlag = this.props.success ? 0 : 1;\n      this.setState({\n        message: newMessage,\n        open: true,\n        flag: newFlag\n      });\n    }\n  }\n\n  messageWrapper(){\n      const Icon = icons[this.state.flag];\n      const snackbarContentStyle = snackBarContent_styles[this.state.flag];\n      return(\n          <SnackbarContent\n            style = {snackbarContentStyle}\n            message={\n              <span id=\"client-snackbar\" style = {snackBarContent_styles_span}>\n                <Icon style = {icon_styles}/>\n                {this.state.message}\n              </span>\n            }\n            action={[\n              <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n              <CloseIcon/>\n              </IconButton>\n            ]}\n          />\n      );\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render = () => {\n      return (\n        <div>\n          <Snackbar\n            anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\n            open={this.state.open}\n            autoHideDuration={3000}\n            onClose={this.handleClose}\n          >\n           {this.messageWrapper()}\n          </Snackbar>\n        </div>\n      );\n  }\n\n}\n\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}