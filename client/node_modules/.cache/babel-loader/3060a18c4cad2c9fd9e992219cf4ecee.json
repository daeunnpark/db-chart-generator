{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Papa from 'papaparse'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.setData = newState => {\n      this.props.setData({\n        columns: [this.state.columns[1].title, this.state.columns[2].title, this.state.columns[3].title],\n        data: [this.state.data[0], this.state.data[1]]\n      }); //this.setState(newState);\n    };\n\n    this.uploadCsvFile = event => {\n      event.preventDefault();\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: this.updateTable\n      });\n    };\n\n    this.updateTable = result => {\n      var NewColumns = [];\n      var NewData = [];\n      result.meta.fields.forEach(function (field) {\n        NewColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase()\n        });\n      });\n      result.data.forEach(function (data) {\n        let newObject = {};\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            newObject[key.toLowerCase()] = data[key];\n          }\n        }\n\n        NewData.push(newObject);\n      });\n      console.log(NewData);\n      this.setState({\n        columns: NewColumns,\n        data: NewData\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Upload File\", React.createElement(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        style: {\n          display: \"none\"\n        },\n        onChange: this.uploadCsvFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(MaterialTable, {\n        title: \"Editable Preview\",\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                data.push(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'id'\n      }, {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }]\n    };\n  }\n\n  componentDidMount() {} //console.log(\"DID MOUNTTT\");\n  //this.setData(this.state);\n  // Table To Parent APP\n\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Button","Papa","Table","constructor","props","setData","newState","columns","state","title","data","uploadCsvFile","event","preventDefault","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","result","NewColumns","NewData","meta","fields","forEach","field","push","toUpperCase","toLowerCase","newObject","key","hasOwnProperty","console","log","setState","render","display","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","type","id","col2","col3","col4","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\n\nimport Papa from 'papaparse';\n\n// default param in const?\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      // Default\n      this.state = {\n        columns : [\n          { title: 'ID', field: 'id'},\n          { title: 'COL2', field: 'col2', type: 'numeric' },\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n\n        data: [\n          { id: \"A\", col2: 80, col3: 30, col4: 40 },\n          { id: \"B\", col2: 30, col3: 20, col4: 10 },\n        ]\n      };\n    }\n\n    componentDidMount(){\n      //console.log(\"DID MOUNTTT\");\n      //this.setData(this.state);\n    }\n\n\n    // Table To Parent APP\n    setData = (newState) => {\n      this.props.setData({\n        columns: [\n              this.state.columns[1].title,\n              this.state.columns[2].title,\n              this.state.columns[3].title\n            ],\n        data: [\n          this.state.data[0],\n          this.state.data[1]\n        ]\n\n        });\n\n      //this.setState(newState);\n\n    }\n\n\n\n    uploadCsvFile = (event) => {\n      event.preventDefault();\n\n      Papa.parse(event.target.files[0], {\n            header: true,\n            skipEmptyLines: true,\n            dynamicTyping: true,\n            complete: this.updateTable\n          });\n        }\n\n\n    updateTable = (result) => {\n\n      var NewColumns = [];\n      var NewData = [];\n\n      result.meta.fields.forEach(function (field) {\n\n      NewColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase()\n      });\n    });\n\n\n    result.data.forEach(function (data) {\n\n      let newObject = {};\n           for (var key in data) {\n             if (data.hasOwnProperty(key)) {\n                 newObject[key.toLowerCase()] = data[key]\n             }\n          }\n\n          NewData.push(newObject);\n\n         });\n\n         console.log(NewData);\n\n         this.setState({\n           columns: NewColumns,\n           data: NewData\n         });\n\n    }\n\n\n  render = () => {\n      return (\n        <div>\n        <Button\n        variant=\"contained\"\n        component=\"label\">\n        Upload File\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          style={{ display: \"none\" }}\n          onChange = {this.uploadCsvFile}\n        />\n      </Button>\n\n        <MaterialTable\n           title=\"Editable Preview\"\n           columns={this.state.columns}\n           data={this.state.data}\n           editable={{\n             onRowAdd: newData =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n                     const data = this.state.data;\n                     data.push(newData);\n                     this.setState({ data }, () => resolve());\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n             onRowUpdate: (newData, oldData) =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n\n                     const data = this.state.data;\n                     const index = data.indexOf(oldData);\n                     data[index] = newData;\n                     this.setState({ data }, () => resolve());\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n             onRowDelete: oldData =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n                     let data = this.state.data;\n                     const index = data.indexOf(oldData);\n                     data.splice(index, 1);\n                     this.setState({ data }, () => resolve());\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n           }}\n         />\n      </div>\n      );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}