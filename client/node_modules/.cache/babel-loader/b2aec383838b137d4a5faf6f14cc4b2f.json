{"ast":null,"code":"import _objectSpread from \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setData = newState => {\n      console.log(\"HEEEEREEEE\");\n      console.log(this.state.columns[0]);\n      console.log(this.state.columns[1]);\n      console.log(this.state.columns[2]);\n      console.log(this.state.columns[3]);\n      this.props.setData({\n        xAxis: {\n          categories: [this.state.columns[1], this.state.columns[2], this.state.columns[3]]\n        }\n      }); //series[{}, {},{}];\n\n      this.setState(newState);\n    };\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        title: \"Editable Example\",\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.props.setData(this.state);\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.props.setData(this.state); //\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.props.setData(this.state);\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'ID'\n      }, {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        ID: \"A\",\n        col2: 20,\n        col3: 30,\n        col4: 40\n      }, {\n        ID: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }]\n    };\n  }\n\n  updateTable() {\n    this.state = {\n      columns: [{\n        title: 'COL1',\n        field: 'col1',\n        type: 'numeric'\n      }, {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        name: 'Daeun',\n        surname: 'DAAA',\n        birthYear: 1987,\n        birthCity: 63\n      }, {\n        name: 'Dasom',\n        surname: 'dddd',\n        birthYear: 2017,\n        birthCity: 34\n      }]\n    };\n  }\n\n  componentDidMount() {\n    //  console.log(\"DID MOUNTTT\");\n    //console.log(this.state);\n    this.setData(this.state);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Table","constructor","props","setData","newState","console","log","state","columns","xAxis","categories","setState","render","data","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","title","field","type","ID","col2","col3","col4","updateTable","name","surname","birthYear","birthCity","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\n\n// default param in const?\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        columns : [\n          { title: 'ID', field: 'ID' },\n          { title: 'COL2', field: 'col2', type: 'numeric'},\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n        data: [\n          { ID: \"A\", col2: 20, col3: 30, col4: 40 },\n          {\n            ID: \"B\",\n            col2: 30,\n            col3: 20,\n            col4: 10\n            ,\n          },\n        ]\n      };\n\n\n    }\n    setData = (newState) => {\n      console.log(\"HEEEEREEEE\");\n\n      console.log(this.state.columns[0]);\n      console.log(this.state.columns[1]);\n      console.log(this.state.columns[2]);\n      console.log(this.state.columns[3]);\n\n      this.props.setData({xAxis: {\n          categories: [\n              this.state.columns[1],\n              this.state.columns[2],\n              this.state.columns[3]\n          ],\n\n      }\n    });\n\n      //series[{}, {},{}];\n      this.setState(newState);\n\n    }\n\n    updateTable(){\n      this.state = {\n        columns : [\n          { title: 'COL1', field: 'col1' , type: 'numeric'},\n          { title: 'COL2', field: 'col2', type: 'numeric'},\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n        data: [\n          { name: 'Daeun', surname: 'DAAA', birthYear: 1987, birthCity: 63 },\n          {\n            name: 'Dasom',\n            surname: 'dddd',\n            birthYear: 2017,\n            birthCity: 34,\n          },\n        ]\n\n      };\n    }\n\n    componentDidMount(){\n    //  console.log(\"DID MOUNTTT\");\n      //console.log(this.state);\n        this.setData(this.state);\n    }\n\n  render = () => {\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={this.state.columns}\n      data={this.state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState({ ...this.state, data });\n              this.props.setData(this.state);\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState({ ...this.state, data });\n              this.props.setData(this.state);               //\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState({ ...this.state, data });\n              this.props.setData(this.state);\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}