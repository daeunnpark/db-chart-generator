{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/styles';\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nconst SUCCESS = messages.SUCCESS;\nconst ERROR = messages.ERROR;\nconst variantIcon = [CheckCircleIcon, ErrorIcon];\nconst style = {\n  display: 'flex',\n  alignItems: 'center'\n};\nconst style2 = {\n  marginRight: 10\n};\nconst style3 = [{\n  backgroundColor: 'green',\n  display: 'flex',\n  alignItems: 'center'\n}, {\n  backgroundColor: 'red',\n  display: 'flex',\n  alignItems: 'center'\n}];\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = newState => () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      const classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick({\n          vertical: 'top',\n          horizontal: 'center'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Top-Center\"), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: this.state.vertical,\n          horizontal: this.state.horizontal\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.renderIcon()));\n    };\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: '',\n      success: false,\n      flag: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(prevProps);\n      console.log(this.props);\n      var newMessage = '';\n      console.log(\"DId Update : success\" + this.props.success);\n      newMessage = this.props.success ? SUCCESS : ERROR;\n      const newFlag = this.props.success ? 0 : 1;\n      console.log(\"Did amount : new flag\" + newFlag);\n      this.setState({\n        message: newMessage,\n        open: true,\n        flag: newFlag\n      });\n    }\n  }\n\n  renderIcon() {\n    console.log(\"render\" + this.state.flag);\n    const Icon = variantIcon[this.state.flag];\n    const style = style3[this.state.flag];\n    return React.createElement(SnackbarContent, {\n      style: style,\n      \"aria-describedby\": \"client-snackbar\",\n      message: React.createElement(\"span\", {\n        id: \"client-snackbar\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        style: style2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), this.state.message),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Alert;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js"],"names":["React","Component","Button","Snackbar","CloseIcon","IconButton","withStyles","messages","ErrorIcon","CheckCircleIcon","SnackbarContent","SUCCESS","ERROR","variantIcon","style","display","alignItems","style2","marginRight","style3","backgroundColor","Alert","constructor","props","handleClick","newState","setState","open","handleClose","render","classes","vertical","horizontal","state","renderIcon","message","success","flag","componentDidUpdate","prevProps","console","log","newMessage","newFlag","Icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/styles';\n\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst SUCCESS = messages.SUCCESS;\nconst ERROR = messages.ERROR;\n\n\n\nconst variantIcon = [\n  CheckCircleIcon, ErrorIcon\n];\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center'\n}\n\nconst style2 = {\n  marginRight: 10,\n}\n\n\nconst style3 = [\n  {backgroundColor: 'green', display: 'flex', alignItems: 'center'}, {backgroundColor: 'red' , display: 'flex', alignItems: 'center'}\n]\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: '',\n      success: false,\n      flag: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(prevProps);\n      console.log(this.props);\n      var newMessage = '';\n      console.log(\"DId Update : success\"+ this.props.success);\n\n      newMessage = this.props.success ? SUCCESS :  ERROR;\n      const newFlag = this.props.success ? 0 : 1;\n      console.log(\"Did amount : new flag\" + newFlag);\n      this.setState({ message: newMessage, open: true, flag: newFlag});\n    }\n  }\n\n  handleClick = newState => () => {\n    this.setState({ open: true });\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  renderIcon(){\n      console.log(\"render\" +  this.state.flag);\n      const Icon = variantIcon[this.state.flag];\n      const style = style3[this.state.flag];\n      return(\n          <SnackbarContent\n            style = {style}\n            aria-describedby=\"client-snackbar\"\n            message={\n              <span id=\"client-snackbar\" style = {style}>\n                <Icon style = {style2}/>\n                {this.state.message}\n              </span>\n            }\n            action={[\n              <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n                <CloseIcon/>\n              </IconButton>,\n            ]}\n          />\n      );\n    }\n\n  render = () => {\n      const { classes } = this.props;\n      return (\n        <div>\n          <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\n          <Snackbar\n            anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\n            open={this.state.open}\n            autoHideDuration={3000}\n            onClose={this.handleClose}\n          >\n          {this.renderIcon()}\n          </Snackbar>\n        </div>\n      );\n  }\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}