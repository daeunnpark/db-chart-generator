{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/UpdateChartsDialog.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nclass UpdateChartsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        open: false\n      });\n      this.props.setData(this.state.value);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        id: \"updateChartsBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Update Charts\"), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Choose a category to generate charts.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Category\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"Gender\",\n        name: \"gender1\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.columns.map(column => React.createElement(FormControlLabel, {\n        key: column.field,\n        value: column.field,\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        label: column.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Ok\"))));\n    };\n\n    this.state = {\n      open: false,\n      value: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        columns: this.props.columns\n      });\n    }\n  }\n\n}\n\nexport default UpdateChartsDialog;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/UpdateChartsDialog.js"],"names":["React","Component","Button","Dialog","DialogActions","DialogContent","DialogTitle","Radio","RadioGroup","FormLabel","FormControl","FormControlLabel","UpdateChartsDialog","constructor","props","handleClickOpen","setState","open","handleChange","event","value","target","handleOk","setData","state","handleClose","render","columns","map","column","field","title","componentDidUpdate","prevProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nclass UpdateChartsDialog extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      value: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        columns: this.props.columns\n      })\n    }\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      open: false\n    });\n    this.props.setData(this.state.value);\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n\n  render = () => {\n      return (\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen} id =\"updateChartsBtn\"> Update Charts</Button>\n              <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n                <DialogTitle>Choose a category to generate charts.</DialogTitle>\n                  <DialogContent>\n                    <form>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Category</FormLabel>\n                          <RadioGroup\n                            aria-label=\"Gender\"\n                            name=\"gender1\"\n                            value={this.state.value}\n                            onChange={this.handleChange}>\n                            {this.props.columns.map((column) =>(\n                                  <FormControlLabel key = {column.field} value={column.field} control={<Radio />} label={column.title} />\n                            ))\n                            }\n                          </RadioGroup>\n                      </FormControl>\n                    </form>\n                  </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button onClick={this.handleOk} color=\"primary\">\n                    Ok\n                  </Button>\n                </DialogActions>\n              </Dialog>\n          </div>\n        );\n        }\n}\n\n\nexport default UpdateChartsDialog;\n"]},"metadata":{},"sourceType":"module"}