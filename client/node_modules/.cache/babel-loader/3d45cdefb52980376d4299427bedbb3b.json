{"ast":null,"code":"import _objectSpread from \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        title: \"Editable Example\",\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Surname',\n        field: 'surname'\n      }, {\n        title: 'Birth Year',\n        field: 'birthYear',\n        type: 'numeric'\n      }, {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: {\n          34: 'İstanbul',\n          63: 'Şanlıurfa'\n        }\n      }],\n      data: [{\n        name: 'Mehmet',\n        surname: 'Baran',\n        birthYear: 1987,\n        birthCity: 63\n      }, {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34\n      }]\n    }; // This binding is necessary to make `this` work in the callback\n  }\n\n  updateTable() {\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Surname',\n        field: 'surname'\n      }, {\n        title: 'Birth Year',\n        field: 'birthYear',\n        type: 'numeric'\n      }, {\n        title: 'Birth Place',\n        field: 'birthCity'\n      }],\n      data: [{\n        name: 'Daeun',\n        surname: 'DAAA',\n        birthYear: 1987,\n        birthCity: 63\n      }, {\n        name: 'Dasom',\n        surname: 'dddd',\n        birthYear: 2017,\n        birthCity: 34\n      }]\n    };\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Table","constructor","props","render","state","columns","data","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice","title","field","type","lookup","name","surname","birthYear","birthCity","updateTable"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAIA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuDrBC,MAvDqB,GAuDZ,MAAM;AACf,aACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAFtB;AAGE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAHnB;AAIE,QAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,YAAAA,UAAU,CAAC,MAAM;AACfD,cAAAA,OAAO;AACP,oBAAMJ,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,cAAAA,IAAI,CAACM,IAAL,CAAUJ,OAAV;AACA,mBAAKK,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BE,gBAAAA;AAA/B;AACD,aALS,EAKP,GALO,CAAV;AAMD,WAPD,CAFM;AAURQ,UAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAYC,OAAO,IAAI;AACrBC,YAAAA,UAAU,CAAC,MAAM;AACfD,cAAAA,OAAO;AACP,oBAAMJ,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACU,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BP,OAA9B;AACA,mBAAKK,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BE,gBAAAA;AAA/B;AACD,aALS,EAKP,GALO,CAAV;AAMD,WAPD,CAXM;AAmBRW,UAAAA,WAAW,EAAEF,OAAO,IAClB,IAAIN,OAAJ,CAAYC,OAAO,IAAI;AACrBC,YAAAA,UAAU,CAAC,MAAM;AACfD,cAAAA,OAAO;AACP,oBAAMJ,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,cAAAA,IAAI,CAACY,MAAL,CAAYZ,IAAI,CAACU,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAKF,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BE,gBAAAA;AAA/B;AACD,aALS,EAKP,GALO,CAAV;AAMD,WAPD;AApBM,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAoCD,KA5FsB;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG,CACR;AAAEc,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADQ,EAER;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAFQ,EAGR;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE,WAA9B;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OAHQ,EAIR;AACEF,QAAAA,KAAK,EAAE,aADT;AAEEC,QAAAA,KAAK,EAAE,WAFT;AAGEE,QAAAA,MAAM,EAAE;AAAE,cAAI,UAAN;AAAkB,cAAI;AAAtB;AAHV,OAJQ,CADC;AAWXhB,MAAAA,IAAI,EAAE,CACJ;AAAEiB,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAE,OAA3B;AAAoCC,QAAAA,SAAS,EAAE,IAA/C;AAAqDC,QAAAA,SAAS,EAAE;AAAhE,OADI,EAEJ;AACEH,QAAAA,IAAI,EAAE,aADR;AAEEC,QAAAA,OAAO,EAAE,OAFX;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEC,QAAAA,SAAS,EAAE;AAJb,OAFI;AAXK,KAAb,CAFiB,CAyBjB;AAED;;AAEDC,EAAAA,WAAW,GAAE;AAGX,SAAKvB,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG,CACR;AAAEc,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADQ,EAER;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAFQ,EAGR;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE,WAA9B;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OAHQ,EAIR;AAAEF,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAJQ,CADC;AAQXd,MAAAA,IAAI,EAAE,CACJ;AAAEiB,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE,MAA1B;AAAkCC,QAAAA,SAAS,EAAE,IAA7C;AAAmDC,QAAAA,SAAS,EAAE;AAA9D,OADI,EAEJ;AACEH,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,OAAO,EAAE,MAFX;AAGEC,QAAAA,SAAS,EAAE,IAHb;AAIEC,QAAAA,SAAS,EAAE;AAJb,OAFI;AARK,KAAb;AAmBD;;AArDyB;;AAgG9B,eAAe1B,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\n\n\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        columns : [\n          { title: 'Name', field: 'name' },\n          { title: 'Surname', field: 'surname' },\n          { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n          {\n            title: 'Birth Place',\n            field: 'birthCity',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n          },\n        ],\n        data: [\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          {\n            name: 'Zerya Betül',\n            surname: 'Baran',\n            birthYear: 2017,\n            birthCity: 34,\n          },\n        ]\n\n      };\n\n      // This binding is necessary to make `this` work in the callback\n\n    }\n\n    updateTable(){\n\n\n      this.state = {\n        columns : [\n          { title: 'Name', field: 'name' },\n          { title: 'Surname', field: 'surname' },\n          { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n          { title: 'Birth Place', field: 'birthCity'\n          },\n        ],\n        data: [\n          { name: 'Daeun', surname: 'DAAA', birthYear: 1987, birthCity: 63 },\n          {\n            name: 'Dasom',\n            surname: 'dddd',\n            birthYear: 2017,\n            birthCity: 34,\n          },\n        ]\n\n      };\n    }\n\n\n\n  render = () => {\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={this.state.columns}\n      data={this.state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState({ ...this.state, data });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState({ ...this.state, data });\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState({ ...this.state, data });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}