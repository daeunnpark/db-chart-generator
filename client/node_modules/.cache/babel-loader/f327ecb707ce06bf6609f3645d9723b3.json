{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.setData = newState => {\n      this.props.setData({\n        columns: [this.state.columns[1].title, this.state.columns[2].title, this.state.columns[3].title],\n        data: [this.state.data[0], this.state.data[1]]\n      });\n      this.setState(newState);\n    };\n\n    this.setData2 = newState => {\n      this.props.setData({\n        columns: [this.state.columns[1].title, this.state.columns[2].title, this.state.columns[3].title],\n        data: [this.state.data[0], this.state.data[1]]\n      });\n      this.setState(newState);\n    };\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        title: \"Editable Preview\",\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                data.push(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'ID'\n      }, {\n        title: 'COL2',\n        field: 'col2'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        ID: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        ID: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }]\n    };\n  } // Convert\n\n\n  componentDidMount() {\n    console.log(\"DID MOUNTTT\");\n    this.setData(this.state);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Table","constructor","props","setData","newState","columns","state","title","data","setState","setData2","render","onRowAdd","newData","Promise","resolve","reject","setTimeout","push","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","field","type","ID","col2","col3","col4","componentDidMount","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\n// default param in const?\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      // Default\n      this.state = {\n        columns : [\n          { title: 'ID', field: 'ID' },\n          { title: 'COL2', field: 'col2'},\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n\n        data: [\n          { ID: \"A\", col2: 80, col3: 30, col4: 40 },\n          { ID: \"B\", col2: 30, col3: 20, col4: 10 },\n        ]\n      };\n    }\n\n    // Convert\n    setData = (newState) => {\n      this.props.setData({\n        columns: [\n              this.state.columns[1].title,\n              this.state.columns[2].title,\n              this.state.columns[3].title\n            ],\n        data: [\n          this.state.data[0],\n          this.state.data[1]\n        ]\n\n        });\n\n      this.setState(newState);\n\n    }\n\n    // File loader to Table\n    setData2 = (newState) => {\n      this.props.setData({\n        columns: [\n              this.state.columns[1].title,\n              this.state.columns[2].title,\n              this.state.columns[3].title\n            ],\n        data: [\n          this.state.data[0],\n          this.state.data[1]\n        ]\n\n        });\n\n      this.setState(newState);\n\n    }\n\n    componentDidMount(){\n      console.log(\"DID MOUNTTT\");\n      this.setData(this.state);\n    }\n\n  render = () => {\n  return (\n    <MaterialTable\n       title=\"Editable Preview\"\n       columns={this.state.columns}\n       data={this.state.data}\n       editable={{\n         onRowAdd: newData =>\n           new Promise((resolve, reject) => {\n             setTimeout(() => {\n               {\n                 const data = this.state.data;\n                 data.push(newData);\n                 this.setState({ data }, () => resolve());\n               }\n               resolve()\n             }, 1000)\n           }),\n         onRowUpdate: (newData, oldData) =>\n           new Promise((resolve, reject) => {\n             setTimeout(() => {\n               {\n                 const data = this.state.data;\n                 const index = data.indexOf(oldData);\n                 data[index] = newData;\n                 this.setState({ data }, () => resolve());\n               }\n               resolve()\n             }, 1000)\n           }),\n         onRowDelete: oldData =>\n           new Promise((resolve, reject) => {\n             setTimeout(() => {\n               {\n                 let data = this.state.data;\n                 const index = data.indexOf(oldData);\n                 data.splice(index, 1);\n                 this.setState({ data }, () => resolve());\n               }\n               resolve()\n             }, 1000)\n           }),\n       }}\n     />\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}