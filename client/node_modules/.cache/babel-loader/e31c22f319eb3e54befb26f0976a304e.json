{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/table/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport SearchBar from './SearchBar';\nimport Papa from 'papaparse';\nimport { default as Modal } from '../feedback/Modal';\nimport { default as Alert } from '../feedback/Alert';\n/*\nRepresents visual representation of actual database.\n*/\n\nclass Table extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.parseCsv = event => {\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: this.updateTable\n      });\n    };\n\n    this.parseData_table = result => {\n      var parsedColumns = [];\n      var parsedData = [];\n      console.log(result.meta.fields);\n      console.log(result.data);\n      result.meta.fields.forEach(function (field) {\n        parsedColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase(),\n          cellStyle: style\n        });\n      });\n      parsedColumns[0]['editable'] = 'onAdd';\n      result.data.forEach(function (data) {\n        let newData = {};\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            newData[key.toLowerCase()] = data[key];\n          }\n        }\n\n        parsedData.push(newData);\n      });\n      console.log(parsedColumns);\n      console.log(parsedData);\n      return {\n        newColumns: parsedColumns,\n        newData: parsedData\n      };\n    };\n\n    this.updateTable = result => {\n      const _this$parseData_table = this.parseData_table(result),\n            newColumns = _this$parseData_table.newColumns,\n            newData = _this$parseData_table.newData;\n\n      this.setState({\n        isLoading: true\n      });\n      this.addAllDataToDb(newData).then(success => {\n        if (success) {\n          this.setState({\n            columns: newColumns,\n            data: newData,\n            defaultData: newData\n          });\n          this.setAlert(true);\n        } else {\n          this.setAlert(false);\n        }\n\n        this.setState({\n          isLoading: false\n        });\n      }); //.catch(failureCallback);\n    };\n\n    this.addAllDataToDb = data => {\n      return fetch(new Request('/db/addAll', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (!response.ok) {\n          return false;\n        }\n\n        return true;\n      }).catch(function (error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n    };\n\n    this.addDataToDb = data => {\n      return fetch(new Request('/db/add', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (!response.ok) {\n          return false;\n        }\n\n        return true;\n      }).catch(function (error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n    };\n\n    this.updateDataInDb = data => {\n      return fetch(new Request('/db/update', {\n        method: 'PUT',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (!response.ok) {\n          return false;\n        }\n\n        return true;\n      }).catch(function (error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n    };\n\n    this.deleteDataFromDb = data => {\n      return fetch(new Request('/db/delete', {\n        method: 'DELETE',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (!response.ok) {\n          return false;\n        }\n\n        return true;\n      }).catch(function (error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n    };\n\n    this.setSelectedCategoryData = category => {\n      var newData = [];\n      this.state.data.forEach(function (data) {\n        newData.push(data[category]);\n      });\n      newData.sort(this.compare);\n      this.props.setChartData({\n        column: category.toUpperCase(),\n        data: newData\n      });\n    };\n\n    this.setAlert = bool => {\n      this.setState({\n        success: bool\n      });\n      this.setState({\n        success: null\n      });\n    };\n\n    this.setSearchResult = (newKeyword, newData) => {\n      this.setState({\n        data: newData,\n        keyword: newKeyword\n      });\n    };\n\n    this.resetSearchResult = () => {\n      this.setState({\n        data: this.state.defaultData,\n        keyword: ''\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"DB chart generator\"), React.createElement(\"div\", {\n        className: \"Section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"contained-button-file\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: this.parseCsv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"contained-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"uploadBtn\",\n        variant: \"contained\",\n        color: \"primary\",\n        component: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Upload CSV File\")), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Database Table\"), React.createElement(MaterialTable, {\n        options: {\n          showTitle: false,\n          search: false,\n          toolbarButtonAlignment: 'left',\n          headerStyle: style,\n          addRowPosition: 'first'\n        },\n        isLoading: this.state.isLoading,\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              this.addDataToDb(newData).then(success => {\n                if (success) {\n                  const data = this.state.data;\n                  data.push(newData);\n                  this.setState({\n                    data\n                  }, () => resolve());\n                  this.setAlert(true);\n                } else {\n                  reject();\n                  this.setAlert(false);\n                }\n              });\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              this.updateDataInDb(newData).then(success => {\n                if (success) {\n                  const data = this.state.data;\n                  const index = data.indexOf(oldData);\n                  data[index] = newData;\n                  this.setState({\n                    data\n                  }, () => resolve());\n                  this.setAlert(true);\n                } else {\n                  reject();\n                  this.setAlert(false);\n                }\n              });\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              this.deleteDataFromDb(oldData).then(success => {\n                if (success) {\n                  let data2 = this.state.data;\n                  let defaultData2 = this.state.defaultData;\n                  console.log(data2);\n                  console.log(defaultData2);\n                  const index = data2.indexOf(oldData);\n                  const index2 = defaultData2.indexOf(oldData);\n                  data2.splice(index, 1);\n                  defaultData2.splice(index2, 1);\n                  this.setState({\n                    data2\n                  }, () => resolve());\n                  console.log(this.state.defaultData);\n                  this.setAlert(true);\n                } else {\n                  reject();\n                  this.setAlert(false);\n                }\n              });\n            }, 1000);\n          })\n        },\n        localization: {\n          header: {\n            actions: ''\n          },\n          body: {\n            emptyDataSourceMessage: 'No Data to Display'\n          }\n        },\n        components: {\n          Toolbar: props => React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, React.createElement(MTableToolbar, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332\n            },\n            __self: this\n          })), React.createElement(SearchBar, {\n            keyword: this.state.keyword,\n            setSearchResult: this.setSearchResult,\n            resetSearchResult: this.resetSearchResult,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        columns: this.state.columns,\n        setSelectedCategoryData: this.setSelectedCategoryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      })), React.createElement(Alert, {\n        success: this.state.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      columns: [],\n      data: [],\n      isLoading: false,\n      success: null,\n      defaultData: [],\n      keyword: ''\n    };\n  }\n\n  compare(a, b) {\n    if (typeof a == \"number\") {\n      return a - b;\n    } else {\n      if (a > b) {\n        return 1;\n      }\n\n      if (b > a) {\n        return -1;\n      }\n\n      return 0;\n    }\n  }\n\n}\n\nconst style = {\n  padding: '0 8px'\n};\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/table/Table.js"],"names":["React","Component","MaterialTable","MTableToolbar","Button","SearchBar","Papa","default","Modal","Alert","Table","constructor","props","parseCsv","event","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","parseData_table","result","parsedColumns","parsedData","console","log","meta","fields","data","forEach","field","push","title","toUpperCase","toLowerCase","cellStyle","style","newData","key","hasOwnProperty","newColumns","setState","isLoading","addAllDataToDb","then","success","columns","defaultData","setAlert","fetch","Request","method","redirect","headers","Headers","credentials","body","JSON","stringify","response","ok","catch","error","window","alert","message","addDataToDb","updateDataInDb","deleteDataFromDb","setSelectedCategoryData","category","state","sort","compare","setChartData","column","bool","setSearchResult","newKeyword","keyword","resetSearchResult","render","showTitle","search","toolbarButtonAlignment","headerStyle","addRowPosition","onRowAdd","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","data2","defaultData2","index2","splice","actions","emptyDataSourceMessage","Toolbar","a","b","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAO,IAAIC,KAApB,QAAiC,mBAAjC;AACA,SAASD,OAAO,IAAIE,KAApB,QAAiC,mBAAjC;AAEA;;;;AAGA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAC5BU,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAYnBC,QAZmB,GAYPC,KAAD,IAAW;AAEpBR,MAAAA,IAAI,CAACS,KAAL,CAAWD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX,EAAkC;AAChCC,QAAAA,MAAM,EAAE,IADwB;AAEhCC,QAAAA,cAAc,EAAE,IAFgB;AAGhCC,QAAAA,aAAa,EAAE,IAHiB;AAIhCC,QAAAA,QAAQ,EAAE,KAAKC;AAJiB,OAAlC;AAMD,KApBkB;;AAAA,SAsBnBC,eAtBmB,GAsBAC,MAAD,IAAY;AAE5B,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,UAAU,GAAG,EAAjB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAP,CAAYC,MAAxB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACO,IAAnB;AACAP,MAAAA,MAAM,CAACK,IAAP,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,UAASC,KAAT,EAAgB;AACzCR,QAAAA,aAAa,CAACS,IAAd,CAAmB;AACjBC,UAAAA,KAAK,EAAEF,KAAK,CAACG,WAAN,EADU;AAEjBH,UAAAA,KAAK,EAAEA,KAAK,CAACI,WAAN,EAFU;AAGjBC,UAAAA,SAAS,EAAEC;AAHM,SAAnB;AAKD,OAND;AAOCd,MAAAA,aAAa,CAAC,CAAD,CAAd,CAAmB,UAAnB,IAA+B,OAA/B;AAEAD,MAAAA,MAAM,CAACO,IAAP,CAAYC,OAAZ,CAAoB,UAASD,IAAT,EAAe;AACjC,YAAIS,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIC,GAAT,IAAgBV,IAAhB,EAAsB;AACpB,cAAIA,IAAI,CAACW,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;AAC5BD,YAAAA,OAAO,CAACC,GAAG,CAACJ,WAAJ,EAAD,CAAP,GAA6BN,IAAI,CAACU,GAAD,CAAjC;AACD;AACF;;AACDf,QAAAA,UAAU,CAACQ,IAAX,CAAgBM,OAAhB;AACD,OARD;AASAb,MAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,aAAO;AACHiB,QAAAA,UAAU,EAAGlB,aADV;AAEHe,QAAAA,OAAO,EAAEd;AAFN,OAAP;AAID,KArDkB;;AAAA,SAuDnBJ,WAvDmB,GAuDJE,MAAD,IAAY;AAAA,oCAEO,KAAKD,eAAL,CAAqBC,MAArB,CAFP;AAAA,YAEjBmB,UAFiB,yBAEjBA,UAFiB;AAAA,YAELH,OAFK,yBAELA,OAFK;;AAIxB,WAAKI,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAIA,WAAKC,cAAL,CAAoBN,OAApB,EAA6BO,IAA7B,CAAkCC,OAAO,IAAI;AAC3C,YAAGA,OAAH,EAAW;AACT,eAAKJ,QAAL,CAAc;AACZK,YAAAA,OAAO,EAAEN,UADG;AAEZZ,YAAAA,IAAI,EAAES,OAFM;AAGZU,YAAAA,WAAW,EAAEV;AAHD,WAAd;AAKA,eAAKW,QAAL,CAAc,IAAd;AACA,SAPF,MAOO;AACJ,eAAKA,QAAL,CAAc,KAAd;AACD;;AACD,aAAKP,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE;AADC,SAAd;AAGF,OAdD,EARwB,CAsBrB;AACN,KA9EoB;;AAAA,SAgFnBC,cAhFmB,GAgFDf,IAAD,IAAU;AACzB,aAAOqB,KAAK,CAAC,IAAIC,OAAJ,CAAY,YAAZ,EAA0B;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,QAAQ,EAAE,QAFyB;AAGnCC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAgB;AADG,SAAZ;AAH0B,OAA1B,CAAD,EAMN;AACFC,QAAAA,WAAW,EAAE,SADX;AAEFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;AAFJ,OANM,CAAL,CAUJgB,IAVI,CAUC,UAASe,QAAT,EAAmB;AACvB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,iBAAO,KAAP;AACD;;AACC,eAAO,IAAP;AACH,OAfI,EAgBJC,KAhBI,CAgBE,UAASC,KAAT,EAAgB;AACrBC,QAAAA,MAAM,CAACC,KAAP,CAAa,yDAAyDF,KAAK,CAACG,OAA5E;AACD,OAlBI,CAAP;AAmBD,KApGkB;;AAAA,SAsGnBC,WAtGmB,GAsGJtC,IAAD,IAAU;AACtB,aAAOqB,KAAK,CAAC,IAAIC,OAAJ,CAAY,SAAZ,EAAuB;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,QAAQ,EAAE,QAFsB;AAGhCC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAgB;AADG,SAAZ;AAHuB,OAAvB,CAAD,EAMN;AACFC,QAAAA,WAAW,EAAE,SADX;AAEFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;AAFJ,OANM,CAAL,CAUJgB,IAVI,CAUC,UAASe,QAAT,EAAmB;AACvB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,iBAAO,KAAP;AACD;;AACC,eAAO,IAAP;AACH,OAfI,EAgBJC,KAhBI,CAgBE,UAASC,KAAT,EAAgB;AACrBC,QAAAA,MAAM,CAACC,KAAP,CAAa,yDAAyDF,KAAK,CAACG,OAA5E;AACD,OAlBI,CAAP;AAmBD,KA1HkB;;AAAA,SA4HnBE,cA5HmB,GA4HDvC,IAAD,IAAU;AACzB,aAAOqB,KAAK,CAAC,IAAIC,OAAJ,CAAY,YAAZ,EAA0B;AACnCC,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,QAAQ,EAAE,QAFyB;AAGnCC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAgB;AADG,SAAZ;AAH0B,OAA1B,CAAD,EAMN;AACFC,QAAAA,WAAW,EAAE,SADX;AAEFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;AAFJ,OANM,CAAL,CAUJgB,IAVI,CAUC,UAASe,QAAT,EAAmB;AACvB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,iBAAO,KAAP;AACD;;AACC,eAAO,IAAP;AACH,OAfI,EAgBJC,KAhBI,CAgBE,UAASC,KAAT,EAAgB;AACrBC,QAAAA,MAAM,CAACC,KAAP,CAAa,yDAAyDF,KAAK,CAACG,OAA5E;AACD,OAlBI,CAAP;AAmBD,KAhJkB;;AAAA,SAkJnBG,gBAlJmB,GAkJCxC,IAAD,IAAU;AAC3B,aAAOqB,KAAK,CAAC,IAAIC,OAAJ,CAAY,YAAZ,EAA0B;AACnCC,QAAAA,MAAM,EAAE,QAD2B;AAEnCC,QAAAA,QAAQ,EAAE,QAFyB;AAGnCC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAgB;AADG,SAAZ;AAH0B,OAA1B,CAAD,EAMN;AACFC,QAAAA,WAAW,EAAE,SADX;AAEFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;AAFJ,OANM,CAAL,CAUJgB,IAVI,CAUC,UAASe,QAAT,EAAmB;AACvB,YAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,iBAAO,KAAP;AACD;;AACC,eAAO,IAAP;AACH,OAfI,EAgBJC,KAhBI,CAgBE,UAASC,KAAT,EAAgB;AACrBC,QAAAA,MAAM,CAACC,KAAP,CAAa,yDAAyDF,KAAK,CAACG,OAA5E;AACD,OAlBI,CAAP;AAmBD,KAtKkB;;AAAA,SAwKnBI,uBAxKmB,GAwKQC,QAAD,IAAc;AACtC,UAAIjC,OAAO,GAAG,EAAd;AACA,WAAKkC,KAAL,CAAW3C,IAAX,CAAgBC,OAAhB,CAAwB,UAASD,IAAT,EAAe;AACrCS,QAAAA,OAAO,CAACN,IAAR,CACEH,IAAI,CAAC0C,QAAD,CADN;AAGD,OAJD;AAKAjC,MAAAA,OAAO,CAACmC,IAAR,CAAa,KAAKC,OAAlB;AACA,WAAKhE,KAAL,CAAWiE,YAAX,CAAwB;AACtBC,QAAAA,MAAM,EAAEL,QAAQ,CAACrC,WAAT,EADc;AAEtBL,QAAAA,IAAI,EAAES;AAFgB,OAAxB;AAID,KApLkB;;AAAA,SAoMnBW,QApMmB,GAoMP4B,IAAD,IAAU;AACnB,WAAKnC,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE+B;AADG,OAAd;AAGA,WAAKnC,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA3MkB;;AAAA,SA6MnBgC,eA7MmB,GA6MD,CAACC,UAAD,EAAazC,OAAb,KAAyB;AACzC,WAAKI,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAES,OADM;AAEZ0C,QAAAA,OAAO,EAAED;AAFG,OAAd;AAIH,KAlNoB;;AAAA,SAoNnBE,iBApNmB,GAoNE,MAAM;AACzB,WAAKvC,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAG,KAAK2C,KAAL,CAAWxB,WADN;AAEZgC,QAAAA,OAAO,EAAG;AAFE,OAAd;AAID,KAzNkB;;AAAA,SA2NnBE,MA3NmB,GA2NV,MAAM;AACX,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAK,QAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,uBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,QAAQ,EAAI,KAAKvE,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAG,WAAb;AAAyB,QAAA,OAAO,EAAC,WAAjC;AAA6C,QAAA,KAAK,EAAC,SAAnD;AAA6D,QAAA,SAAS,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF,EAcE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAI;AACPwE,UAAAA,SAAS,EAAE,KADJ;AAEPC,UAAAA,MAAM,EAAG,KAFF;AAGPC,UAAAA,sBAAsB,EAAE,MAHjB;AAIPC,UAAAA,WAAW,EAAEjD,KAJN;AAKPkD,UAAAA,cAAc,EAAC;AALR,SADb;AAQE,QAAA,SAAS,EAAI,KAAKf,KAAL,CAAW7B,SAR1B;AASE,QAAA,OAAO,EAAI,KAAK6B,KAAL,CAAWzB,OATxB;AAUE,QAAA,IAAI,EAAG,KAAKyB,KAAL,CAAW3C,IAVpB;AAWE,QAAA,QAAQ,EAAI;AACV2D,UAAAA,QAAQ,EAAElD,OAAO,IAChB,IAAImD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BC,YAAAA,UAAU,CAAC,MAAM;AACV,mBAAKzB,WAAL,CAAiB7B,OAAjB,EAA0BO,IAA1B,CAA+BC,OAAO,IAAI;AACvC,oBAAGA,OAAH,EAAW;AACT,wBAAMjB,IAAI,GAAG,KAAK2C,KAAL,CAAW3C,IAAxB;AACEA,kBAAAA,IAAI,CAACG,IAAL,CAAUM,OAAV;AACA,uBAAKI,QAAL,CAAc;AAAEb,oBAAAA;AAAF,mBAAd,EAAwB,MAAM6D,OAAO,EAArC;AACD,uBAAKzC,QAAL,CAAc,IAAd;AAED,iBANF,MAMO;AACJ0C,kBAAAA,MAAM;AACN,uBAAK1C,QAAL,CAAc,KAAd;AACD;AACJ,eAXD;AAYN,aAbS,EAaP,IAbO,CAAV;AAcH,WAfD,CAFS;AAkBX4C,UAAAA,WAAW,EAAE,CAACvD,OAAD,EAAUwD,OAAV,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACb,mBAAKxB,cAAL,CAAoB9B,OAApB,EAA6BO,IAA7B,CAAkCC,OAAO,IAAI;AAC1C,oBAAGA,OAAH,EAAW;AACT,wBAAMjB,IAAI,GAAG,KAAK2C,KAAL,CAAW3C,IAAxB;AACA,wBAAMkE,KAAK,GAAGlE,IAAI,CAACmE,OAAL,CAAaF,OAAb,CAAd;AACAjE,kBAAAA,IAAI,CAACkE,KAAD,CAAJ,GAAczD,OAAd;AACA,uBAAKI,QAAL,CAAc;AAAEb,oBAAAA;AAAF,mBAAd,EAAwB,MAAM6D,OAAO,EAArC;AAE5B,uBAAKzC,QAAL,CAAc,IAAd;AAC4B,iBAPF,MAOO;AACJ0C,kBAAAA,MAAM;AACN,uBAAK1C,QAAL,CAAc,KAAd;AACD;AACJ,eAZD;AAaH,aAdS,EAcP,IAdO,CAAV;AAeD,WAhBD,CAnBS;AAoCXgD,UAAAA,WAAW,EAAEH,OAAO,IAClB,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACb,mBAAKvB,gBAAL,CAAsByB,OAAtB,EAA+BjD,IAA/B,CAAoCC,OAAO,IAAI;AAC5C,oBAAGA,OAAH,EAAW;AACT,sBAAIoD,KAAK,GAAG,KAAK1B,KAAL,CAAW3C,IAAvB;AACA,sBAAIsE,YAAY,GAAG,KAAK3B,KAAL,CAAWxB,WAA9B;AACAvB,kBAAAA,OAAO,CAACC,GAAR,CAAYwE,KAAZ;AACAzE,kBAAAA,OAAO,CAACC,GAAR,CAAYyE,YAAZ;AACA,wBAAMJ,KAAK,GAAGG,KAAK,CAACF,OAAN,CAAcF,OAAd,CAAd;AACA,wBAAMM,MAAM,GAAGD,YAAY,CAACH,OAAb,CAAqBF,OAArB,CAAf;AACAI,kBAAAA,KAAK,CAACG,MAAN,CAAaN,KAAb,EAAoB,CAApB;AACAI,kBAAAA,YAAY,CAACE,MAAb,CAAoBD,MAApB,EAA2B,CAA3B;AACA,uBAAK1D,QAAL,CAAc;AAAEwD,oBAAAA;AAAF,mBAAd,EAAyB,MAAMR,OAAO,EAAtC;AACAjE,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAK8C,KAAL,CAAWxB,WAAvB;AACA,uBAAKC,QAAL,CAAc,IAAd;AACA,iBAZF,MAYO;AACJ0C,kBAAAA,MAAM;AACP,uBAAK1C,QAAL,CAAc,KAAd;AACA;AACJ,eAjBD;AAkBH,aAnBS,EAmBP,IAnBO,CAAV;AAoBD,WArBD;AArCS,SAXd;AAuEG,QAAA,YAAY,EAAE;AACTjC,UAAAA,MAAM,EAAE;AACJsF,YAAAA,OAAO,EAAE;AADL,WADC;AAIT7C,UAAAA,IAAI,EAAE;AACF8C,YAAAA,sBAAsB,EAAE;AADtB;AAJG,SAvEjB;AA+EI,QAAA,UAAU,EAAE;AACJC,UAAAA,OAAO,EAAE9F,KAAK,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEI,oBAAC,SAAD;AAAW,YAAA,OAAO,EAAI,KAAK8D,KAAL,CAAWQ,OAAjC;AAA0C,YAAA,eAAe,EAAI,KAAKF,eAAlE;AAAmF,YAAA,iBAAiB,EAAI,KAAKG,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAFR,SA/EhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAsGE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAI,KAAKT,KAAL,CAAWzB,OAA7B;AAAsC,QAAA,uBAAuB,EAAI,KAAKuB,uBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtGF,CAFF,EA0GE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAG,KAAKE,KAAL,CAAW1B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1GF,CADF;AA8GD,KA1UgB;;AAEjB,SAAK0B,KAAL,GAAa;AACXzB,MAAAA,OAAO,EAAE,EADE;AAEXlB,MAAAA,IAAI,EAAE,EAFK;AAGXc,MAAAA,SAAS,EAAE,KAHA;AAIXG,MAAAA,OAAO,EAAC,IAJG;AAKXE,MAAAA,WAAW,EAAC,EALD;AAMXgC,MAAAA,OAAO,EAAC;AANG,KAAb;AAQD;;AA4KDN,EAAAA,OAAO,CAAC+B,CAAD,EAAIC,CAAJ,EAAO;AACZ,QAAI,OAAOD,CAAP,IAAa,QAAjB,EAA2B;AACzB,aAAOA,CAAC,GAAGC,CAAX;AACD,KAFD,MAEO;AACL,UAAID,CAAC,GAAGC,CAAR,EAAW;AACT,eAAO,CAAP;AACD;;AACD,UAAIA,CAAC,GAAGD,CAAR,EAAW;AACT,eAAO,CAAC,CAAR;AACD;;AACD,aAAO,CAAP;AACD;AACF;;AAnM2B;;AA8U9B,MAAMpE,KAAK,GAAG;AAAEsE,EAAAA,OAAO,EAAC;AAAV,CAAd;AAGA,eAAenG,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport SearchBar from './SearchBar';\nimport Papa from 'papaparse';\nimport { default as Modal } from '../feedback/Modal';\nimport { default as Alert } from '../feedback/Alert';\n\n/*\nRepresents visual representation of actual database.\n*/\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      isLoading: false,\n      success:null,\n      defaultData:[],\n      keyword:''\n    };\n  }\n\n  parseCsv = (event) => {\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true,\n      complete: this.updateTable\n    });\n  }\n\n  parseData_table = (result) => {\n\n    var parsedColumns = [];\n    var parsedData = [];\n\n    console.log(result.meta.fields);\n    console.log(result.data);\n    result.meta.fields.forEach(function(field) {\n      parsedColumns.push({\n        title: field.toUpperCase(),\n        field: field.toLowerCase(),\n        cellStyle: style,\n      });\n    });\n    (parsedColumns[0])['editable']='onAdd';\n\n    result.data.forEach(function(data) {\n      let newData = {};\n      for (var key in data) {\n        if (data.hasOwnProperty(key)) {\n          newData[key.toLowerCase()] = data[key];\n        }\n      }\n      parsedData.push(newData);\n    });\n    console.log(parsedColumns);\n    console.log(parsedData);\n    return {\n        newColumns : parsedColumns,\n        newData: parsedData\n    };\n  }\n\n  updateTable = (result) => {\n\n    const{ newColumns, newData } = this.parseData_table(result);\n\n    this.setState({\n      isLoading: true\n    });\n\n    this.addAllDataToDb(newData).then(success => {\n      if(success){\n        this.setState({\n          columns: newColumns,\n          data: newData,\n          defaultData: newData\n        });\n        this.setAlert(true);\n       } else{\n         this.setAlert(false);\n       }\n       this.setState({\n         isLoading: false\n       });\n    });//.catch(failureCallback);\n}\n\n  addAllDataToDb = (data) => {\n    return fetch(new Request('/db/addAll', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  addDataToDb = (data) => {\n    return fetch(new Request('/db/add', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  updateDataInDb = (data) => {\n    return fetch(new Request('/db/update', {\n        method: 'PUT',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  deleteDataFromDb = (data) => {\n    return fetch(new Request('/db/delete', {\n        method: 'DELETE',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  setSelectedCategoryData = (category) => {\n    var newData = [];\n    this.state.data.forEach(function(data) {\n      newData.push(\n        data[category]\n      );\n    });\n    newData.sort(this.compare);\n    this.props.setChartData({\n      column: category.toUpperCase(),\n      data: newData\n    });\n  }\n\n  compare(a, b) {\n    if (typeof(a) == \"number\") {\n      return a - b;\n    } else {\n      if (a > b) {\n        return 1;\n      }\n      if (b > a) {\n        return -1;\n      }\n      return 0;\n    }\n  }\n\n  setAlert = (bool) => {\n    this.setState({\n      success: bool\n    });\n    this.setState({\n      success: null\n    });\n  }\n\n  setSearchResult = (newKeyword, newData) => {\n    this.setState({\n      data: newData,\n      keyword: newKeyword\n    });\n}\n\n  resetSearchResult  = () => {\n    this.setState({\n      data : this.state.defaultData,\n      keyword : ''\n    });\n  }\n\n  render = () => {\n      return (\n        <div>\n          <h1>DB chart generator</h1>\n          <div className = 'Section'>\n            <input\n              id=\"contained-button-file\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange = {this.parseCsv}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button id = 'uploadBtn' variant=\"contained\" color=\"primary\" component=\"span\">\n                Upload CSV File\n              </Button>\n            </label>\n\n            <h2>Database Table</h2>\n            <MaterialTable\n              options = {{\n                  showTitle: false,\n                  search : false,\n                  toolbarButtonAlignment: 'left',\n                  headerStyle: style,\n                  addRowPosition:'first'\n              }}\n              isLoading = {this.state.isLoading}\n              columns = {this.state.columns}\n              data= {this.state.data}\n              editable = {{\n                onRowAdd: newData =>\n                 new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                            this.addDataToDb(newData).then(success => {\n                               if(success){\n                                 const data = this.state.data;\n                                   data.push(newData);\n                                   this.setState({ data }, () => resolve());\n                                  this.setAlert(true);\n\n                                } else{\n                                  reject();\n                                  this.setAlert(false);\n                                }\n                            });\n                     }, 1000);\n                 }),\n               onRowUpdate: (newData, oldData) =>\n                 new Promise((resolve, reject) => {\n                   setTimeout(() => {\n                       this.updateDataInDb(newData).then(success => {\n                          if(success){\n                            const data = this.state.data;\n                            const index = data.indexOf(oldData);\n                            data[index] = newData;\n                            this.setState({ data }, () => resolve());\n\nthis.setAlert(true);\n                           } else{\n                             reject();\n                             this.setAlert(false);\n                           }\n                       });\n                   }, 1000)\n                 }),\n               onRowDelete: oldData =>\n                 new Promise((resolve, reject) => {\n                   setTimeout(() => {\n                       this.deleteDataFromDb(oldData).then(success => {\n                          if(success){\n                            let data2 = this.state.data;\n                            let defaultData2 = this.state.defaultData;\n                            console.log(data2);\n                            console.log(defaultData2);\n                            const index = data2.indexOf(oldData);\n                            const index2 = defaultData2.indexOf(oldData);\n                            data2.splice(index, 1);\n                            defaultData2.splice(index2,1);\n                            this.setState({ data2 }, () => resolve());\n                            console.log(this.state.defaultData);\n                            this.setAlert(true);\n                           } else{\n                             reject();\n                            this.setAlert(false);\n                           }\n                       });\n                   }, 1000)\n                 }),\n               }}\n               localization={{\n                    header: {\n                        actions: ''\n                    },\n                    body: {\n                        emptyDataSourceMessage: 'No Data to Display',\n                    }\n                }}\n                components={{\n                        Toolbar: props => (\n                                    <div>\n                                      <MTableToolbar {...props} />\n                                        <SearchBar keyword = {this.state.keyword} setSearchResult = {this.setSearchResult} resetSearchResult = {this.resetSearchResult} />\n                                    </div>\n                                  )\n                }}\n             />\n            <Modal columns = {this.state.columns} setSelectedCategoryData = {this.setSelectedCategoryData}/>\n          </div>\n          <Alert success= {this.state.success}/>\n        </div>\n      );\n    }\n}\n\nconst style = { padding:'0 8px'}\n\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}