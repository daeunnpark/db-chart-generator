{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable, { MTableHeader } from 'material-table';\nimport MTableBodyRow from 'material-table';\nimport Groupbar from 'material-table';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\";\nimport Papa from 'papaparse';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n})); // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.search = () => {};\n\n    this.uploadCsvFile = event => {\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: this.updateTable\n      });\n    };\n\n    this.updateTable = result => {\n      var NewColumns = [];\n      var NewData = [];\n      result.meta.fields.forEach(function (field) {\n        NewColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase()\n        });\n      });\n      result.data.forEach(function (data) {\n        let newObject = {};\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            newObject[key.toLowerCase()] = data[key];\n          }\n        }\n\n        NewData.push(newObject);\n      });\n      this.setState({\n        columns: NewColumns,\n        data: NewData\n      });\n      this.saveAllToDb();\n    };\n\n    this.saveAllToDb = () => {\n      //this.setState({isLoading : true})\n      console.log(this.state.isLoading);\n      fetch(new Request('/db/addAllData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(this.state.data)\n      }).then(response => console.log).catch(error => console.error);\n      console.log(this.state.isLoading); //this.setState({isLoading:false})\n    };\n\n    this.addOrUpdateToDb = data => {\n      fetch(new Request('/db/addOrUpdateData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.deleteFromDb = data => {\n      fetch(new Request('/db/deleteData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.setData = () => {\n      console.log(\"SETDATA From TABLE\");\n      var NewData = [];\n      var column = \"name\";\n      this.state.data.forEach(function (data) {\n        NewData.push(data[column]);\n      });\n      NewData.sort(this.compare);\n      this.props.setData({\n        column: column.toUpperCase(),\n        data: NewData\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Ezops - DB chart generator\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        accept: \".csv\",\n        className: classes.input,\n        id: \"contained-button-file\",\n        onChange: this.uploadCsvFile,\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"raised-button-file\",\n        id: \"FileUploadBtn\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: this.uploadCsvFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Database Table\"), React.createElement(MaterialTable, {\n        options: {\n          grouping: true,\n          showTitle: false,\n          toolbarButtonAlignment: \"left\",\n          headerStyle: {\n            color: 'green'\n          }\n        },\n        isLoading: this.state.isLoading,\n        columns: this.state.columns,\n        data: this.state.data,\n        search: true,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                data.push(newData);\n                console.log(newData);\n                this.addOrUpdateToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.addOrUpdateToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.deleteFromDb(oldData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.setData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Update Charts\"));\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'id'\n      }, {\n        title: 'COL2',\n        field: 'col2'\n      }, {\n        title: 'COL3',\n        field: 'col3'\n      }, {\n        title: 'COL4',\n        field: 'col4'\n      }],\n      data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }],\n      isLoading: false\n    };\n  }\n\n  compare(a, b) {\n    if (typeof a == \"number\") {\n      return a - b;\n    } else {\n      if (a > b) {\n        return 1;\n      }\n\n      if (b > a) {\n        return -1;\n      }\n\n      return 0;\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","MTableHeader","MTableBodyRow","Groupbar","Input","Papa","makeStyles","Button","useStyles","theme","button","margin","spacing","input","display","Table","constructor","props","search","uploadCsvFile","event","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","result","NewColumns","NewData","meta","fields","forEach","field","push","title","toUpperCase","toLowerCase","data","newObject","key","hasOwnProperty","setState","columns","saveAllToDb","console","log","state","isLoading","fetch","Request","method","redirect","headers","Headers","credentials","body","JSON","stringify","then","response","catch","error","addOrUpdateToDb","deleteFromDb","setData","column","sort","compare","render","classes","grouping","showTitle","toolbarButtonAlignment","headerStyle","color","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","id","col2","col3","col4","a","b"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable, {MTableHeader}from 'material-table';\n\nimport MTableBodyRow from 'material-table';\nimport Groupbar from 'material-table';\n\n\n\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\"\n\nimport Papa from 'papaparse';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\n\n\n// default param in const?\nclass Table extends Component {\nconstructor(props) {\n  super(props);\n  // Default\n  this.state = {\n    columns: [{\n        title: 'ID',\n        field: 'id'\n      },\n      {\n        title: 'COL2',\n        field: 'col2'\n      },\n      {\n        title: 'COL3',\n        field: 'col3'\n      },\n      {\n        title: 'COL4',\n        field: 'col4'\n      },\n    ],\n\n    data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      },\n      {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      },\n    ],\n    isLoading: false\n\n  };\n}\n\nsearch = () =>{\n\n\n}\n\nuploadCsvFile = (event) => {\n  Papa.parse(event.target.files[0], {\n    header: true,\n    skipEmptyLines: true,\n    dynamicTyping: true,\n    complete: this.updateTable\n  });\n}\n\n\nupdateTable = (result) => {\n\n  var NewColumns = [];\n  var NewData = [];\n\n  result.meta.fields.forEach(function(field) {\n    NewColumns.push({\n      title: field.toUpperCase(),\n      field: field.toLowerCase(),\n    });\n  });\n\n  result.data.forEach(function(data) {\n    let newObject = {};\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        newObject[key.toLowerCase()] = data[key]\n      }\n    }\n    NewData.push(newObject);\n  });\n\n  this.setState({\n    columns: NewColumns,\n    data: NewData\n  });\n\n  this.saveAllToDb();\n}\n\n\nsaveAllToDb = () => {\n\n  //this.setState({isLoading : true})\n  console.log(this.state.isLoading);\n\n  fetch(new Request('/db/addAllData', {\n      method: 'POST',\n      redirect: 'follow',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }), {\n      credentials: 'include',\n      body: JSON.stringify(this.state.data)\n    })\n    .then(response => console.log)\n    .catch(error => console.error)\n\n  console.log(this.state.isLoading);\n  //this.setState({isLoading:false})\n\n}\n\n\naddOrUpdateToDb = (data) => {\n\n  fetch(new Request('/db/addOrUpdateData', {\n      method: 'POST',\n      redirect: 'follow',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }), {\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(response => console.log)\n    .catch(error => console.error)\n\n}\n\n\ndeleteFromDb = (data) => {\n\n  fetch(new Request('/db/deleteData', {\n      method: 'POST',\n      redirect: 'follow',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }), {\n      credentials: 'include',\n      body: JSON.stringify(data)\n    })\n    .then(response => console.log)\n    .catch(error => console.error)\n\n}\n\n\nsetData = () => {\n  console.log(\"SETDATA From TABLE\");\n\n  var NewData = [];\n  var column = \"name\";\n\n  this.state.data.forEach(function(data) {\n    NewData.push(\n      data[column]\n    );\n  });\n\n  NewData.sort(this.compare);\n  this.props.setData({\n    column: column.toUpperCase(),\n    data: NewData\n  });\n}\n\ncompare(a, b) {\n  if (typeof(a) == \"number\")  {\n    return a - b;\n  } else {\n    if (a > b) {\n           return 1;\n       }\n       if (b > a) {\n           return -1;\n       }\n       return 0;\n  }\n}\n\n  render = () => {\n      return (\n        <div>\n        <h2>Ezops - DB chart generator</h2>\n        <div>\n          <input\n                  accept=\".csv\"\n                  className={classes.input}\n                  id=\"contained-button-file\"\n                  onChange = {this.uploadCsvFile}\n\n                  type=\"file\"\n                />\n          <input\n              id=\"raised-button-file\"\n                  id  = \"FileUploadBtn\"\n                  type=\"file\"\n                  accept=\".csv\"\n                onChange = {this.uploadCsvFile}\n          />\n        </div>\n\n          <h3>Database Table</h3>\n          <MaterialTable\n             options={{\n              grouping:true,\n                showTitle: false,\n                toolbarButtonAlignment: \"left\",\n                headerStyle: {color: 'green'}\n              }}\n\n            isLoading={this.state.isLoading}\n            columns={this.state.columns}\n            data={this.state.data}\n            search= {true}\n\n           editable={{\n             onRowAdd: newData =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n                     const data = this.state.data;\n                     data.push(newData);\n                     console.log(newData);\n                     this.addOrUpdateToDb(newData);\n\n                     this.setState({ data }, () => resolve());\n\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n             onRowUpdate: (newData, oldData) =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n                     const data = this.state.data;\n                     const index = data.indexOf(oldData);\n                     data[index] = newData;\n                     this.addOrUpdateToDb(newData);\n                     this.setState({ data }, () => resolve());\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n             onRowDelete: oldData =>\n               new Promise((resolve, reject) => {\n                 setTimeout(() => {\n                   {\n                     let data = this.state.data;\n                     const index = data.indexOf(oldData);\n                     data.splice(index, 1);\n                     this.deleteFromDb(oldData);\n\n                     this.setState({ data }, () => resolve());\n                   }\n                   resolve()\n                 }, 1000)\n               }),\n             }}\n           />\n           <Button variant=\"contained\" color=\"primary\"  className={classes.button} onClick = {this.setData}>\n        Update Charts\n       </Button>\n      </div>\n      );\n      }\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}