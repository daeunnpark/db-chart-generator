{"ast":null,"code":"import _objectSpread from \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setData = newState => {\n      console.log(\"HEEEEREEEE\");\n      console.log(this.state.data[0].ID);\n      console.log(this.state.data[1].ID);\n      this.props.setData({\n        columns: [this.state.columns[1].title, this.state.columns[2].title, this.state.columns[3].title],\n        data: this.state.data\n      }); //  data [];\n      //series[{}, {},{}];\n\n      this.setState(newState);\n    };\n\n    this.render = () => {\n      return React.createElement(MaterialTable, {\n        title: \"Editable Example\",\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.setData(this.state);\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.setData(this.state); //\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState(_objectSpread({}, this.state, {\n                data\n              }));\n              this.setData(this.state);\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'ID'\n      }, {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        ID: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        ID: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }]\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"DID MOUNTTT\"); //console.log(this.state);\n\n    this.setData(this.state);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Table","constructor","props","setData","newState","console","log","state","data","ID","columns","title","setState","render","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","field","type","col2","col3","col4","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\n\n\n// default param in const?\nclass Table extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        columns : [\n          { title: 'ID', field: 'ID' },\n          { title: 'COL2', field: 'col2', type: 'numeric'},\n          { title: 'COL3', field: 'col3', type: 'numeric' },\n          { title: 'COL4', field: 'col4', type: 'numeric' },\n        ],\n\n        data: [\n          { ID: \"A\", col2: 80, col3: 30, col4: 40 },\n          { ID: \"B\", col2: 30, col3: 20,col4: 10 },\n        ]\n      };\n    }\n\n    setData = (newState) => {\n      console.log(\"HEEEEREEEE\");\n\n      console.log(this.state.data[0].ID);\n      console.log(this.state.data[1].ID);\n\n\n      this.props.setData({\n        columns: [\n              this.state.columns[1].title,\n              this.state.columns[2].title,\n              this.state.columns[3].title\n            ],\n        data: this.state.data\n\n        });\n      //  data [];\n\n\n      //series[{}, {},{}];\n      this.setState(newState);\n\n    }\n\n\n\n    componentDidMount(){\n    console.log(\"DID MOUNTTT\");\n      //console.log(this.state);\n        this.setData(this.state);\n    }\n\n  render = () => {\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={this.state.columns}\n      data={this.state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.push(newData);\n              this.setState({ ...this.state, data });\n              this.setData(this.state);\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState({ ...this.state, data });\n              this.setData(this.state);               //\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState({ ...this.state, data });\n              this.setData(this.state);\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}