{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/chart/Chart.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport * as defaultOptions from '../../constant/chartOptions';\n\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\n\nrequire('highcharts/modules/no-data-to-display.js')(Highcharts);\n\nconst source = defaultOptions.SOURCE;\nconst defaultOptions_bar = defaultOptions.BAR;\nconst defaultOptions_pie = defaultOptions.PIE;\n/*\nRepresents chart section containig a bar chart and a pie chart.\n*/\n\nclass Chart extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.parseData = props => {\n      var counts = this.countFrequency(props.data);\n      return {\n        newColumn: props.column,\n        newCategories: Object.keys(counts),\n        newBarChartData: Object.values(counts),\n        newPieChartData: this.parseData_helper(counts)\n      };\n    };\n\n    this.parseData_helper = counts => {\n      var arr = [];\n      Object.keys(counts).forEach(function (key) {\n        let dataObject = {};\n        dataObject = {\n          name: key,\n          y: counts[key]\n        };\n        arr.push(dataObject);\n      });\n      return arr;\n    };\n\n    this.countFrequency = arr => {\n      var counts = {};\n\n      for (var i = 0; i < arr.length; i++) {\n        var data = arr[i];\n        counts[data] = counts[data] ? counts[data] + 1 : 1;\n      }\n\n      return counts;\n    };\n\n    this.setChartData = (newColumn, newCategories, newBarChartData, newPieChartData) => {\n      this.setState({\n        barChart: {\n          title: {\n            text: newColumn\n          },\n          subtitle: {\n            text: source\n          },\n          xAxis: {\n            visible: true,\n            categories: newCategories\n          },\n          yAxis: {\n            visible: true\n          },\n          series: [{\n            name: newColumn,\n            data: newBarChartData\n          }]\n        },\n        pieChart: {\n          title: {\n            text: newColumn\n          },\n          subtitle: {\n            text: source\n          },\n          series: [{\n            name: newColumn,\n            data: newPieChartData\n          }]\n        }\n      });\n    };\n\n    this.state = {\n      barChart: defaultOptions_bar,\n      pieChart: defaultOptions_pie\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      const _this$parseData = this.parseData(this.props),\n            newColumn = _this$parseData.newColumn,\n            newCategories = _this$parseData.newCategories,\n            newBarChartData = _this$parseData.newBarChartData,\n            newPieChartData = _this$parseData.newPieChartData;\n\n      this.setChartData(newColumn, newCategories, newBarChartData, newPieChartData);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Charts\"), React.createElement(\"div\", {\n      className: \"chartContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.barChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"chartContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.pieChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/chart/Chart.js"],"names":["React","Component","Highcharts","HighchartsReact","defaultOptions","require","source","SOURCE","defaultOptions_bar","BAR","defaultOptions_pie","PIE","Chart","constructor","props","parseData","counts","countFrequency","data","newColumn","column","newCategories","Object","keys","newBarChartData","values","newPieChartData","parseData_helper","arr","forEach","key","dataObject","name","y","push","i","length","setChartData","setState","barChart","title","text","subtitle","xAxis","visible","categories","yAxis","series","pieChart","state","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport * as defaultOptions from '../../constant/chartOptions';\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\nrequire('highcharts/modules/no-data-to-display.js')(Highcharts);\n\n\nconst source = defaultOptions.SOURCE;\nconst defaultOptions_bar = defaultOptions.BAR;\nconst defaultOptions_pie = defaultOptions.PIE;\n\n/*\nRepresents chart section containig a bar chart and a pie chart.\n*/\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart: defaultOptions_bar,\n      pieChart: defaultOptions_pie\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      const {\n        newColumn,\n        newCategories,\n        newBarChartData,\n        newPieChartData\n      } = this.parseData(this.props);\n      this.setChartData(newColumn, newCategories, newBarChartData, newPieChartData);\n    }\n  }\n\n  parseData = (props) => {\n    var counts = this.countFrequency(props.data);\n    return {\n      newColumn: props.column,\n      newCategories: Object.keys(counts),\n      newBarChartData: Object.values(counts),\n      newPieChartData: this.parseData_helper(counts)\n    };\n  }\n\n  parseData_helper = (counts) => {\n    var arr = [];\n    Object.keys(counts).forEach(function(key) {\n      let dataObject = {};\n      dataObject = {\n        name: key,\n        y: counts[key]\n      }\n      arr.push(dataObject);\n    });\n    return arr;\n  }\n\n  countFrequency = (arr) => {\n    var counts = {};\n    for (var i = 0; i < arr.length; i++) {\n      var data = arr[i];\n      counts[data] = counts[data] ? counts[data] + 1 : 1;\n    }\n    return counts;\n  }\n\n  setChartData = (newColumn, newCategories, newBarChartData, newPieChartData) => {\n    this.setState({\n      barChart: {\n        title: {\n          text: newColumn\n        },\n        subtitle: {\n          text: source\n        },\n        xAxis: {\n          visible:true,\n          categories: newCategories\n        },\n        yAxis: {\n          visible:true,\n        },\n        series: [{\n          name : newColumn,\n          data: newBarChartData\n        }]\n      },\n      pieChart: {\n        title: {\n          text: newColumn\n        },\n        subtitle: {\n          text: source\n        },\n        series: [{\n          name: newColumn,\n          data: newPieChartData\n        }]\n      }\n    });\n  }\n\n  render(){\n    return(\n      <div className= 'Section'>\n        <h2>Charts</h2>\n          <div className = 'chartContainer'>\n            <HighchartsReact\n              highcharts={Highcharts}\n              options = {this.state.barChart}/>\n            </div>\n          <div className = 'chartContainer'>\n            <HighchartsReact\n              highcharts={Highcharts}\n              options = {this.state.pieChart}/>\n            </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}