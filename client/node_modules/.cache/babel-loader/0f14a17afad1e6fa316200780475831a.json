{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { amber, green } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nconst S = messages.S;\nconst E = messages.E;\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon\n};\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = newState => () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render_Icon = () => {\n      console.log(\"ICON RENDERNGG\");\n      const classes = useStyles1();\n      const Icon = variantIcon[\"error\"];\n      return React.createElement(SnackbarContent, Object.assign({\n        \"aria-describedby\": \"client-snackbar\",\n        message: React.createElement(\"span\", {\n          id: \"client-snackbar\",\n          className: classes.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          className: clsx(classes.icon, classes.iconVariant),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), this.state.message),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }))]\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    };\n\n    this.render = () => {\n      const classes = useStyles2();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick({\n          vertical: 'top',\n          horizontal: 'center'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Top-Center\"), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: this.state.vertical,\n          horizontal: this.state.horizontal\n        },\n        key: \"\".concat(this.state.vertical, \",\").concat(this.state.horizontal),\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.render_Icon()));\n    };\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props.flag);\n      var msg = S;\n\n      if (this.props.flag == 1) {\n        msg = E;\n        console.log(msg);\n        console.log();\n      }\n\n      this.setState({\n        message: msg,\n        open: true\n      });\n      /*this.setState({message:E, open: true});*/\n    }\n  }\n\n}\n\nexport default Alert;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Alert.js"],"names":["React","Component","Button","Snackbar","CloseIcon","IconButton","SnackbarContent","messages","ErrorIcon","CheckCircleIcon","makeStyles","amber","green","clsx","S","E","useStyles1","theme","success","backgroundColor","error","palette","dark","info","primary","main","warning","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","useStyles2","margin","variantIcon","Alert","constructor","props","handleClick","newState","setState","open","handleClose","render_Icon","console","log","classes","Icon","state","onClose","other","render","vertical","horizontal","componentDidUpdate","prevProps","flag","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport * as messages from '../chartSettings/messages';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { amber, green } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nconst S = messages.S;\nconst E = messages.E;\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n};\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: ''\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props.flag);\n      var msg =S;\n        if(this.props.flag ==1){\n\n        msg = E;\n        console.log(msg);\n        console.log();\n      }\nthis.setState({ message: msg, open: true});\n      /*this.setState({message:E, open: true});*/\n\n    }\n\n  }\n\n\n  handleClick = newState => () => {\n    this.setState({ open: true });\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n\nrender_Icon = () => {\nconsole.log(\"ICON RENDERNGG\");\nconst classes = useStyles1();\nconst Icon = variantIcon[\"error\"];\nreturn (\n  <SnackbarContent\n\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {this.state.message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\n    render = () => {\nconst classes = useStyles2();\n      return (\n    <div>\n      <Button onClick={this.handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\n      <Snackbar\n        anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\n        key={`${this.state.vertical},${this.state.horizontal}`}\n        open={this.state.open}\n        autoHideDuration={3000}\n        onClose={this.handleClose}\n\n      >\n{this.render_Icon()}\n      </Snackbar>\n    </div>\n  );\n}\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}