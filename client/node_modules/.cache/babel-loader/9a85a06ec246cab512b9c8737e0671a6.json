{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\";\nimport Papa from 'papaparse'; // default param in const?\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // Default\n\n    this.saveToDb = () => {\n      this.setState({\n        isLoading: true\n      });\n      console.log(this.state.isLoading);\n      fetch(new Request('/demo/addAllData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(this.state.data)\n      }).then(response => console.log).catch(error => console.error);\n      console.log(this.state.isLoading); //,this.setState({isLoading:false})\n    };\n\n    this.addToDb = data => {\n      fetch(new Request('/demo/addOrUpdateData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.deleteFromDb = data => {\n      //event.preventDefault();\n      console.log(\"called\");\n      fetch(new Request('/demo/deleteData', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => console.log).catch(error => console.error);\n    };\n\n    this.setData = () => {\n      console.log(\"SETDATA From TABLE\");\n      var NewColumns = [];\n      var NewData = [];\n      this.state.columns.forEach(function (column) {\n        NewColumns.push(column.title);\n      });\n      NewData = this.state.data;\n      this.props.setData({\n        columns: NewColumns,\n        data: NewData\n      });\n    };\n\n    this.uploadCsvFile = event => {\n      event.preventDefault();\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: this.updateTable\n      });\n    };\n\n    this.updateTable = result => {\n      var NewColumns = [];\n      var NewData = [];\n      result.meta.fields.forEach(function (field) {\n        NewColumns.push({\n          title: field.toUpperCase(),\n          field: field.toLowerCase()\n        });\n      });\n      result.data.forEach(function (data) {\n        let newObject = {};\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            newObject[key.toLowerCase()] = data[key];\n          }\n        }\n\n        NewData.push(newObject);\n      });\n      this.setState({\n        columns: NewColumns,\n        data: NewData\n      });\n      this.saveToDb();\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Ezops - DB chart generator\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"raised-button-file\",\n        id: \"FileUploadBtn\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: this.uploadCsvFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Database Table\"), React.createElement(MaterialTable, {\n        options: {\n          showTitle: false,\n          toolbarButtonAlignment: \"left\"\n        },\n        isLoading: this.state.isLoading,\n        columns: this.state.columns,\n        data: this.state.data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                data.push(newData);\n                console.log(newData);\n                this.addToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const data = this.state.data;\n                const index = data.indexOf(oldData);\n                data[index] = newData;\n                this.addToDb(newData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                let data = this.state.data;\n                const index = data.indexOf(oldData);\n                data.splice(index, 1);\n                this.deleteFromDb(oldData);\n                this.setState({\n                  data\n                }, () => resolve());\n              }\n              resolve();\n            }, 1000);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.setData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"UpdateChart\"));\n    };\n\n    this.state = {\n      columns: [{\n        title: 'ID',\n        field: 'id'\n      }, {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      }, {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      }, {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      }],\n      data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      }, {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      }],\n      isLoading: false\n    };\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Table.js"],"names":["React","Component","MaterialTable","Button","Input","Papa","Table","constructor","props","saveToDb","setState","isLoading","console","log","state","fetch","Request","method","redirect","headers","Headers","credentials","body","JSON","stringify","data","then","response","catch","error","addToDb","deleteFromDb","setData","NewColumns","NewData","columns","forEach","column","push","title","uploadCsvFile","event","preventDefault","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","result","meta","fields","field","toUpperCase","toLowerCase","newObject","key","hasOwnProperty","render","showTitle","toolbarButtonAlignment","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","type","id","col2","col3","col4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\"\n\nimport Papa from 'papaparse';\n\n// default param in const?\nclass Table extends Component {\nconstructor(props) {\n  super(props);\n  // Default\n  this.state = {\n    columns: [{\n        title: 'ID',\n        field: 'id'\n      },\n      {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      },\n      {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      },\n      {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      },\n    ],\n\n    data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      },\n      {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      },\n    ],\n    isLoading: false\n  };\n}\n\n\nsaveToDb = () => {\n\nthis.setState({isLoading : true})\nconsole.log(this.state.isLoading);\n\nfetch(new Request('/demo/addAllData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(this.state.data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\nconsole.log(this.state.isLoading);\n//,this.setState({isLoading:false})\n\n}\n\n\naddToDb = (data) => {\n\n\nfetch(new Request('/demo/addOrUpdateData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\ndeleteFromDb = (data) => {\n  //event.preventDefault();\n\nconsole.log(\"called\");\n\nfetch(new Request('/demo/deleteData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\n\n\n// Table To Parent APP\nsetData = () => {\n  console.log(\"SETDATA From TABLE\");\n\n  var NewColumns = [];\n  var NewData = [];\n\n  this.state.columns.forEach(function(column) {\n    NewColumns.push(\n      column.title\n    );\n  });\n\n  NewData = this.state.data;\n\n  this.props.setData({\n    columns: NewColumns,\n    data: NewData\n  });\n\n}\n\n\nuploadCsvFile = (event) => {\n  event.preventDefault();\n\n  Papa.parse(event.target.files[0], {\n    header: true,\n    skipEmptyLines: true,\n    dynamicTyping: true,\n    complete: this.updateTable\n  });\n}\n\n\nupdateTable = (result) => {\n\n  var NewColumns = [];\n  var NewData = [];\n\n  result.meta.fields.forEach(function(field) {\n    NewColumns.push({\n      title: field.toUpperCase(),\n      field: field.toLowerCase()\n    });\n  });\n\n  result.data.forEach(function(data) {\n    let newObject = {};\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        newObject[key.toLowerCase()] = data[key]\n      }\n    }\n    NewData.push(newObject);\n  });\n\n  this.setState({\n    columns: NewColumns,\n    data: NewData\n  });\n\n  this.saveToDb();\n\n}\n    render = () => {\n        return (\n          <div>\n          <h2>Ezops - DB chart generator</h2>\n          <div>\n            <Input\n                id=\"raised-button-file\"\n                    id  = \"FileUploadBtn\"\n                    type=\"file\"\n                    accept=\".csv\"\n                  onChange = {this.uploadCsvFile}\n            />\n          </div>\n\n            <h3>Database Table</h3>\n            <MaterialTable\n               options={{\n                  showTitle: false,\n                  toolbarButtonAlignment: \"left\"\n                }}\n              isLoading={this.state.isLoading}\n               columns={this.state.columns}\n               data={this.state.data}\n               editable={{\n                 onRowAdd: newData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         data.push(newData);\n                         console.log(newData);\n                         this.addToDb(newData);\n\n                         this.setState({ data }, () => resolve());\n\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowUpdate: (newData, oldData) =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data[index] = newData;\n                         this.addToDb(newData);\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowDelete: oldData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         let data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data.splice(index, 1);\n                         this.deleteFromDb(oldData);\n\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n               }}\n             />\n           <button onClick = {this.setData}>UpdateChart</button>\n        </div>\n        );\n        }\n}\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}