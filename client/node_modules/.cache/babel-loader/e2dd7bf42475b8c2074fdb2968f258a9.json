{"ast":null,"code":"var _jsxFileName = \"/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\n\nclass Dialog2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = index => {\n      const temp = this.state.columns;\n      console.log(\"index issss\" + index);\n      console.log(temp[index]);\n      temp.forEach(function (item, i) {\n        if (i == index) {\n          console.log(\"item at\" + i);\n          temp.isChecked = !temp.isChecked;\n          console.log(temp.isChecked);\n        } else {\n          temp.isChecked = false;\n        }\n      });\n      console.log(temp);\n      this.setState({\n        columns: temp\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      const temp = this.state.columns;\n      temp.map(column => column.isChecked = false);\n      this.setState({\n        columns: temp,\n        open: false\n      });\n    };\n\n    this.handleOk = () => {\n      var temp = this.state.columns.filter(column => column.isChecked)[0];\n      this.props.setCheckbox(temp);\n      this.setState({\n        open: false\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Update Charts\"), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Choose categories to generate charts.\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(RadioGroup, {\n        \"aria-label\": \"Gender\",\n        name: \"gender1\",\n        className: classes.group,\n        value: value,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"female\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }),\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"male\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"other\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }),\n        label: \"Other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"disabled\",\n        disabled: true,\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }),\n        label: \"(Disabled option)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Ok\"))));\n    };\n\n    this.state = {\n      open: false,\n      columns: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\");\n\n    if (prevProps !== this.props) {\n      /*\n            this.props.columns.map((column) =>(\n              column.isChecked = false\n              ));\n      */\n      this.setState({\n        columns: this.props.columns\n      });\n    }\n  }\n\n}\n\nexport default Dialog2;","map":{"version":3,"sources":["/Users/Daeun/Desktop/db-chart-generator/src/main/js/src/components/Dialog2.js"],"names":["React","Component","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","MenuItem","Select","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","Dialog2","constructor","props","handleChange","index","temp","state","columns","console","log","forEach","item","i","isChecked","setState","handleClickOpen","open","handleClose","map","column","handleOk","filter","setCheckbox","render","classes","group","value","componentDidUpdate","prevProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n/*\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n*/\nclass Dialog2 extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      columns:[]\n\n    };\n  }\n  componentDidUpdate(prevProps) {\n    console.log(\"UPDATEEE\");\n    if (prevProps !== this.props) {\n\n/*\n      this.props.columns.map((column) =>(\n        column.isChecked = false\n        ));\n*/\n      this.setState({columns:this.props.columns})\n    }\n\n\n}\n  handleChange = (index) => {\n\n    const temp = this.state.columns;\n\n  console.log(\"index issss\"+index);\n  console.log(temp[index]);\n\n    temp.forEach(function (item, i) {\n      if(i==index){\n      console.log(\"item at\" + i);\n\n      temp.isChecked = !temp.isChecked;\n    console.log(temp.isChecked);\n    }else{\n      temp.isChecked = false;\n}\n    });\nconsole.log(temp);\n\n\n    this.setState({ columns: temp});\n\n }\n\n  handleClickOpen = () =>{\n    this.setState({ open: true });\n\n  }\n\n  handleClose =  () =>{\n    const temp = this.state.columns;\n      temp.map((column) =>(\n      column.isChecked = false ))\n\n    this.setState({ columns : temp, open: false });\n  }\n\n  handleOk =  () =>{\n    var temp = this.state.columns.filter(column => column.isChecked)[0];\n    this.props.setCheckbox(temp);\n    this.setState({  open: false });\n  }\n\n\n\n  render = () => {\n      return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\"  onClick={this.handleClickOpen}>Update Charts</Button>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n        <DialogTitle>Choose categories to generate charts.</DialogTitle>\n        <DialogContent>\n          <form>\n          <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Gender</FormLabel>\n        <RadioGroup\n          aria-label=\"Gender\"\n          name=\"gender1\"\n          className={classes.group}\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n          <FormControlLabel\n            value=\"disabled\"\n            disabled\n            control={<Radio />}\n            label=\"(Disabled option)\"\n          />\n        </RadioGroup>\n      </FormControl>\n\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOk} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n}\n\n\nexport default Dialog2;\n"]},"metadata":{},"sourceType":"module"}