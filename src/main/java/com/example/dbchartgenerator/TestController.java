package com.example.dbchartgenerator;

import java.util.Map;
import java.util.HashMap;


import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;



//import org.hibernate.Session;

import org.hibernate.SessionFactory;
import org.hibernate.Transaction;


import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.beans.factory.annotation.Autowired;


import com.example.dbchartgenerator.Model.Data;

import com.example.dbchartgenerator.Model.DataRepository;


@RestController
@RequestMapping(path="/demo")
public class TestController {
  @Autowired // This means to get the bean called userRepository
             // Which is auto-generated by Spring, we will use it to handle the data
  private DataRepository dataRepository;

  	@GetMapping(path="/add") // Map ONLY GET Requests
  	public @ResponseBody String addNewUser (@RequestParam String name
  			, @RequestParam String email) {
  		// @ResponseBody means the returned String is the response, not a view name
  		// @RequestParam means it is a parameter from the GET or POST request


          //SessionFactory sessionFactory = entityManagerFactory.unwrap(SessionFactory.class);
/*
          SessionFactory sessionFactory = entityManager.getEntityManagerFactory().unwrap( SessionFactory.class );

          Session s =  sessionFactory.openSession();
          Transaction tx = s.beginTransaction();

          // Create a customer
          Map david = new HashMap();
          david.put("name", "David");


          s.save("Customer", david);

          tx.commit();

      		//close session
      		s.close();


      		//close session factory
      		sessionFactory.close();
          */



  		Data n = new Data();

      n.setCol1(name);
      n.setCol2(email);

  		dataRepository.save(n);

  		return "Saved";
  	}

  	@GetMapping(path="/all")
  	public @ResponseBody Iterable<Data> getAllUsers() {
  		// This returns a JSON or XML with the users
  		return dataRepository.findAll();
  	}

}

/*
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
*/


/*
    @RequestMapping(value = "/echo")
    public String echo(@RequestParam (value = "request", defaultValue = "Hello!") String request) {

      return request;
    }

*/
