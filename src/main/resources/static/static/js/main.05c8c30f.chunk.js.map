{"version":3,"sources":["components/chart/Chart.js","constant/chartOptions.js","components/table/SearchBar.js","components/feedback/Modal.js","constant/styles.js","components/feedback/Alert.js","constant/messages.js","components/table/Table.js","App.js","serviceWorker.js","index.js"],"names":["require","Highcharts","source","defaultOptions_bar","chart","type","title","text","subtitle","xAxis","visible","categories","yAxis","min","tickInterval","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","groupPadding","shadow","series","showInLegend","colorByPoint","data","lang","noData","style","fontWeight","fontSize","color","defaultOptions_pie","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parseData","counts","countFrequency","newColumn","newCategories","keys","newBarChartData","values","newPieChartData","parseData_helper","arr","forEach","key","dataObject","name","y","push","i","length","setChartData","setState","barChart","pieChart","state","prevProps","console","log","_this$parseData","react_default","a","createElement","className","highcharts_react_min_default","highcharts","options","Component","SearchBar","handleChange","event","value","target","search","fetch","concat","credentials","method","then","response","ok","json","setSearchResult","catch","error","window","alert","message","iconClick","resetSearchResult","render","display","marginBottom","marginRight","TextField","id","label","onChange","margin","InputProps","endAdornment","InputAdornment","position","Close_default","onClick","alignSelf","Button","variant","keyword","Modal","handleOpen","open","handleOk","setSelectedCategoryData","handleClose","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","component","FormLabel","RadioGroup","aria-label","columns","map","FormControlLabel","field","control","Radio","DialogActions","ICONS","CheckCircleIcon","ErrorIcon","icons","styles","icon_styles","snackBarContent_styles","backgroundColor","alignItems","snackBarContent_styles_span","Alert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","messageWrapper","success","flag","prevState","newMessage","newFlag","Icon","snackbarContentStyle","SnackbarContent","action","IconButton","Table","parseCsv","Papa","parse","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","parseData_table","result","parsedColumns","parsedData","meta","fields","toUpperCase","toLowerCase","cellStyle","newData","hasOwnProperty","newColumns","_this$parseData_table","isLoading","addAllDataToDb","defaultData","setAlert","Request","redirect","headers","Headers","Content-Type","body","JSON","stringify","addDataToDb","updateDataInDb","deleteDataFromDb","category","sort","compare","bool","newKeyword","accept","htmlFor","dist_default","showTitle","toolbarButtonAlignment","headerStyle","addRowPosition","editable","onRowAdd","Promise","resolve","reject","setTimeout","data2","defaultData2","onRowUpdate","oldData","index","indexOf","index2","onRowDelete","splice","localization","actions","emptyDataSourceMessage","components","Toolbar","dist","table_SearchBar","feedback_Modal","feedback_Alert","b","padding","App","newState","Fragment","table_Table","chart_Chart","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05c8c30f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport * as defaultOptions from '../../constant/chartOptions';\nrequire('highcharts/modules/histogram-bellcurve')(Highcharts);\nrequire('highcharts/modules/no-data-to-display.js')(Highcharts);\n\n\nconst source = defaultOptions.SOURCE;\nconst defaultOptions_bar = defaultOptions.BAR;\nconst defaultOptions_pie = defaultOptions.PIE;\n\n/*\nRepresents chart section containig a bar chart and a pie chart.\n*/\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart: defaultOptions_bar,\n      pieChart: defaultOptions_pie\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"ttttt\");\n    if (prevProps !== this.props) {\n      console.log(\"rrrrr\");\n      const {\n        newColumn,\n        newCategories,\n        newBarChartData,\n        newPieChartData\n      } = this.parseData(this.props);\n      this.setChartData(newColumn, newCategories, newBarChartData, newPieChartData);\n    }\n  }\n\n  parseData = (props) => {\n    var counts = this.countFrequency(props.data);\n    return {\n      newColumn: props.column,\n      newCategories: Object.keys(counts),\n      newBarChartData: Object.values(counts),\n      newPieChartData: this.parseData_helper(counts)\n    };\n  }\n\n  parseData_helper = (counts) => {\n    var arr = [];\n    Object.keys(counts).forEach(function(key) {\n      let dataObject = {};\n      dataObject = {\n        name: key,\n        y: counts[key]\n      }\n      arr.push(dataObject);\n    });\n    return arr;\n  }\n\n  countFrequency = (arr) => {\n    var counts = {};\n    for (var i = 0; i < arr.length; i++) {\n      var data = arr[i];\n      counts[data] = counts[data] ? counts[data] + 1 : 1;\n    }\n    return counts;\n  }\n\n  setChartData = (newColumn, newCategories, newBarChartData, newPieChartData) => {\n    this.setState({\n      barChart: {\n        title: {\n          text: newColumn\n        },\n        subtitle: {\n          text: source\n        },\n        xAxis: {\n          visible:true,\n          categories: newCategories\n        },\n        yAxis: {\n          visible:true,\n        },\n        series: [{\n          name : newColumn,\n          data: newBarChartData\n        }]\n      },\n      pieChart: {\n        title: {\n          text: newColumn\n        },\n        subtitle: {\n          text: source\n        },\n        series: [{\n          name: newColumn,\n          data: newPieChartData\n        }]\n      }\n    });\n  }\n\n  render(){\n    return(\n      <div className= 'Section'>\n        <h2>Charts</h2>\n          <div className = 'chartContainer'>\n            <HighchartsReact\n              highcharts={Highcharts}\n              options = {this.state.barChart}/>\n            </div>\n          <div className = 'chartContainer'>\n            <HighchartsReact\n              highcharts={Highcharts}\n              options = {this.state.pieChart}/>\n            </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Chart;\n","// Constant variables for default chart options - Chart.js\n\nexport const SOURCE= 'Source: kaggle';\n\nexport const BAR = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Bar Chart'\n  },\n  subtitle: {\n    text: ''\n  },\n  xAxis: {\n    visible:false,\n    categories: []\n  },\n  yAxis: {\n    visible:false,\n    min: 0,\n    tickInterval: 1,\n    title: {\n      text: 'count(person)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n      '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0,\n      borderWidth: 1,\n      groupPadding: 0.2,\n      shadow: false\n    }\n  },\n  series: [{\n    showInLegend: false,\n    colorByPoint: true,\n    data: []\n  }],\n  lang: {\n        noData: \"No Data to Display\"\n    },\n  noData: {\n      style: {\n          fontWeight: 'bold',\n          fontSize: '15px',\n          color: '#303030'\n      }\n  }\n};\n\n\nexport const PIE = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Pie Chart'\n  },\n  subtitle: {\n    text: ''\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    colorByPoint: true,\n    data: []\n  }],\n  lang: {\n        noData: \"No Data to Display\"\n    },\n  noData: {\n      style: {\n          fontWeight: 'bold',\n          fontSize: '15px',\n          color: '#303030'\n      }\n  }\n};\n\n/*\nexport const HISTO require('highcharts/modules/histogram-bellcurve');\nexport const NODATA require('highcharts/modules/no-data-to-display.js');\n*/\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Reset from '@material-ui/icons/Close';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n/*\nRepresent search bar in the database.\n*/\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value : ''\n    };\n  }\n\n  componentDidMount() {\n      this.setState({\n        value: this.props.keyword\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  search = (event) => {\n      console.log(this.state.value);\n      fetch(`/db/search/?keyword=${this.state.value}`, {\n        credentials: 'include',\n        method: 'GET'\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n        //console.log(response.json());\n        return response.json();\n      })\n      .then((data) => {\n          console.log(data);\n          this.props.setSearchResult(this.state.value, data);\n          return data;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n\n  }\n\n  iconClick  = (event) => {\n    this.setState({\n      value : ''\n    });\n    this.props.resetSearchResult();\n  }\n\n  render = () => {\n      return (\n        <div style={{  display: 'inline-flex', marginBottom: 20}}>\n          <div style={{ marginBottom:15, marginRight:20}}>\n            <TextField\n              id=\"standard-name\"\n              label=\"keyword\"\n              onChange = {this.handleChange}\n              value = {this.state.value}\n              margin=\"normal\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Reset onClick = {this.iconClick}/>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div style={{ alignSelf: 'center'}}>\n            <Button variant=\"outlined\" color=\"inherit\" onClick = {this.search}>\n              Search\n            </Button>\n          </div>\n        </div>\n      );\n  }\n\n}\n\n/*\n<TextField\n       className={classes.margin}\n       id=\"input-with-icon-textfield\"\n       label=\"TextField\"\n       InputProps={{\n         startAdornment: (\n           <InputAdornment position=\"start\">\n             <AccountCircle />\n           </InputAdornment>\n         ),\n       }}\n     />\n*/\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport \"../../App.css\"\n\n/*\nRepresents the dialog followed by pressing Update Charts button.\n*/\nclass Modal extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      value: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        columns: this.props.columns\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      open: false\n    });\n    this.props.setSelectedCategoryData(this.state.value);\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render = () => {\n      return (\n          <div>\n            <Button id ='updateChartsBtn' variant=\"contained\" color=\"secondary\" onClick={this.handleOpen} className = 'Btn' > Update Charts</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n              <DialogTitle>Choose a category to generate charts.</DialogTitle>\n              <DialogContent>\n                <form>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Category</FormLabel>\n                  <RadioGroup\n                    aria-label=\"Category\"\n                    name=\"category\"\n                    value={this.state.value}\n                    onChange={this.handleChange}>\n                    { this.props.columns.map((column) =>(\n                        <FormControlLabel key = {column.field} value={column.field} control={<Radio />} label={column.title} /> ))\n                    }\n                  </RadioGroup>\n                </FormControl>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleOk} color=\"primary\">\n                  Ok\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n      }\n\n}\n\n\nexport default Modal;\n","// Constant variables for alert styling - Alert.js\n\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nexport const ICONS = [\n  CheckCircleIcon, ErrorIcon\n];\n\nexport const ICON_STYLES = {\n  marginRight: 10\n};\n\nexport const SNACKBARCONTENT_STYlES = [\n  {backgroundColor: 'blue', display: 'flex', alignItems: 'center'}, {backgroundColor: 'red' , display: 'flex', alignItems: 'center'}\n];\n\nexport const SNACKBARCONTENT_STYlES_SPAN = {\n  display: 'flex',\n  alignItems: 'center'\n};\n","import React, { Component } from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport * as messages from '../../constant/messages';\nimport * as styles from '../../constant/styles';\n\n/*\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n*/\n\nconst message_SUCCESS = messages.SUCCESS;\nconst message_ERROR = messages.ERROR;\n\nconst icons = styles.ICONS;\nconst icon_styles = styles.ICON_STYLES;\nconst snackBarContent_styles = styles.SNACKBARCONTENT_STYlES;\nconst snackBarContent_styles_span = styles.SNACKBARCONTENT_STYlES_SPAN;\n\n/*\nRepresents database update alert.\n*/\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      message: '',\n      success: null,\n      flag: 0\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (null !== this.props.success && prevProps !== this.props) {\n      const newMessage = this.props.success ? message_SUCCESS : message_ERROR;\n      const newFlag = this.props.success ? 0 : 1;\n      this.setState({\n        message: newMessage,\n        open: true,\n        flag: newFlag\n      });\n    }\n  }\n\n  messageWrapper(){\n      const Icon = icons[this.state.flag];\n      const snackbarContentStyle = snackBarContent_styles[this.state.flag];\n      return(\n          <SnackbarContent\n            style = {snackbarContentStyle}\n            message={\n              <span id=\"client-snackbar\" style = {snackBarContent_styles_span}>\n                <Icon style = {icon_styles}/>\n                {this.state.message}\n              </span>\n            }\n            action={[\n              <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n              <CloseIcon/>\n              </IconButton>\n            ]}\n          />\n      );\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  }\n\n  render = () => {\n      return (\n        <div>\n          <Snackbar\n            anchorOrigin={{vertical: this.state.vertical, horizontal: this.state.horizontal }}\n            open={this.state.open}\n            autoHideDuration={3000}\n            onClose={this.handleClose}\n          >\n           {this.messageWrapper()}\n          </Snackbar>\n        </div>\n      );\n  }\n\n}\n\n\nexport default Alert;\n","// Constant variables for alert messages - Alert.js\n\nexport const SUCCESS = 'Database has been successfully updated.';\nexport const ERROR = 'Error in the database. Please try again.';\n\n/*\nexport const SUCCESS_DB_ADD = 'Data is successfully added to the database.'\nexport const SUCCESS_DB_UPDATE = 'Data is successfully updated in the database.'\nexport const SUCCESS_DB_DELETE = 'Data is successfully deleted from the database.'\n\nexport const ERROR_DB_ADD = 'Error in the database - ID should be unique.'\nexport const ERROR_DB_UPDATE_DELETE = 'Error in the database. Please try again.'\n*/\n","import React, { Component } from 'react';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport SearchBar from './SearchBar';\nimport Papa from 'papaparse';\nimport { default as Modal } from '../feedback/Modal';\nimport { default as Alert } from '../feedback/Alert';\n\n/*\nRepresents visual representation of actual database.\n*/\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [],\n      data: [],\n      isLoading: false,\n      success:null,\n      defaultData:[],\n      keyword:''\n    };\n  }\n\n  parseCsv = (event) => {\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true,\n      complete: this.updateTable\n    });\n  }\n\n  parseData_table = (result) => {\n\n    var parsedColumns = [];\n    var parsedData = [];\n\n    console.log(result.meta.fields);\n    console.log(result.data);\n    result.meta.fields.forEach(function(field) {\n      parsedColumns.push({\n        title: field.toUpperCase(),\n        field: field.toLowerCase(),\n        cellStyle: style,\n      });\n    });\n    (parsedColumns[0])['editable']='onAdd';\n\n    result.data.forEach(function(data) {\n      let newData = {};\n      for (var key in data) {\n        if (data.hasOwnProperty(key)) {\n          newData[key.toLowerCase()] = data[key];\n        }\n      }\n      parsedData.push(newData);\n    });\n    console.log(parsedColumns);\n    console.log(parsedData);\n    return {\n        newColumns : parsedColumns,\n        newData: parsedData\n    };\n  }\n\n  updateTable = (result) => {\n\n    const{ newColumns, newData } = this.parseData_table(result);\n\n    this.setState({\n      isLoading: true\n    });\n\n    this.addAllDataToDb(newData).then(success => {\n      if(success){\n        this.setState({\n          columns: newColumns,\n          data: newData,\n          defaultData: newData,\n        });\n        this.setAlert(true);\n       } else{\n         this.setAlert(false);\n       }\n       this.setState({\n         isLoading: false\n       });\n    });//.catch(failureCallback);\n}\n\n  addAllDataToDb = (data) => {\n    return fetch(new Request('/db/addAll', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  addDataToDb = (data) => {\n    return fetch(new Request('/db/add', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  updateDataInDb = (data) => {\n    return fetch(new Request('/db/update', {\n        method: 'PUT',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  deleteDataFromDb = (data) => {\n    return fetch(new Request('/db/delete', {\n        method: 'DELETE',\n        redirect: 'follow',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }), {\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n      .then(function(response) {\n        if(!response.ok){\n          return false;\n        }\n          return true;\n      })\n      .catch(function(error) {\n        window.alert('There has been a problem with your fetch operation: ' + error.message);\n      });\n  }\n\n  setSelectedCategoryData = (category) => {\n    var newData = [];\n    this.state.data.forEach(function(data) {\n      newData.push(\n        data[category]\n      );\n    });\n    newData.sort(this.compare);\n    this.props.setChartData({\n      column: category.toUpperCase(),\n      data: newData\n    });\n  }\n\n  compare(a, b) {\n    if (typeof(a) == \"number\") {\n      return a - b;\n    } else {\n      if (a > b) {\n        return 1;\n      }\n      if (b > a) {\n        return -1;\n      }\n      return 0;\n    }\n  }\n\n  setAlert = (bool) => {\n    this.setState({\n      success: bool\n    });\n    this.setState({\n      success: null\n    });\n  }\n\n  setSearchResult = (newKeyword, newData) => {\n    this.setState({\n      data: newData,\n      keyword: newKeyword\n    });\n}\n\n  resetSearchResult  = () => {\n    this.setState({\n      data : this.state.defaultData,\n      keyword : ''\n    });\n  }\n\n  render = () => {\n      return (\n        <div>\n          <h1>DB chart generator</h1>\n          <div className = 'Section'>\n            <input\n              id=\"contained-button-file\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange = {this.parseCsv}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button id = 'uploadBtn' variant=\"contained\" color=\"primary\" component=\"span\">\n                Upload CSV File\n              </Button>\n            </label>\n\n            <h2>Database Table</h2>\n            <MaterialTable\n              options = {{\n                  showTitle: false,\n                  search : false,\n                  toolbarButtonAlignment: 'left',\n                  headerStyle: style,\n                  addRowPosition:'first'\n              }}\n              isLoading = {this.state.isLoading}\n              columns = {this.state.columns}\n              data= {this.state.data}\n              editable = {{\n                onRowAdd: newData =>\n                 new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                            this.addDataToDb(newData).then(success => {\n                               if(success){\n                                 const data2 = this.state.data;\n                                 const defaultData2 = this.state.defaultData;\n                                 data2.push(newData);\n                                 defaultData2.push(newData);\n\n                                 this.setState({ data: data2, defaultData:defaultData2 }, () => resolve());\n    console.log(this.state.defaultData);\n                                 this.setAlert(true);\n                                } else{\n                                  reject();\n                                  this.setAlert(false);\n                                }\n                            });\n                     }, 1000);\n                 }),\n               onRowUpdate: (newData, oldData) =>\n                 new Promise((resolve, reject) => {\n                   setTimeout(() => {\n                       this.updateDataInDb(newData).then(success => {\n                          if(success){\n                            const data2 = this.state.data;\n                            const defaultData2 = this.state.defaultData;\n                            const index = data2.indexOf(oldData);\n                            const index2 = defaultData2.indexOf(oldData);\n                          console.log(data2);\n                          console.log(defaultData2);\n                        console.log(\"index1 =\" + index +  \"index2 = \" + index2);\n                            data2[index] = newData;\n                            defaultData2[index2]=newData;\n                            this.setState({ data: data2, defaultData:defaultData2 }, () => resolve());\n\nthis.setAlert(true);\n                           } else{\n                             reject();\n                             this.setAlert(false);\n                           }\n                       });\n                   }, 1000)\n                 }),\n               onRowDelete: oldData =>\n                 new Promise((resolve, reject) => {\n                   setTimeout(() => {\n                       this.deleteDataFromDb(oldData).then(success => {\n                          if(success){\n                            let data2 = this.state.data;\n                            let defaultData2 = this.state.defaultData;\n                            const index = data2.indexOf(oldData);\n                            const index2 = defaultData2.indexOf(oldData);\n                            data2.splice(index, 1);\n                            defaultData2.splice(index2,1);\n                            this.setState({ data: data2, defaultData:defaultData2}, () => resolve());\n  console.log(this.state.defaultData);\n  this.setAlert(true);\n                           } else{\n                             reject();\n                            this.setAlert(false);\n                           }\n                       });\n                   }, 1000)\n                 }),\n               }}\n               localization={{\n                    header: {\n                        actions: ''\n                    },\n                    body: {\n                        emptyDataSourceMessage: 'No Data to Display',\n                    }\n                }}\n                components={{\n                        Toolbar: props => (\n                                    <div>\n                                      <MTableToolbar {...props} />\n                                        <SearchBar keyword = {this.state.keyword} setSearchResult = {this.setSearchResult} resetSearchResult = {this.resetSearchResult} />\n                                    </div>\n                                  )\n                }}\n             />\n            <Modal columns = {this.state.columns} setSelectedCategoryData = {this.setSelectedCategoryData}/>\n          </div>\n          <Alert success= {this.state.success}/>\n        </div>\n      );\n    }\n}\n\nconst style = { padding:'0 8px'}\n\n\nexport default Table;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chart from \"./components/chart/Chart\"\nimport Table from \"./components/table/Table\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      column: [],\n      data: [],\n    };\n  }\n\n  setChartData = (newState) => {\n    this.setState(newState);\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <Table setChartData = {this.setChartData}/>\n          <Chart column = {this.state.column} data = {this.state.data}/>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}