{"version":3,"sources":["components/SearchBar.js","components/Chart.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Component","bar_options","chart","type","title","text","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","name","data","pie_options","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","y","sliced","selected","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chartDataParser_bar","dataList","chartData","forEach","newObject","temp","values","slice","map","Number","push","chartDataParser_pie","category","sum","toLowerCase","setChartData","newCategories","newChartData_bar","newChartData_pie","setState","barChart_options","pieChart_options","state","prevProps","prevState","snapshot","columns","console","log","react_default","a","createElement","highcharts_react_min_default","highcharts","Highcharts","options","Table","saveToDb","isLoading","fetch","Request","method","redirect","headers","Headers","Content-Type","credentials","body","JSON","stringify","then","response","catch","error","addToDb","deleteFromDb","setData","NewData","NewColumns","uploadCsvFile","event","preventDefault","Papa","parse","target","files","header","skipEmptyLines","dynamicTyping","complete","updateTable","result","meta","fields","field","toUpperCase","key","hasOwnProperty","render","_React$createElement","Input","id","defineProperty","dist_default","showTitle","toolbarButtonAlignment","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","index","indexOf","onRowDelete","splice","onClick","col2","col3","col4","App","newState","handleChange","request","value","handleSubmit","Fragment","components_Table","components_Chart","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7daddacb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBar extends Component{\n  constructor(props){\n    super(props);\n\n    // Default values\n     this.state = {\n      keyword: ''\n    };\n\n  }\n\n  onChange = (event) => {\n\n    event.preventDefault();\n\n    const target = event.target;\n\n    // For checkbox type, value is a boolean\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n\n\n  }\n  onSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state.keyword);\n\n  }\n  render(){\n    return  <div className = \"searchEngine\">\n\n              <h3>Search</h3>\n\n              <form onSubmit={this.onSubmit}>\n                <div>\n                    <div className = \"container\">\n                      <div id = \"div1\" className=\"form-group\">\n                        <label className = \"label\">\n                          Text\n                        </label><br/>\n                        <input\n                          className = \"inputClass\"\n                          type=\"text\"\n                          name = \"keyword\"\n                          value = {this.state.keyword}\n                          onChange={this.onChange}\n                          required\n                          />\n                      </div>\n\n                  </div>\n\n                  <button type=\"submit\" className=\"btn btn-primary\">SEARCH</button>\n\n                </div>\n              </form>\n\n            </div>\n\n    }\n\n\n}\nexport default SearchBar;\n","import React, {\n  Component\n} from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\n\n\nconst bar_options = {\n  chart: {\n    type: 'column'\n  },\n  title: {\n    text: 'Monthly Average Rainfall'\n  },\n  subtitle: {\n    text: 'Source: WorldClimate.com'\n  },\n  xAxis: {\n    categories: [\n      'Jan',\n      'Feb',\n      'Mar',\n\n    ],\n    crosshair: true\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Rainfall (mm)'\n    }\n  },\n  tooltip: {\n    headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n    pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n      '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\n    footerFormat: '</table>',\n    shared: true,\n    useHTML: true\n  },\n  plotOptions: {\n    column: {\n      pointPadding: 0.2,\n      borderWidth: 0\n    }\n  },\n  series: [{\n    name: 'Tokyo',\n    data: [49.9, 71.5, 106.4]\n\n  }, {\n    name: 'New York',\n    data: [83.6, 78.8, 98.5]\n\n  }, {\n    name: 'London',\n    data: [48.9, 38.8, 39.3]\n\n  }, {\n    name: 'Berlin',\n    data: [42.4, 33.2, 34.5]\n\n  }]\n}\n\nconst pie_options = {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in January, 2018'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Brands',\n    colorByPoint: true,\n    data: [{\n      name: 'Chrome',\n      y: 65,\n      sliced: true,\n      selected: true\n    }, {\n      name: 'Internet Explorer',\n      y: 11.84\n    }, {\n      name: 'Firefox',\n      y: 10.85\n    }, {\n      name: 'Edge',\n      y: 4.67\n    }, {\n      name: 'Safari',\n      y: 4.18\n    }, {\n      name: 'Sogou Explorer',\n      y: 1.64\n    }, {\n      name: 'Opera',\n      y: 1.6\n    }, {\n      name: 'QQ',\n      y: 1.2\n    }, {\n      name: 'Other',\n      y: 2.61\n    }]\n  }]\n}\n\n\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChart_options: bar_options,\n      pieChart_options: pie_options\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (prevProps !== this.props) {\n      /*\n      console.log(\"props diff\");\n      console.log(prevProps);\n      console.log(this.props);\n      */\n\n      var newCategories = this.props.columns.slice(1);\n\n      var newChartData_bar = this.chartDataParser_bar(this.props.data);\n      var newChartData_pie = this.chartDataParser_pie(newCategories, this.props.data);\n\n      this.setChartData(newCategories, newChartData_bar, newChartData_pie);\n    }\n\n    if (prevState !== this.state) {\n      console.log(\"State diff\");\n      console.log(prevState);\n      console.log(this.state);\n    }\n\n  }\n\n\n\n  chartDataParser_bar = (dataList) => {\n\n    var chartData = [];\n\n    dataList.forEach(function(data) {\n      var temp = Object.values(data);\n      let newObject = {};\n      newObject = {\n        name: temp[0],\n        data: temp.slice(1, -1).map(Number)\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  chartDataParser_pie = (categories, dataList) => {\n\n    var chartData = [];\n\n    categories.forEach(function(category) {\n      let newObject = {};\n      var sum = 0;\n\n      dataList.forEach(function(data) {\n        sum += Number(data[category.toLowerCase()]);\n      });\n\n      newObject = {\n        name: category,\n        y: sum\n      }\n      chartData.push(newObject);\n    });\n\n    return chartData;\n\n  }\n\n\n  setChartData = (newCategories, newChartData_bar, newChartData_pie) => {\n\n    this.setState({\n      barChart_options: {\n        xAxis: {\n          categories: newCategories\n        },\n        series: newChartData_bar\n      },\n\n      pieChart_options: {\n        series: {\n          data: newChartData_pie\n        }\n      }\n    });\n\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Charts</h3>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.barChart_options}\n      />\n      <HighchartsReact\n        highcharts={Highcharts}\n        options = {this.state.pieChart_options}\n      />\n\n      </div>\n\n    );\n\n}\n}\nexport default Chart;\n","import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport \"../App.css\"\n\nimport Papa from 'papaparse';\n\n// default param in const?\nclass Table extends Component {\nconstructor(props) {\n  super(props);\n  // Default\n  this.state = {\n    columns: [{\n        title: 'ID',\n        field: 'id'\n      },\n      {\n        title: 'COL2',\n        field: 'col2',\n        type: 'numeric'\n      },\n      {\n        title: 'COL3',\n        field: 'col3',\n        type: 'numeric'\n      },\n      {\n        title: 'COL4',\n        field: 'col4',\n        type: 'numeric'\n      },\n    ],\n\n    data: [{\n        id: \"A\",\n        col2: 80,\n        col3: 30,\n        col4: 40\n      },\n      {\n        id: \"B\",\n        col2: 30,\n        col3: 20,\n        col4: 10\n      },\n    ],\n    isLoading: false\n  };\n}\n\n\nsaveToDb = () => {\n\nthis.setState({isLoading : true})\nconsole.log(this.state.isLoading);\n\nfetch(new Request('/demo/addAllData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(this.state.data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\nconsole.log(this.state.isLoading);\n//,this.setState({isLoading:false})\n\n}\n\n\naddToDb = (data) => {\n\n\nfetch(new Request('/demo/addOrUpdateData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\ndeleteFromDb = (data) => {\n  //event.preventDefault();\n\nconsole.log(\"called\");\n\nfetch(new Request('/demo/deleteData', {\n    method: 'POST',\n    redirect: 'follow',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }), {\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })\n  .then(response => console.log)\n  .catch(error => console.error)\n\n}\n\n\n\n\n// Table To Parent APP\nsetData = () => {\n  console.log(\"SETDATA From TABLE\");\n\n  var NewColumns = [];\n  var NewData = [];\n\n  this.state.columns.forEach(function(column) {\n    NewColumns.push(\n      column.title\n    );\n  });\n\n  NewData = this.state.data;\n\n  this.props.setData({\n    columns: NewColumns,\n    data: NewData\n  });\n\n}\n\n\nuploadCsvFile = (event) => {\n  event.preventDefault();\n\n  Papa.parse(event.target.files[0], {\n    header: true,\n    skipEmptyLines: true,\n    dynamicTyping: true,\n    complete: this.updateTable\n  });\n}\n\n\nupdateTable = (result) => {\n\n  var NewColumns = [];\n  var NewData = [];\n\n  result.meta.fields.forEach(function(field) {\n    NewColumns.push({\n      title: field.toUpperCase(),\n      field: field.toLowerCase()\n    });\n  });\n\n  result.data.forEach(function(data) {\n    let newObject = {};\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        newObject[key.toLowerCase()] = data[key]\n      }\n    }\n    NewData.push(newObject);\n  });\n\n  this.setState({\n    columns: NewColumns,\n    data: NewData\n  });\n\n  this.saveToDb();\n\n}\n    render = () => {\n        return (\n          <div>\n          <h2>Ezops - DB chart generator</h2>\n          <div>\n            <Input\n                id=\"raised-button-file\"\n                    id  = \"FileUploadBtn\"\n                    type=\"file\"\n                    accept=\".csv\"\n                  onChange = {this.uploadCsvFile}\n            />\n          </div>\n\n            <h3>Database Table</h3>\n            <MaterialTable\n               options={{\n                  showTitle: false,\n                  toolbarButtonAlignment: \"left\"\n                }}\n              isLoading={this.state.isLoading}\n               columns={this.state.columns}\n               data={this.state.data}\n               editable={{\n                 onRowAdd: newData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         data.push(newData);\n                         console.log(newData);\n                         this.addToDb(newData);\n\n                         this.setState({ data }, () => resolve());\n\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowUpdate: (newData, oldData) =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         const data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data[index] = newData;\n                         this.addToDb(newData);\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n                 onRowDelete: oldData =>\n                   new Promise((resolve, reject) => {\n                     setTimeout(() => {\n                       {\n                         let data = this.state.data;\n                         const index = data.indexOf(oldData);\n                         data.splice(index, 1);\n                         this.deleteFromDb(oldData);\n\n                         this.setState({ data }, () => resolve());\n                       }\n                       resolve()\n                     }, 1000)\n                   }),\n               }}\n             />\n           <button onClick = {this.setData}>UpdateChart</button>\n        </div>\n        );\n        }\n}\nexport default Table;\n","import React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport './App.css';\nimport SearchBar from \"./components/SearchBar\"\nimport Chart from \"./components/Chart\"\nimport Table from \"./components/Table\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [],\n      data: [],\n    };\n  }\n\n  setData = (newState) => {\n    console.log(\"SETDATA APP\");\n    this.setState(newState);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      request: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    //this.setData();\n    /*\n    var request = this.state.request.trim();\n    if (!request) {\n      return;\n    }\n    fetch(`/echo?request=${request}`)\n        .then(response => {\n          return response.text();\n        })\n        .then(body => {\n          alert(body);\n        });\n        */\n  }\n\n  render = () => {\n    return (\n      //<div className=\"App\">\n      <React.Fragment>\n\n      <Table setData = {this.setData}/>\n      <Chart columns = {this.state.columns} data = {this.state.data}/>\n\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n\n\n/**/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}